
#Область Информация

// Порядок создания тестов
//
// 1. В метод "ВыполнитьТестНаСервере" добавляется конкретный метод для тестирования отдельных правил
// 2. Логирование начинается с вызова метода ОткрытьЛогированиеТеста
// 3. Далее для вывода сообщений об ошибках используется метод ЗаписатьТекстЛога
//		- рекомендуется указывать имя объекта
// 4. Логирование завершается вызовом метода ЗакрытьЛогированиеТеста

#КонецОбласти 

#Область УправлениеФормой

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, ИмяРеквизита)

	Если НЕ Обработано.Найти(ИмяРеквизита) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Обработано.Добавить(ИмяРеквизита);

	Элементы	= Форма.Элементы;
	Объект		= Форма.Объект;

	#Область Наборы
	
	Если ИмяРеквизита = "РеквизитыВариантТестирования" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, "ИмяОбъектаМетаданных");
	КонецЕсли;

	#КонецОбласти
	
	#Область Элементы
	
	Если ИмяРеквизита = "ИмяОбъектаМетаданных" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ИмяОбъектаМетаданных", "Видимость", Форма.ВариантТестирования <= 2);
	КонецЕсли;

	#КонецОбласти 
	
	#Область ТабЧасть_Имя
	
	//Если ИмяРеквизита = "ИмяТабличнойЧастиОтветственный" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
	//		"ИмяТабличнойЧастиОтветственный", "ТолькоПросмотр", ЗначениеЗаполнено(Объект.Ответственный));
	//КонецЕсли;

	#КонецОбласти
	
	#Область Команды
	
	//Если ИмяРеквизита = "КомандаЗаполнить" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
	//		"ТаблицаФормыЗаполнить", "Видимость", НЕ Объект.Проведен);
	//КонецЕсли;

	#КонецОбласти 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьУсловноеОформление(Форма, ИменаРеквизитов = "")

	Если ТипЗнч(ИменаРеквизитов) = Тип("Строка") Тогда
		Если ПустаяСтрока(ИменаРеквизитов) Тогда
			МассивИмен = Новый Массив;
			МассивИмен.Добавить("");
		Иначе
			МассивИмен = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаРеквизитов, ",");
		КонецЕсли;
	ИначеЕсли ТипЗнч(ИменаРеквизитов) = Тип("Массив") Тогда
		МассивИмен = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ИменаРеквизитов);
	Иначе
		Возврат;
	КонецЕсли;
 
	//Форма.ТолькоПросмотр = (Форма.СостоянияЗаблокировано.Найти(Форма.СведенияОЗаявкеСостояние) <> Неопределено);

	Обработано = Новый Массив;
	Для Каждого ИмяРеквизита Из МассивИмен Цикл
		УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, СокрЛП(ИмяРеквизита));
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантТестированияПриИзменении(Элемент)
	
	УстановитьУсловноеОформление(ЭтотОбъект, "РеквизитыВариантТестирования");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИмя
#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокВыбораОбъектыМетаданныхНаСервере(Элементы.ИмяОбъектаМетаданных.СписокВыбора);
	
	Если Метаданные.Справочники.Найти("ПрофилиГруппДоступа") <> Неопределено Тогда
		ЭтотОбъект.ВариантТестирования = 1;
	КонецЕсли; 
	
	//ЭтаФорма.ИмяОбъектаМетаданных = "Документ.КорректировкаДолга";
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьУсловноеОформление(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьТест(Команда)
	Если ПустаяСтрока(ЭтаФорма.ИмяОбъектаМетаданных) Тогда 
		ПоказатьПредупреждение(, НСтр("ru='Выберите имя объекта для тестирования'"));
		Возврат;
	КонецЕсли;
	
	СтрРезультат = "";
	ВыполнитьТестНаСервере(СтрРезультат);
	СтрРезультат = НСтр("ru='ТЕСТИРОВАНИЕ ЗАВЕРШЕНО:'") + СтрРезультат;
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрРезультат);
КонецПроцедуры

#КонецОбласти

#Область ЗавершениеНемодальныхВызовов
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста 
Процедура ЗаполнитьСписокВыбораОбъектыМетаданныхНаСервере(СписокВыбора)
	
	Для Каждого МетаОбъект Из Метаданные.Справочники Цикл
		СписокВыбора.Добавить(МетаОбъект.ПолноеИмя(), СтрШаблон(НСтр("ru='Справочник.%1 (%2)'"), МетаОбъект.Представление(), МетаОбъект.Имя));
	КонецЦикла;
	Для Каждого МетаОбъект Из Метаданные.Документы Цикл
		СписокВыбора.Добавить(МетаОбъект.ПолноеИмя(), СтрШаблон(НСтр("ru='Документ.%1 (%2)'"), МетаОбъект.Представление(), МетаОбъект.Имя));
	КонецЦикла;
	Для Каждого МетаОбъект Из Метаданные.Отчеты Цикл
		СписокВыбора.Добавить(МетаОбъект.ПолноеИмя(), СтрШаблон(НСтр("ru='Отчет.%1 (%2)'"), МетаОбъект.Представление(), МетаОбъект.Имя));
	КонецЦикла;
	Для Каждого МетаОбъект Из Метаданные.Задачи Цикл
		СписокВыбора.Добавить(МетаОбъект.ПолноеИмя(), СтрШаблон(НСтр("ru='Задача.%1 (%2)'"), МетаОбъект.Представление(), МетаОбъект.Имя));
	КонецЦикла;
	Для Каждого МетаОбъект Из Метаданные.БизнесПроцессы Цикл
		СписокВыбора.Добавить(МетаОбъект.ПолноеИмя(), СтрШаблон(НСтр("ru='БизнесПроцесс.%1 (%2)'"), МетаОбъект.Представление(),  МетаОбъект.Имя));
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьТестНаСервере(ТекстЛога)
	Если НЕ ЭтоАдресВременногоХранилища(АдресХранилища) Тогда
		ТаблицаПрав = ТестированиеРолейПТБ.ПолучитьТаблицуПрав();
		АдресХранилища = ПоместитьВоВременноеХранилище(ТаблицаПрав, ЭтаФорма.УникальныйИдентификатор);
	Иначе 
		ТаблицаПрав = ПолучитьИзВременногоХранилища(АдресХранилища);
	КонецЕсли;
	
	//ТестированиеОбъектыБезУказанияРолейНаСервере(ТаблицаПрав, ТекстЛога);
	//ТестированиеРолиЧтениеВсегоНаСервере(ТаблицаПрав, ТекстЛога);
	//ТестированиеРолейСведенияОЗаявкаНаОплатуНаСервере(ТаблицаПрав, ТекстЛога);

	ТабличныйДокумент.Очистить();
	Если ЭтотОбъект.ВариантТестирования = 0 Тогда
		ТабДокумент = ТестированиеРолейОбъектаМетаданныхНаСервере(ТаблицаПрав, ЭтаФорма.ИмяОбъектаМетаданных, ТекстЛога);
	ИначеЕсли ЭтотОбъект.ВариантТестирования = 1 Тогда
		ТабДокумент = ТестированиеПрофилейОбъектаМетаданныхНаСервере(ТаблицаПрав, ЭтаФорма.ИмяОбъектаМетаданных, ТекстЛога);
	КонецЕсли;
	
	Если ТипЗнч(ТабДокумент) = Тип("ТабличныйДокумент") Тогда 
		ТабличныйДокумент.Вывести(ТабДокумент);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ТестированиеОбъектыБезУказанияРолей

&НаСервереБезКонтекста 
Процедура ТестированиеОбъектыБезУказанияРолейНаСервере(знач ТаблицаПрав, ТекстЛога)
	
	ОткрытьЛогированиеТеста(ТекстЛога, "ТестированиеОбъектыБезУказанияРолей");
	
	МассивМетаданных = ТестированиеРолейПТБКлиентСервер.ПолучитьМассивМетаданных();
	
	ЕстьОшибки = Ложь;
	Для Каждого ИмяКоллекции Из МассивМетаданных Цикл
		Если ИмяКоллекции = "Метаданные" Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого МетаОбъект Из Метаданные[ИмяКоллекции] Цикл
			ОбъектМетаданных = МетаОбъект.ПолноеИмя();
			Если ТаблицаПрав.Найти(ОбъектМетаданных, "ОбъектМетаданных") = Неопределено Тогда
				ЗаписатьТекстЛога(ТекстЛога, ОбъектМетаданных, НСтр("ru='Объект не представлен ни в одной из ролей.'"));
				ЕстьОшибки = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если НЕ ЕстьОшибки Тогда
		ЗаписатьТекстЛога(ТекстЛога, "Метаданные", НСтр("ru='ПРОВЕРЕНО'"));
	КонецЕсли;
	
	ЗакрытьЛогированиеТеста(ТекстЛога, "ТестированиеОбъектыБезУказанияРолей");
	
КонецПроцедуры

#КонецОбласти 

#Область ТестированиеРолиЧтениеВсего

&НаСервереБезКонтекста 
Процедура ТестированиеРолиЧтениеВсегоНаСервере(знач ТаблицаПрав, ТекстЛога)
	// БЕЛОПУХОВ
КонецПроцедуры

#КонецОбласти 

#Область ТестированиеРолейСведенияОЗаявкаНаОплату

&НаСервереБезКонтекста 
Процедура ТестированиеРолейСведенияОЗаявкаНаОплатуНаСервере(знач ТаблицаПрав, ТекстЛога)
	Перем СписокЛоги;
	
	//// 17.07.2018, Анисков А.А., п.4206
	//
	//// РегистрСведений.СведенияОЗаявках
	//// РегистрСведений.СведенияОЗаявкахУведомления
	//// РегистрСведений.СостоянияЗаявокНаОплату
	//
	//Роли_СведенияОЗаявках = Новый Структура;
	//ДобавитьНастройкуРольПрава(Роли_СведенияОЗаявках, "ДобавлениеИзменениеБанковскихДокументов",,, "Чтение,Изменение,Просмотр,Редактирование");
	//ДобавитьНастройкуРольПрава(Роли_СведенияОЗаявках, "ДобавлениеИзменениеЗаявокНаОплату",,, "Чтение,Изменение,Просмотр,Редактирование");
	//ДобавитьНастройкуРольПрава(Роли_СведенияОЗаявках, "ДобавлениеИзменениеЗаявокНаОплатуПодразделений",,, "Чтение,Изменение,Просмотр,Редактирование");
	//ДобавитьНастройкуРольПрава(Роли_СведенияОЗаявках, "ДобавлениеИзменениеРеестраЗаявокНаОплату",,, "Чтение,Изменение,Просмотр,Редактирование");
	//ДобавитьНастройкуРольПрава(Роли_СведенияОЗаявках, "ПолныеПрава",,, "Чтение,Изменение,Просмотр,Редактирование");
	//ДобавитьНастройкуРольПрава(Роли_СведенияОЗаявках, "ПолныеПраваПТБ",,, "Чтение,Изменение,Просмотр,Редактирование");
	//ДобавитьНастройкуРольПрава(Роли_СведенияОЗаявках, "ПроведениеБанковскихДокументов",,, "Чтение,Изменение,Просмотр,Редактирование");
	//ДобавитьНастройкуРольПрава(Роли_СведенияОЗаявках, "тГость",,, "Чтение,Просмотр");
	//ДобавитьНастройкуРольПрава(Роли_СведенияОЗаявках, "тКассир",,, "Чтение,Изменение,Просмотр,Редактирование");
	//ДобавитьНастройкуРольПрава(Роли_СведенияОЗаявках, "ЧтениеВсего",,, "Чтение,Просмотр");
	//ДобавитьНастройкуРольПрава(Роли_СведенияОЗаявках, "ЧтениеЗаявокНаОплату",,, "Чтение,Просмотр");
	//
	//ОткрытьЛогированиеТеста(ТекстЛога, "ТестированиеРолейСведенияОЗаявкаНаОплату");
	//
	//Ошибки_СведенияОЗаявках = ВыполнитьПроверкуПоОбъектуМетаданных(ТаблицаПрав,
	//	"РегистрСведений.СведенияОЗаявках",,
	//	Роли_СведенияОЗаявках,
	//	СписокЛоги);
	//
	//Ошибки_СведенияОЗаявкахУведомления = ВыполнитьПроверкуПоОбъектуМетаданных(ТаблицаПрав,
	//	"РегистрСведений.СведенияОЗаявкахУведомления",,
	//	Роли_СведенияОЗаявках,
	//	СписокЛоги);
	//
	//Ошибки_СостоянияЗаявокНаОплату = ВыполнитьПроверкуПоОбъектуМетаданных(ТаблицаПрав,
	//	"РегистрСведений.СостоянияЗаявокНаОплату",,
	//	Роли_СведенияОЗаявках,
	//	СписокЛоги);
	//	
	//ТекстЛога = ТекстЛога + Символы.ПС + СтрокуИзСпискаЛогов(СписокЛоги);
	//
	//ЗакрытьЛогированиеТеста(ТекстЛога, "ТестированиеРолейСведенияОЗаявкаНаОплату");
	
КонецПроцедуры

#КонецОбласти 

#Область ТестированиеРолейОбъектаМетаданных

// По умолчанию проверяем все общие реквизиты, реквизиты, табличные части + реквизиты
// Исключения могут быть заданы:
//	1. Имя реквизита
//	2. Имя табличной части
//	3. Имя табличной части + "." + Имя реквизита
//
&НаСервере 
Функция ТестированиеРолейОбъектаМетаданныхНаСервере(ТаблицаПрав, ПолноеИмяОбъекта, ТекстЛога)
	МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	
	#Область ФормированиеМассиваРолей_ДобавлениеИзменениеПроведениеОтменаПроведения
	РолиЧтениеПросмотр	= Новый Массив;
	РолиЧтениеИзменение	= Новый Массив;
	
	// сначала берем список ролей с правами Добавление/Изменение ИЛИ Проведение/ОтменаПроведения
	СтрокиПрав = ТаблицаПрав.НайтиСтроки(Новый Структура("ОбъектМетаданных", МетаданныеОбъекта.ПолноеИмя()));
	Для Каждого СтрокаТаблицы Из СтрокиПрав Цикл
		Если СтрокаТаблицы.Добавление ИЛИ СтрокаТаблицы.Изменение ИЛИ СтрокаТаблицы.Использование Тогда
			РолиЧтениеПросмотр.Добавить(СтрокаТаблицы.ИмяРоли);
		КонецЕсли;
		Если СтрокаТаблицы.Проведение ИЛИ СтрокаТаблицы.ОтменаПроведения Тогда
			РолиЧтениеИзменение.Добавить(СтрокаТаблицы.ИмяРоли);
		КонецЕсли;
	КонецЦикла;
	#КонецОбласти
	
	// составляем перечень объектов метаданных для проверки прав Чтение,Просмотр,Изменение и связь с реквизитами
	ДанныеПроверки = ТестированиеРолейПТБ.ПолучитьСвязьРолейОбъектовПоРеквизитамОбъекта(ТаблицаПрав, МетаданныеОбъекта);
	ОбъектыЧтение			= ДанныеПроверки.Чтение;
	ОбъектыЧтениеПросмотр	= ДанныеПроверки.ЧтениеПросмотр;
	ОбъектыЧтениеИзменение	= ДанныеПроверки.ЧтениеИзменение;
	ОбъектыПоРеквизитам		= ДанныеПроверки.ОбъектыРеквизиты;
	
	// соответствие представлений объектов [ИмяОбъекта (СписокРеквизитов)]
	ПредставленияОбъектов = Новый Соответствие;
	Для Каждого КлючИЗначение Из ОбъектыПоРеквизитам Цикл
		СписокРеквизитов = СтрСоединить(КлючИЗначение.Значение, ",");
		ПредставленияОбъектов.Вставить(КлючИЗначение.Ключ,
			КлючИЗначение.Ключ + " (" + СписокРеквизитов + ")");
	КонецЦикла;
	
	// проверка наличия ошибок
	РолиСОшибками = Новый Соответствие;
	РолиБезОшибок = Новый Массив;
	Для Каждого ИмяРоли Из РолиЧтениеПросмотр Цикл
		ОбъектыПрава = Новый Соответствие;
		Для Каждого ИмяОбъекта Из ОбъектыЧтение Цикл
		    ОбъектыПрава.Вставить(ИмяОбъекта, "Чтение");
		КонецЦикла;
		Для Каждого ИмяОбъекта Из ОбъектыЧтениеПросмотр Цикл
			ТекНастройка = ОбъектыПрава.Получить(ИмяОбъекта);
			Если ТекНастройка = Неопределено Тогда
				ТекНастройка = "Чтение, Просмотр";
			Иначе 
				ТекНастройка = ТекНастройка + ", Просмотр";
			КонецЕсли;
			ОбъектыПрава.Вставить(ИмяОбъекта, ТекНастройка);
		КонецЦикла;
		ИндексМассива = РолиЧтениеИзменение.Найти(ИмяРоли);
		Если ИндексМассива <> Неопределено Тогда
			Для Каждого ИмяОбъекта Из ОбъектыЧтениеИзменение Цикл
				ТекНастройка = ОбъектыПрава.Получить(ИмяОбъекта);
				Если ТекНастройка = Неопределено Тогда
					ТекНастройка = "Чтение, Изменение";
				Иначе 
					ТекНастройка = ТекНастройка + ", Изменение";
				КонецЕсли;
				ОбъектыПрава.Вставить(ИмяОбъекта, ТекНастройка);
			КонецЦикла;
			РолиЧтениеИзменение.Удалить(ИндексМассива);
		КонецЕсли;
		
		РезультатПроверки = ТестированиеРолейПТБ.ТестированиеПоРоли(ТаблицаПрав, ИмяРоли, ПредставленияОбъектов, ОбъектыПрава);
		Если РезультатПроверки.ЕстьОшибки Тогда
			РолиСОшибками.Вставить(ИмяРоли, РезультатПроверки);
		Иначе 
			РолиБезОшибок.Добавить(ИмяРоли);
		КонецЕсли;
	КонецЦикла;
	Для Каждого ИмяРоли Из РолиЧтениеИзменение Цикл
		ОбъектыПрава = Новый Соответствие;
		Для Каждого ИмяОбъекта Из ОбъектыЧтениеПросмотр Цикл
			ОбъектыПрава.Вставить(ИмяОбъекта, "Чтение, Изменение");
		КонецЦикла;
		
		РезультатПроверки	= ТестированиеРолейПТБ.ТестированиеПоРоли(ТаблицаПрав, ИмяРоли, ПредставленияОбъектов, ОбъектыПрава);
		Если РезультатПроверки.ЕстьОшибки Тогда
			РолиСОшибками.Вставить(ИмяРоли, РезультатПроверки);
		Иначе 
			РолиБезОшибок.Добавить(ИмяРоли);
		КонецЕсли;
	КонецЦикла;
	
	// логирование результата обработки
	ОткрытьЛогированиеТеста(ТекстЛога, МетаданныеОбъекта.ПолноеИмя());
	Для Каждого КлючИЗначение Из РолиСОшибками Цикл
		ТекстЛога = ТекстЛога + СтрокуИзРезультатаТестированияНаСервере(КлючИЗначение.Значение.Данные);
	КонецЦикла;
	ЗакрытьЛогированиеТеста(ТекстЛога, МетаданныеОбъекта.ПолноеИмя());
	
	// формирование табличного документа результата
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ТестНастройкаРолейОбъектов"); 
	Возврат СформироватьТабличныйДокументПоРезультатуТестированияОбъекта(Макет,
		ТаблицаПрав,
		ПолноеИмяОбъекта,
		РолиСОшибками,
		РолиБезОшибок,
		ОбъектыПоРеквизитам,
		?(ЭтотОбъект.ВариантТестирования = 1, НСтр("ru='Профиль группы доступа'"), НСтр("ru='Роль'")));
КонецФункции

&НаСервереБезКонтекста 
Функция СформироватьТабличныйДокументПоРезультатуТестированияОбъекта(знач Макет, знач ТаблицаПрав, знач ПолноеИмяОбъекта, знач РолиСОшибками, знач РолиБезОшибок, знач ОбъектыПоРеквизитам, знач ТипРоли)
	СписокСортировки = Новый СписокЗначений;
	Для Каждого КлючИЗначение Из РолиСОшибками Цикл
		СписокСортировки.Добавить(КлючИЗначение.Значение, КлючИЗначение.Ключ);
	КонецЦикла;
	Для Каждого ИмяРоли Из РолиБезОшибок Цикл
		СписокСортировки.Добавить(Неопределено, ИмяРоли);
	КонецЦикла;
	СписокСортировки.СортироватьПоПредставлению();
	
	ЦветКрасный = WebЦвета.Красный;
	ЦветЗеленый	= WebЦвета.Зеленый;
	
	ОбластьШапка			= Макет.ПолучитьОбласть("ШапкаТабЧасти");
	ОбластьСтрокаОбъект 	= Макет.ПолучитьОбласть("СтрокаОбъектМетаданных");
	ОбластьСтрокаРоль		= Макет.ПолучитьОбласть("СтрокаРоли");
	ОбластьСтрокаНетПрав	= Макет.ПолучитьОбласть("СтрокаПроверкиБезПрав");
	ОбластьСтрокаОшибка		= Макет.ПолучитьОбласть("СтрокаПроверкиПрав");
	ОбластьПодвал			= Макет.ПолучитьОбласть("ПодвалТабЧасти");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ОбластьШапка.Параметры.ТипРоли = ТипРоли;
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	БезОшибок	= РолиБезОшибок.Количество();
	ВсегоРолей	= РолиСОшибками.Количество() + БезОшибок;
	
	ТабличныйДокумент.НачатьАвтогруппировкуСтрок();
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Результат"		, Формат(БезОшибок, "ЧГ=") + "/" + Формат(ВсегоРолей, "ЧГ="));
	СтруктураДанных.Вставить("ОбъектМетаданных"	, ПолноеИмяОбъекта);
	ЗаполнитьЗначенияСвойств(ОбластьСтрокаОбъект.Параметры, СтруктураДанных);
	ОбластьСтрокаОбъект.Область(1, 1, 1, 1).ЦветТекста = ?(БезОшибок = ВсегоРолей, ЦветЗеленый, ЦветКрасный);
	ТабличныйДокумент.Вывести(ОбластьСтрокаОбъект, 1, "ГруппаОбъектМетаданных", Истина);
	
	Для Каждого ЭлементСписка Из СписокСортировки Цикл
		ИмяРоли = ЭлементСписка.Представление;
		
		#Область НастройкиПравРолиДляТекущегоОбъекта
		МассивСтрокПрав = ТаблицаПрав.НайтиСтроки(Новый Структура("ОбъектМетаданных, ИмяРоли", ПолноеИмяОбъекта, ИмяРоли));
		СтрокаРоли		= ?(МассивСтрокПрав.Количество() = 0, Неопределено, МассивСтрокПрав[0]);
		ПраваРоли		= "";
		Если СтрокаРоли <> Неопределено Тогда
			Для Каждого Колонка Из ТаблицаПрав.Колонки Цикл
				Если НЕ СтрокаРоли[Колонка.Имя] = Истина Тогда
					Продолжить;
				КонецЕсли;
				
				ПраваРоли = ПраваРоли + ?(ПустаяСтрока(ПраваРоли),  "", ", ") + Колонка.Имя;
			КонецЦикла;
		КонецЕсли;
		#КонецОбласти 
		
		ОшибкиНеНайдены = (ЭлементСписка.Значение = Неопределено);
		
		СтруктураДанных = Новый Структура;
		СтруктураДанных.Вставить("Результат", ?(ОшибкиНеНайдены, НСтр("ru='УСПЕХ'"), НСтр("ru='ОШИБКА'")));
		СтруктураДанных.Вставить("ИмяРоли"	, ЭлементСписка.Представление);
		СтруктураДанных.Вставить("ПраваРоли", ПраваРоли);
		ЗаполнитьЗначенияСвойств(ОбластьСтрокаРоль.Параметры, СтруктураДанных);
		ОбластьСтрокаРоль.Область(1, 1, 1, 1).ЦветТекста = ?(ОшибкиНеНайдены, ЦветЗеленый, ЦветКрасный);
		ТабличныйДокумент.Вывести(ОбластьСтрокаРоль, 2, "ГруппаРольПоОбъекту", Истина);
		
		Если ТипЗнч(ЭлементСписка.Значение) = Тип("Структура") Тогда
			Для Каждого СтрокаТаблицы Из ЭлементСписка.Значение.Данные Цикл
				ОбъектНаименование = ?(ПустаяСтрока(СтрокаТаблицы.ОбъектМетаданных), НСтр("ru='<объекты не заданы>'"), СтрокаТаблицы.ОбъектМетаданных);
				
				ИменаРеквизитов = ОбъектыПоРеквизитам.Получить(СтрокаТаблицы.ОбъектМетаданных);
				ИменаРеквизитов = ?(ИменаРеквизитов = Неопределено, "", СтрСоединить(ИменаРеквизитов, ","));
				
				СтруктураДанных = Новый Структура;
				СтруктураДанных.Вставить("ОбъектМетаданных"	, ОбъектНаименование);
				СтруктураДанных.Вставить("РеквизитыОбъекта"	, ИменаРеквизитов);
				Если СтрокаТаблицы.ОбъектыНеЗаданы ИЛИ СтрокаТаблицы.ПраваНеЗаданы Тогда
					ЗаполнитьЗначенияСвойств(ОбластьСтрокаНетПрав.Параметры, СтруктураДанных);
					ТабличныйДокумент.Вывести(ОбластьСтрокаНетПрав, 3, "ГруппаОшибкаПоОбъекту");
				Иначе 
					Для Каждого КлючИЗначение Из СтрокаТаблицы.ПраваСОшибками Цикл
						Если СтрНайти("Чтение,Добавление,Изменение,Просмотр", КлючИЗначение.Ключ) = 0 Тогда
							Продолжить;
						ИначеЕсли НЕ СтрокаТаблицы.ПравилоКонтроля[КлючИЗначение.Ключ] = Истина Тогда
							Продолжить;
						ИначеЕсли КлючИЗначение.Значение = Истина Тогда
							Продолжить;
						КонецЕсли;
						
						СтруктураДанных.Вставить("Право" + КлючИЗначение.Ключ, НСтр("ru='НЕТ'")); 
					КонецЦикла;
					
					Если СтруктураДанных.Количество() > 2 Тогда
						ЗаполнитьЗначенияСвойств(ОбластьСтрокаОшибка.Параметры, СтруктураДанных);
						ТабличныйДокумент.Вывести(ОбластьСтрокаОшибка, 3, "ГруппаОшибкаПоОбъекту");
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(ОбластьПодвал, 1);
	ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
	
	Возврат ТабличныйДокумент;
КонецФункции

&НаСервереБезКонтекста 
Функция ПолучитьОбъектыПоОписаниюТиповНаСервере(знач ОписаниеТипов)
	Возврат ТестированиеРолейПТБ.ПолучитьОбъектыПоОписаниюТипов(ОписаниеТипов);
КонецФункции

#КонецОбласти 

#Область ТестированиеПрофилейОбъектаМетаданных

&НаСервере 
Функция ТестированиеПрофилейОбъектаМетаданныхНаСервере(ТаблицаПрав, ПолноеИмяОбъекта, ТекстЛога)
	
	ТаблицаПравПрофили = ТестированиеРолейПТБ.ПолучитьТаблицуПравПоПрофилям(ТаблицаПрав);
	Возврат ТестированиеРолейОбъектаМетаданныхНаСервере(ТаблицаПравПрофили, ПолноеИмяОбъекта, ТекстЛога);
	
КонецФункции

#КонецОбласти 

#Область ТестированиеПользователейОбъектаМетаданных

&НаСервере 
Функция ТестированиеПользователейОбъектаМетаданныхНаСервере(ТаблицаПрав, ПолноеИмяОбъекта, ТекстЛога)
	
	ТаблицаПравПользователи = ТестированиеРолейПТБ.ПолучитьТаблицуПравПоПользователям(ТаблицаПрав);
	Возврат ТестированиеРолейОбъектаМетаданныхНаСервере(ТаблицаПравПользователи, ПолноеИмяОбъекта, ТекстЛога);
	
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста 
Процедура ДобавитьНастройкуРольПрава(РолиИПрава, знач ИмяРоли, знач Все = Ложь, знач Минимум = "", знач Максимум = "")
	Если Все Тогда
		РолиИПрава.Вставить(ИмяРоли, "*");
	ИначеЕсли НЕ ПустаяСтрока(Максимум) Тогда
		РолиИПрава.Вставить(ИмяРоли, Новый Структура("Максимум", Максимум));
	ИначеЕсли НЕ ПустаяСтрока(Минимум) Тогда
		РолиИПрава.Вставить(ИмяРоли, Новый Структура("Минимум", Минимум));
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста 
Функция ПолучитьМассивПравПроверкиПоНастройкеНаСервере(знач ПолноеИмяОбъекта, знач НастройкаПрав)
	Возврат ТестированиеРолейПТБ.ПолучитьПравилаКонтроляПравПоОбъекту(ПолноеИмяОбъекта, НастройкаПрав); 
КонецФункции

&НаСервереБезКонтекста
Функция СтрокуИзРезультатаТестированияНаСервере(знач ТаблицаРезультат)
	Если НЕ ТипЗнч(ТаблицаРезультат) = Тип("ТаблицаЗначений") Тогда
		Возврат "";
	ИначеЕсли ТаблицаРезультат.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ЭтоЛогиПоОбъектам	= (ТаблицаРезультат.Колонки.Найти("РолиНеЗаданы") <> Неопределено);
	ЭтоЛогиПоРолям		= (ТаблицаРезультат.Колонки.Найти("ОбъектыНеЗаданы") <> Неопределено);

	ТекстЛога = "";
	
	Если ЭтоЛогиПоОбъектам Тогда
		ТаблицаРезультат.Сортировать("ОбъектМетаданных, ИмяРоли");
	ИначеЕсли ЭтоЛогиПоРолям Тогда
		ТаблицаРезультат.Сортировать("ИмяРоли, ОбъектМетаданных");
	КонецЕсли;

	Для Каждого СтрокаТаблицы Из ТаблицаРезультат Цикл
		
		Если ЭтоЛогиПоОбъектам Тогда
			Если СтрокаТаблицы.РолиНеЗаданы Тогда
				ЗаписатьТекстЛога(ТекстЛога, СтрокаТаблицы.ОбъектПредставление, НСтр("ru='Настройка ролей для объекта не найдена.'"));
			ИначеЕсли СтрокаТаблицы.ПраваНеЗаданы Тогда
				ДопТекст = СтрШаблон(НСтр("ru='Для роли ""%1"" права не заданы.'"),
					СтрокаТаблицы.ИмяРоли);
				ЗаписатьТекстЛога(ТекстЛога, СтрокаТаблицы.ОбъектПредставление, ДопТекст);
			ИначеЕсли СтрокаТаблицы.НедопустимаяРоль Тогда
				ДопТекст = СтрШаблон(НСтр("ru='Использование роли ""%1"" запрещено.'"),
					СтрокаТаблицы.ИмяРоли);
				ЗаписатьТекстЛога(ТекстЛога, СтрокаТаблицы.ОбъектПредставление, ДопТекст);
			Иначе 
				Для Каждого КлючИЗначение Из СтрокаТаблицы.ПраваСОшибками Цикл
					ТребуемоеЗначение = СтрокаТаблицы.ПравилоКонтроля[КлючИЗначение.Ключ];
					ДопТекст = СтрШаблон(НСтр("ru='Роль ""%1"", право ""%2"" значение не равно ""%3"".'"),
						СтрокаТаблицы.ИмяРоли,
						КлючИЗначение.Ключ,
						Строка(ТребуемоеЗначение));
					ЗаписатьТекстЛога(ТекстЛога, СтрокаТаблицы.ОбъектПредставление, ДопТекст);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Если ЭтоЛогиПоРолям Тогда
			Если СтрокаТаблицы.ОбъектыНеЗаданы Тогда
				ЗаписатьТекстЛога(ТекстЛога, СтрокаТаблицы.ИмяРоли, НСтр("ru='Настройка объектов для роли не найдена.'"));
			ИначеЕсли СтрокаТаблицы.ПраваНеЗаданы Тогда
				ДопТекст = СтрШаблон(НСтр("ru='Для объекта ""%1"" права не заданы.'"),
					СтрокаТаблицы.ОбъектПредставление);
				ЗаписатьТекстЛога(ТекстЛога, СтрокаТаблицы.ИмяРоли, ДопТекст);
			Иначе 
				Для Каждого КлючИЗначение Из СтрокаТаблицы.ПраваСОшибками Цикл
					ТребуемоеЗначение = СтрокаТаблицы.ПравилоКонтроля[КлючИЗначение.Ключ];
					ДопТекст = СтрШаблон(НСтр("ru='Объект ""%1"", право ""%2"" значение не равно ""%3"".'"),
						СтрокаТаблицы.ОбъектПредставление,
						КлючИЗначение.Ключ,
						Строка(ТребуемоеЗначение));
					ЗаписатьТекстЛога(ТекстЛога, СтрокаТаблицы.ИмяРоли, ДопТекст);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТекстЛога;
КонецФункции

&НаСервереБезКонтекста 
Функция ЕстьТабличнаяЧастьНаСервере(знач МетаданныеОбъекта)
	Возврат (Метаданные.Справочники.Содержит(МетаданныеОбъекта)
		ИЛИ Метаданные.Документы.Содержит(МетаданныеОбъекта)
		ИЛИ Метаданные.Отчеты.Содержит(МетаданныеОбъекта)
		ИЛИ Метаданные.Обработки.Содержит(МетаданныеОбъекта)
		ИЛИ Метаданные.Задачи.Содержит(МетаданныеОбъекта)
		ИЛИ Метаданные.БизнесПроцессы.Содержит(МетаданныеОбъекта));
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции_Логирование

&НаКлиентеНаСервереБезКонтекста 
Процедура ОткрытьЛогированиеТеста(ТекстЛога, знач ИмяРаздела);
	ЗаписатьТекстЛога(ТекстЛога, ИмяРаздела, "--------------- НАЧАЛО");
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура ЗаписатьТекстЛога(ТекстЛога, знач ИмяОбъекта = "", знач ДобавленныйТекст)
	Если ПустаяСтрока(ИмяОбъекта) Тогда 
		ИмяОбъекта = НСтр("ru='Объект не указан'");
	КонецЕсли;
	
	ТекстЛога = ТекстЛога + Символы.ПС + Символы.Таб + "- ";
	ТекстЛога = ТекстЛога + ИмяОбъекта + ": ";
	ТекстЛога = ТекстЛога + ДобавленныйТекст;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура ЗакрытьЛогированиеТеста(ТекстЛога, знач ИмяРаздела);
	ЗаписатьТекстЛога(ТекстЛога, ИмяРаздела, "--------------- КОНЕЦ");
КонецПроцедуры

#КонецОбласти
 
