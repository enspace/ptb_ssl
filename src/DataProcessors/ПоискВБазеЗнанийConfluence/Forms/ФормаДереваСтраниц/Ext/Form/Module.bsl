
#Область УправлениеФормой

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, ИмяРеквизита)

	Если НЕ Обработано.Найти(ИмяРеквизита) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Обработано.Добавить(ИмяРеквизита);

	Элементы = Форма.Элементы;

	#Область Наборы
	
	//Если ИмяРеквизита = "Реквизиты" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, "");
	//	УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, "");
	//КонецЕсли;
	
	Если ИмяРеквизита = "РеквизитыПроверкаДоступа" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, "ГруппаПроверитьНастройкуДоступа");
	КонецЕсли;

	#КонецОбласти
	
	#Область Элементы
	
	//Если ИмяРеквизита = "Ответственный" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
	//		"Ответственный", "ТолькоПросмотр", ЗначениеЗаполнено(Объект.Ответственный));
	//КонецЕсли;

	Если ИмяРеквизита = "ГруппаПроверитьНастройкуДоступа" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ГруппаПроверитьНастройкуДоступа", "Видимость", НЕ Форма.ДоступПроверен);
	КонецЕсли;

	#КонецОбласти 
	
	#Область ТабЧасть_Имя
	
	Если ИмяРеквизита = "ДеревоСтатейПометка" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ДеревоСтатейПометка", "Видимость", Форма.ПометкаЗначений);
	КонецЕсли;

	#КонецОбласти
	
	#Область Команды
	
	//Если ИмяРеквизита = "КомандаЗаполнить" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
	//		"ТаблицаФормыЗаполнить", "Видимость", НЕ Объект.Проведен);
	//КонецЕсли;

	#КонецОбласти 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьУсловноеОформление(Форма, ИменаРеквизитов = "")

	Если ТипЗнч(ИменаРеквизитов) = Тип("Строка") Тогда
		Если ПустаяСтрока(ИменаРеквизитов) Тогда
			МассивИмен = Новый Массив;
			МассивИмен.Добавить("");
		Иначе
			МассивИмен = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаРеквизитов, ",");
		КонецЕсли;
	ИначеЕсли ТипЗнч(ИменаРеквизитов) = Тип("Массив") Тогда
		МассивИмен = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ИменаРеквизитов);
	Иначе
		Возврат;
	КонецЕсли;
 
	//Форма.ТолькоПросмотр = (Форма.СостоянияЗаблокировано.Найти(Форма.СведенияОЗаявкеСостояние) <> Неопределено);

	Обработано = Новый Массив;
	Для Каждого ИмяРеквизита Из МассивИмен Цикл
		УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, СокрЛП(ИмяРеквизита));
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ДеревоСтатей

&НаКлиенте
Процедура ДеревоСтатейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ДеревоСтатей.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьВыбор();
КонецПроцедуры
 
&НаКлиенте
Процедура ДеревоСтатейПередРазворачиванием(Элемент, Строка, Отказ)
	ТекущиеДанные = ЭтотОбъект.ДеревоСтатей.НайтиПоИдентификатору(Строка);
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Считано Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ТекущийИдентификатор = ТекущиеДанные.ПолучитьИдентификатор();
	
	НастройкиФормы = ПолучитьНастройкиФормы(ЭтотОбъект);
	ЗаполнитьСтатьиВДерево(ЭтотОбъект.ДеревоСтатей, ТекущийИдентификатор, НастройкиФормы);
	
	Если ТекущиеДанные.ПолучитьЭлементы().Количество() > 0 Тогда
		Элементы.ДеревоСтатей.Развернуть(ТекущийИдентификатор, Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтатейПометкаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ДеревоСтатей.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Пометка = ?(ТекущиеДанные.Пометка = 2, 0, ТекущиеДанные.Пометка);
	
	РаботаСФормамиПТБКлиентСервер.УстановитьЗначениеПризнакаВложенныхЭлементов(ТекущиеДанные, "Пометка");
	РаботаСФормамиПТБКлиентСервер.УстановитьЗначениеПризнакаВышестоящихЭлементов(ТекущиеДанные, "Пометка");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.БазаЗнаний						= Параметры.БазаЗнаний;
	Объект.Пользователь						= Параметры.Пользователь;
	ЭтотОбъект.ПометкаЗначений				= Параметры.ПометкаЗначений;
	ЭтотОбъект.ПространствоДомашняяСтраница = Параметры.ПространствоДомашняяСтраница;
	ЭтотОбъект.ПространствоКлюч				= Параметры.ПространствоКлюч;
	ЭтотОбъект.ПространствоПредставление	= Параметры.ПространствоПредставление;
	
	Если НЕ ЗначениеЗаполнено(Объект.БазаЗнаний) Тогда
		Объект.БазаЗнаний = Справочники.БазыЗнанийConfluence.ОсновнаяБазаЗнаний();
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.Пользователь) Тогда
		Объект.Пользователь = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.БазаЗнаний) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указана база знаний.'"),, "Объект.БазаЗнаний",, Отказ);
	ИначеЕсли НЕ ЗначениеЗаполнено(Объект.Пользователь) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указан пользователь.'"),, "Объект.Пользователь",, Отказ);
	ИначеЕсли НЕ ЗначениеЗаполнено(ЭтотОбъект.ПространствоКлюч) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указано пространство.'"),, "ПространствоПредставление",, Отказ);
	КонецЕсли;
	
	Если Параметры.МножественныйВыбор И НЕ ЭтотОбъект.ПометкаЗначений Тогда
		Элементы.ДеревоСтатей.МножественныйВыбор = Истина;
	КонецЕсли;
	
	ПроверитьНастройкиДоступаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьУсловноеОформление(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "НастройкиИнтеграцииConfluenceИзменение" Тогда
		Если Параметр.БазаЗнаний = Объект.БазаЗнаний И Параметр.Пользователь = Объект.Пользователь Тогда
			ПроверитьНастройкиДоступаНаСервере();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	ВыполнитьВыбор();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДерево(Команда)
	НастройкиФормы = ПолучитьНастройкиФормы(ЭтотОбъект);
	ЗаполнитьСтатьиВДерево(ЭтотОбъект.ДеревоСтатей, Неопределено, НастройкиФормы);	
КонецПроцедуры

#КонецОбласти

#Область ЗавершениеНемодальныхВызовов
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте 
Процедура ВыполнитьВыбор()
	Если ЭтотОбъект.ПометкаЗначений Тогда
		РезультатВыбора = ПолучитьПомеченныеСтрокиДереваРекурсивно(ЭтотОбъект.ДеревоСтатей);
	ИначеЕсли ЭтотОбъект.Параметры.МножественныйВыбор Тогда
		РезультатВыбора = Новый Массив;
		Для Каждого ИдентификаторСтроки Из Элементы.ДеревоСтатей.ВыделенныеСтроки Цикл
			СтрокаДерева = ЭтотОбъект.ДеревоСтатей.НайтиПоИдентификатору(ИдентификаторСтроки);
			Если ЗначениеЗаполнено(СтрокаДерева.Идентификатор) Тогда
				РезультатВыбора.Добавить(ПолучитьСтруктуруЗначенияВыбора(СтрокаДерева));
			КонецЕсли;
		КонецЦикла;
	Иначе 
		ТекущиеДанные = Элементы.ДеревоСтатей.ТекущиеДанные;
		Если ТекущиеДанные = Неопределено Тогда
			РезультатВыбора = Неопределено;
		ИначеЕсли НЕ ЗначениеЗаполнено(ТекущиеДанные.Идентификатор) Тогда
			РезультатВыбора = Неопределено;
		Иначе 
			РезультатВыбора = ПолучитьСтруктуруЗначенияВыбора(ТекущиеДанные);
		КонецЕсли;
	КонецЕсли;
	
	ЭтотОбъект.Закрыть(РезультатВыбора);
КонецПроцедуры

&НаКлиенте 
Функция ПолучитьПомеченныеСтрокиДереваРекурсивно(знач СтрокаРодитель)
	МассивДанных = Новый Массив;
	
	Если НЕ ЭтотОбъект.ПометкаЗначений Тогда
		Возврат МассивДанных;
	КонецЕсли;
	
	Для Каждого СтрокаДерева Из СтрокаРодитель.ПолучитьЭлементы() Цикл
		Если СтрокаДерева.Пометка = 1 И ЗначениеЗаполнено(СтрокаДерева.Идентификатор) Тогда
			МассивДанных.Добавить(ПолучитьСтруктуруЗначенияВыбора(СтрокаДерева));
		КонецЕсли;
		
		ВложенныйМассив = ПолучитьПомеченныеСтрокиДереваРекурсивно(СтрокаДерева);
		Для Каждого СтруктураКонтента Из ВложенныйМассив Цикл
			МассивДанных.Добавить(СтруктураКонтента);
		КонецЦикла;
	КонецЦикла;
	
	Возврат МассивДанных;
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Процедура ЗаполнитьСтатьиВДерево(ДеревоНаФорме, знач ИдентификаторСтроки, знач НастройкиФормы)
	НастройкиПодключения = ИнтеграцияConfluenceВызовСервераПовтИсп.НастройкиПодключения(НастройкиФормы.БазаЗнаний, НастройкиФормы.Пользователь);
	
	Если ЗначениеЗаполнено(ИдентификаторСтроки) Тогда
		СтрокаРодитель = ДеревоНаФорме.НайтиПоИдентификатору(ИдентификаторСтроки);
		КоллекцияЭлементы = СтрокаРодитель.ПолучитьЭлементы();
	Иначе 
		КоллекцияЭлементы = ДеревоНаФорме.ПолучитьЭлементы();
	КонецЕсли;
	
	КоллекцияЭлементы.Очистить();
	
	СтатьяРодитель = ?(НЕ ЗначениеЗаполнено(ИдентификаторСтроки), НастройкиФормы.ПространствоСтатья, СтрокаРодитель.Идентификатор);
	
	НастройкиПоиска = ИнтеграцияConfluenceКлиентСервер.НастройкаПоиска();
	ИнтеграцияConfluenceКлиентСервер.ДобавитьЭлементПоиска(НастройкиПоиска, "Пространство", ВидСравненияКомпоновкиДанных.Равно, НастройкиФормы.ПространствоКлюч);
	ИнтеграцияConfluenceКлиентСервер.ДобавитьЭлементПоиска(НастройкиПоиска, "Родитель", ВидСравненияКомпоновкиДанных.Равно, СтатьяРодитель);
	
	ПараметрыПоиска = ИнтеграцияConfluenceКлиентСервер.ПараметрыПоиска();
	ПараметрыПоиска.Размер = 100;
	
	МассивСтатей = ПолучитьВсеСтатьи(НастройкиПодключения, НастройкиПоиска, ПараметрыПоиска);
	Для Каждого СтруктураРезультат Из МассивСтатей Цикл
		СтрокаДерева = КоллекцияЭлементы.Добавить();
		СтрокаДерева.Представление	= СтруктураРезультат.Заголовок;
		СтрокаДерева.Описание		= ПодготовитьОписание(СтруктураРезультат.Описание);
		СтрокаДерева.Считано		= Ложь;
		СтрокаДерева.Данные			= СтруктураРезультат.Контент;
		СтрокаДерева.Идентификатор	= СтруктураРезультат.Контент.Идентификатор;
		СтрокаДерева.Пометка		= Ложь;
		
		СтрокаДерева.ПолучитьЭлементы().Добавить();
	КонецЦикла;
	
	Если ТипЗнч(СтрокаРодитель) = Тип("ДанныеФормыЭлементДерева") Тогда
		СтрокаРодитель.Считано = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСтруктуруЗначенияВыбора(знач СтрокаДерева)
	Возврат Новый Структура("Значение, Представление",
		СтрокаДерева.Данные,
		СтрокаДерева.Представление);
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПодготовитьОписание(знач Описание)
	Возврат СтрЗаменить(СтрЗаменить(Описание, Символы.ПС, " "), "  ", " "); 
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьВсеСтатьи(знач Настройки, знач НастройкиПоиска, знач ПараметрыПоиска)
	МассивСтатей = Новый Массив;
	
	РезультатПоиска = ИнтеграцияConfluenceКлиентСервер.Поиск(Настройки, НастройкиПоиска, ПараметрыПоиска);
	Если ИнтеграцияConfluenceКлиентСервер.ПроверитьОшибки(РезультатПоиска, Истина) Тогда
		Возврат МассивСтатей;
	КонецЕсли;
	
	Для Каждого СтруктураСтатьи Из РезультатПоиска.Значения Цикл
		МассивСтатей.Добавить(СтруктураСтатьи);
	КонецЦикла;
	
	Пока РезультатПоиска.Начало + РезультатПоиска.Ограничение + 1 <= РезультатПоиска.ВсегоКоличество Цикл
		ПараметрыПоиска = ИнтеграцияConfluenceКлиентСервер.ПараметрыПоиска();
		ПараметрыПоиска.Начало = РезультатПоиска.Начало + РезультатПоиска.Ограничение + 1;
		ПараметрыПоиска.Размер = 100;
		
		РезультатПоиска = ИнтеграцияConfluenceКлиентСервер.Поиск(Настройки, РезультатПоиска.СтрокаЗапроса, ПараметрыПоиска);
		Если ИнтеграцияConfluenceКлиентСервер.ПроверитьОшибки(РезультатПоиска, Истина) Тогда
			Возврат МассивСтатей;
		КонецЕсли;
		
		Для Каждого СтруктураСтатьи Из РезультатПоиска.Значения Цикл
			МассивСтатей.Добавить(СтруктураСтатьи);
		КонецЦикла;
	КонецЦикла;
	
	Возврат МассивСтатей;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьНастройкиФормы(знач Форма)
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("БазаЗнаний"			, Форма.Объект.БазаЗнаний);
	СтруктураРеквизитов.Вставить("Пользователь"			, Форма.Объект.Пользователь);
	СтруктураРеквизитов.Вставить("ПространствоКлюч"		, Форма.ПространствоКлюч);
	СтруктураРеквизитов.Вставить("ПространствоСтатья"	, Форма.ПространствоДомашняяСтраница);
	
	Возврат СтруктураРеквизитов;
КонецФункции

&НаСервере 
Процедура ПроверитьНастройкиДоступаНаСервере()
	НастройкиПодключения = РегистрыСведений.НастройкиИнтеграцииConfluence.НастройкиПользователя(Объект.Пользователь, Объект.БазаЗнаний);
	
	Если ЭтотОбъект.ДоступПроверен <> НастройкиПодключения.ДоступПроверен Тогда
		ЭтотОбъект.ДоступПроверен = НастройкиПодключения.ДоступПроверен;
		ПослеПроверкиНастройкиДоступаНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПослеПроверкиНастройкиДоступаНаСервере()
	
	УстановитьУсловноеОформление(ЭтотОбъект, "РеквизитыПроверкаДоступа");
	
	Если ЭтотОбъект.ДеревоСтатей.ПолучитьЭлементы().Количество() = 0 Тогда
		НастройкиФормы = ПолучитьНастройкиФормы(ЭтотОбъект);
		ЗаполнитьСтатьиВДерево(ЭтотОбъект.ДеревоСтатей, Неопределено, НастройкиФормы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

