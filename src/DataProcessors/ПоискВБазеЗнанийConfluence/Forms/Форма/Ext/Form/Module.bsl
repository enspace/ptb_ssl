
#Область УправлениеФормой

&НаСервере 
Процедура ИнициализацияФормы()
	
	ЭтотОбъект.КоличествоБазЗнаний = Справочники.БазыЗнанийConfluence.КоличествоБазЗнаний();
	
	Для Каждого СтрокаТаблицы Из Объект.ТипыДанных Цикл
		ЭтотОбъект.ТипыДанных.Добавить(СтрокаТаблицы.ТипДанных);
	КонецЦикла;
	
	НачальнаяСтраница	= Обработки.ПоискВБазеЗнанийConfluence.ПолучитьМакет("НачальнаяСтраница");
	МакетРезультат		= Обработки.ПоискВБазеЗнанийConfluence.ПолучитьМакет("МакетРезультатПоиска");
	СтрокаРезультат		= Обработки.ПоискВБазеЗнанийConfluence.ПолучитьМакет("СтрокаРезультатПоиска");
	СовпаденийНеНайдено	= Обработки.ПоискВБазеЗнанийConfluence.ПолучитьМакет("СовпаденийНеНайдено");
	
	ЭтотОбъект.МакетНачальнаяСтраница	= НачальнаяСтраница.ПолучитьТекст();
	ЭтотОбъект.МакетОснование			= МакетРезультат.ПолучитьТекст();
	ЭтотОбъект.МакетСтрокаРезультата	= СтрокаРезультат.ПолучитьТекст();
	ЭтотОбъект.МакетСовпаденийНеНайдено	= СовпаденийНеНайдено.ПолучитьТекст();
	
	ЭтотОбъект.РезультатПоиска = ЭтотОбъект.МакетНачальнаяСтраница;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, ИмяРеквизита)

	Если НЕ Обработано.Найти(ИмяРеквизита) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Обработано.Добавить(ИмяРеквизита);

	Элементы	= Форма.Элементы;
	Объект		= Форма.Объект;

	#Область Наборы
	
	//Если ИмяРеквизита = "Реквизиты" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, "");
	//	УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, "");
	//КонецЕсли;

	#КонецОбласти
	
	#Область Элементы
	        
	Если ИмяРеквизита = "БазаЗнаний" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"БазаЗнаний", "Видимость", ЗначениеЗаполнено(Объект.БазаЗнаний) И (Форма.КоличествоБазЗнаний <> 1));
	КонецЕсли;

	Если ИмяРеквизита = "ГруппаДатаСоздания" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ГруппаДатаСоздания", "Видимость", (Форма.ПериодСоздания = 5));
	КонецЕсли;

	Если ИмяРеквизита = "ГруппаДатаИзменения" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ГруппаДатаИзменения", "Видимость", (Форма.ПериодИзменения = 5));
	КонецЕсли;
	
	#КонецОбласти 
	
	#Область ТабЧасть_Имя
	
	//Если ИмяРеквизита = "ИмяТабличнойЧастиОтветственный" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
	//		"ИмяТабличнойЧастиОтветственный", "ТолькоПросмотр", ЗначениеЗаполнено(Объект.Ответственный));
	//КонецЕсли;

	#КонецОбласти
	
	#Область Команды
	
	//Если ИмяРеквизита = "КомандаЗаполнить" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
	//		"ТаблицаФормыЗаполнить", "Видимость", НЕ Объект.Проведен);
	//КонецЕсли;

	#КонецОбласти 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьУсловноеОформление(Форма, ИменаРеквизитов = "")

	Если ТипЗнч(ИменаРеквизитов) = Тип("Строка") Тогда
		Если ПустаяСтрока(ИменаРеквизитов) Тогда
			МассивИмен = Новый Массив;
			МассивИмен.Добавить("");
		Иначе
			МассивИмен = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаРеквизитов, ",");
		КонецЕсли;
	ИначеЕсли ТипЗнч(ИменаРеквизитов) = Тип("Массив") Тогда
		МассивИмен = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ИменаРеквизитов);
	Иначе
		Возврат;
	КонецЕсли;
 
	//Форма.ТолькоПросмотр = (Форма.СостоянияЗаблокировано.Найти(Форма.СведенияОЗаявкеСостояние) <> Неопределено);

	Обработано = Новый Массив;
	Для Каждого ИмяРеквизита Из МассивИмен Цикл
		УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, СокрЛП(ИмяРеквизита));
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодСозданияПриИзменении(Элемент)
	
	СтруктураПериод = ПолучитьПериодПоЗначению(ЭтотОбъект.ПериодСоздания);
	Если ЭтотОбъект.ПериодСоздания <> 5 Тогда
		Объект.ДатаСозданияОт = СтруктураПериод.Начало;
		Объект.ДатаСозданияДо = СтруктураПериод.Конец;
	КонецЕсли;
	
	УстановитьУсловноеОформление(ЭтотОбъект, "ГруппаДатаСоздания");
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодИзмененияПриИзменении(Элемент)
	
	СтруктураПериод = ПолучитьПериодПоЗначению(ЭтотОбъект.ПериодИзменения);
	Если ЭтотОбъект.ПериодИзменения <> 5 Тогда
		Объект.ДатаИзмененияОт = СтруктураПериод.Начало;
		Объект.ДатаИзмененияДо = СтруктураПериод.Конец;
	КонецЕсли;
	
	УстановитьУсловноеОформление(ЭтотОбъект, "ГруппаДатаИзменения");
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПереключениеСтраницОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПерваяСтраница" Тогда
		ВыполнитьПоискНаКлиенте(1);
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПредыдущаяСтраница" И ЭтотОбъект.ТекущаяСтраница - 1 > 0 Тогда
		ВыполнитьПоискНаКлиенте(ЭтотОбъект.ТекущаяСтраница - 1);
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "СледующаяСтраница" И ЭтотОбъект.ТекущаяСтраница + 1 <= ЭтотОбъект.КоличествоСтраниц Тогда
		ВыполнитьПоискНаКлиенте(ЭтотОбъект.ТекущаяСтраница + 1);
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПоследняяСтраница" Тогда
		ВыполнитьПоискНаКлиенте(ЭтотОбъект.КоличествоСтраниц);
	ИначеЕсли СтрНачинаетсяС(НавигационнаяСсылкаФорматированнойСтроки, "Страница_") Тогда
		СтрНомерСтраницы = Сред(НавигационнаяСсылкаФорматированнойСтроки, 10);
		ВыполнитьПоискНаКлиенте(Число(СтрНомерСтраницы));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РезультатПоискаПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	АдресСсылки = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеСобытия, "Href", "");
	Если НЕ ЗначениеЗаполнено(АдресСсылки) Тогда
		Возврат;
	КонецЕсли;
	
	ЗапуститьПриложение(АдресСсылки);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.БазаЗнаний) Тогда
		Объект.БазаЗнаний = Справочники.БазыЗнанийConfluence.ОсновнаяБазаЗнаний();
	КонецЕсли;
	
	Объект.Пользователь = Пользователи.ТекущийПользователь();
	
	ИнициализацияФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьУсловноеОформление(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(Объект.БазаЗнаний) Тогда
		ПодключитьОбработчикОжидания("ЗаполнитьПространства", 0.1, Истина);
	КонецЕсли;
	
	ВывестиНумерациюСтраницНаФорму();
	ВывестиИтоговуюСтатистикуНаФорму();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьПоиск(Команда)
	
	ВыполнитьПоискНаКлиенте(1);
	
КонецПроцедуры

#КонецОбласти

#Область ЗавершениеНемодальныхВызовов
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте 
Процедура ЗаполнитьПространства()
	
	НастройкиПодключения	= НастройкиПодключенияНаСервере(Объект.БазаЗнаний, Объект.Пользователь);
	ПараметрыЗапроса		= ИнтеграцияConfluenceКлиентСервер.ПараметрыПолучитьПространства();
	
	РезультатЗапроса = ИнтеграцияConfluenceКлиентСервер.ПолучитьПространства(НастройкиПодключения, ПараметрыЗапроса);
	Если ИнтеграцияConfluenceКлиентСервер.ПроверитьОшибки(РезультатЗапроса, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Пространства.Очистить();
	
	Для Каждого СтруктураПространства Из РезультатЗапроса.Значения Цикл
		НоваяСтрока = Объект.Пространства.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураПространства);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте 
Процедура ВыполнитьПоискНаКлиенте(знач НомерСтраницы = 1)
	
	НастройкиПодключения = НастройкиПодключенияНаСервере(Объект.БазаЗнаний, Объект.Пользователь);
	
	НастройкиПоиска = ПолучитьНастройкиПоиска(НомерСтраницы);
	
	ПараметрыПоиска = ИнтеграцияConfluenceКлиентСервер.ПараметрыПоиска();
	ПараметрыПоиска.РежимОтладки = ЭтотОбъект.РежимОтладки;
	Если НомерСтраницы <> 1 Тогда
		ПараметрыПоиска.Начало = (НомерСтраницы - 1) * ПараметрыПоиска.Размер + 1;
	КонецЕсли;
	
	ДанныеПоиска = ИнтеграцияConfluenceКлиентСервер.Поиск(НастройкиПодключения, НастройкиПоиска, ПараметрыПоиска);
	Если ИнтеграцияConfluenceКлиентСервер.ПроверитьОшибки(ДанныеПоиска, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.КоличествоСтраниц = Цел(ДанныеПоиска.ВсегоКоличество / ДанныеПоиска.Ограничение)
		+ ?(ДанныеПоиска.ВсегоКоличество % ДанныеПоиска.Ограничение > 0, 1, 0);
	
	СтруктураДанныеПоиска = Новый Структура("Начало, Ограничение, РазмерВыборки, ВсегоКоличество, СтрокаЗапроса, ВремяПоиска");
	ЗаполнитьЗначенияСвойств(СтруктураДанныеПоиска, ДанныеПоиска);
	
	ЭтотОбъект.ПоследнийПоиск	= Новый ФиксированнаяСтруктура(СтруктураДанныеПоиска);
	ЭтотОбъект.ТекущаяСтраница	= НомерСтраницы;
	
	ВывестиРезультатПоискаНаФорму(ДанныеПоиска.Значения, );
	ВывестиНумерациюСтраницНаФорму();
	ВывестиИтоговуюСтатистикуНаФорму();
	
КонецПроцедуры

&НаКлиенте 
Процедура ВывестиРезультатПоискаНаФорму(знач МассивКонтента, знач АдресСервера)
	Если МассивКонтента.Количество() = 0 Тогда
		ЭтотОбъект.РезультатПоиска = ЭтотОбъект.МакетСовпаденийНеНайдено;
		Возврат;
	КонецЕсли;
	
	СтрокиРезультат = Новый Массив;
	Для Каждого СтруктураРезультат Из МассивКонтента Цикл
		СтруктураЗамены = Новый Соответствие;
		СтруктураЗамены.Вставить("[[PageLink]]"		, СтруктураРезультат.Ссылка);
		СтруктураЗамены.Вставить("[[PageTitle]]"	, СтруктураРезультат.Заголовок);
		СтруктураЗамены.Вставить("[[SpaceLink]]"	, СтруктураРезультат.Пространство.Ссылка);
		СтруктураЗамены.Вставить("[[SpaceTitle]]"	, СтруктураРезультат.Пространство.Заголовок);
		СтруктураЗамены.Вставить("[[DateTimeU]]"	, "");
		СтруктураЗамены.Вставить("[[DateTimeTitle]]", Формат(СтруктураРезультат.Обновлено, "ДЛФ=DDT"));
		СтруктураЗамены.Вставить("[[DateTimeText]]"	, Формат(СтруктураРезультат.Обновлено, "ДЛФ=DDT"));
		СтруктураЗамены.Вставить("[[PageText]]"		, ПодготовитьОписание(СтруктураРезультат.Описание));
		
		СтрокаРезультат = ЭтотОбъект.МакетСтрокаРезультата;
		Для Каждого КлючИЗначение Из СтруктураЗамены Цикл
			СтрокаРезультат = СтрЗаменить(СтрокаРезультат, КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;
		
		СтрокиРезультат.Добавить(СтрокаРезультат);
	КонецЦикла;
	ИтоговаяСтрока = СтрСоединить(СтрокиРезультат, Символы.ПС);
	
	ПодготовленнаяСтрока = СтрЗаменить(ЭтотОбъект.МакетОснование, "[[DATA]]", ИтоговаяСтрока);
	ЭтотОбъект.РезультатПоиска = ПодготовленнаяСтрока;
	
	Если ЭтотОбъект.РежимОтладки Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПодготовленнаяСтрока);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте 
Процедура ВывестиНумерациюСтраницНаФорму()
	ПоискВыполнен = (ТипЗнч(ЭтотОбъект.ПоследнийПоиск) = Тип("ФиксированнаяСтруктура"));
	
	ОграничениеНумерации = 10;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(НСтр("ru='Страницы:  '"));
	
	Если НЕ ПоискВыполнен Тогда
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='поиск не выполнен'"),, WebЦвета.ТемноСерый));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ДекорацияПереключениеСтраниц", "Заголовок", Новый ФорматированнаяСтрока(МассивСтрок));
		
		Возврат;
	ИначеЕсли ЭтотОбъект.КоличествоСтраниц = 0 Тогда
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='совпадений не найдено'"),, WebЦвета.ТемноСерый));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ДекорацияПереключениеСтраниц", "Заголовок", Новый ФорматированнаяСтрока(МассивСтрок));
		
		Возврат;
	КонецЕсли;
	
	ШрифтЖирный = Новый Шрифт(,, Истина);
	
	НачСтраница = ЭтотОбъект.ТекущаяСтраница - Цел(ОграничениеНумерации / 2);
	КонСтраница = ЭтотОбъект.ТекущаяСтраница + Цел(ОграничениеНумерации / 2) - 1;
	Если НачСтраница < 1 Тогда
		КонСтраница = КонСтраница + (1 - НачСтраница);
	ИначеЕсли КонСтраница > ЭтотОбъект.КоличествоСтраниц Тогда
		НачСтраница = НачСтраница - (КонСтраница - ЭтотОбъект.КоличествоСтраниц);
	КонецЕсли;
	
	НачалоПодсчета	= Макс(НачСтраница, 1);
	КонецПодсчета	= Мин(КонСтраница, ЭтотОбъект.КоличествоСтраниц);

	#Область Первая_Предыдущая
	Если ЭтотОбъект.КоличествоСтраниц > ОграничениеНумерации Тогда
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Начало'"),,,, "ПерваяСтраница"));
		МассивСтрок.Добавить("  ");
	КонецЕсли;
	
	Если ЭтотОбъект.КоличествоСтраниц > 1 Тогда
		Если ЭтотОбъект.ТекущаяСтраница = 1 Тогда
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Предыдущая'"),, WebЦвета.ТемноСерый,,));
		Иначе
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Предыдущая'"),,,, "ПредыдущаяСтраница"));
		КонецЕсли;
		МассивСтрок.Добавить("  ");
	КонецЕсли;
	#КонецОбласти 
	
	#Область Страницы
	Для ИндексСтраницы = НачалоПодсчета По КонецПодсчета Цикл
		СтрИндекс = Формат(ИндексСтраницы, "ЧН=0; ЧГ=");
		Если ИндексСтраницы = ЭтотОбъект.ТекущаяСтраница Тогда
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(СтрИндекс, ШрифтЖирный,,, "Страница_" + СтрИндекс));
		Иначе 
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(СтрИндекс,,,, "Страница_" + СтрИндекс));
		КонецЕсли;
		
		МассивСтрок.Добавить("  ");
	КонецЦикла;
	#КонецОбласти 
	
	#Область Следующая_Последняя
	Если ЭтотОбъект.КоличествоСтраниц > 1 Тогда
		Если ЭтотОбъект.ТекущаяСтраница = ЭтотОбъект.КоличествоСтраниц Тогда
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Следующая'"),, WebЦвета.ТемноСерый,,));
		Иначе 
			МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Следующая'"),,,, "СледующаяСтраница"));
		КонецЕсли;
		МассивСтрок.Добавить("  ");
	КонецЕсли;
	
	Если ЭтотОбъект.КоличествоСтраниц > ОграничениеНумерации Тогда
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Последняя'"),,,, "ПоследняяСтраница"));
	КонецЕсли;
	#КонецОбласти 

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ДекорацияПереключениеСтраниц", "Заголовок", Новый ФорматированнаяСтрока(МассивСтрок));
КонецПроцедуры

&НаКлиенте 
Процедура ВывестиИтоговуюСтатистикуНаФорму()
	ПоискВыполнен = (ТипЗнч(ЭтотОбъект.ПоследнийПоиск) = Тип("ФиксированнаяСтруктура"));
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ДекорацияСтатистика", "Видимость", ПоискВыполнен И ЭтотОбъект.КоличествоСтраниц <> 0);
	
	Если НЕ ПоискВыполнен ИЛИ ЭтотОбъект.КоличествоСтраниц = 0 Тогда
		Возврат;
	КонецЕсли;

	СтрЗаголовок = СтрШаблон(НСтр("ru='Отображены совпадения с %1 по %2 (всего %3)'"),
		Формат(ЭтотОбъект.ПоследнийПоиск.Начало + 1, "ЧН=0; ЧГ="),
		Формат(ЭтотОбъект.ПоследнийПоиск.Начало + ЭтотОбъект.ПоследнийПоиск.РазмерВыборки, "ЧН=0; ЧГ="),
		Формат(ЭтотОбъект.ПоследнийПоиск.ВсегоКоличество, "ЧН=0; ЧГ="));

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		"ДекорацияСтатистика", "Заголовок", СтрЗаголовок);
КонецПроцедуры

&НаКлиенте 
Функция ПолучитьНастройкиПоиска(знач НомерСтраницы)
	Если НомерСтраницы <> 1 И ТипЗнч(ЭтотОбъект.ПоследнийПоиск) = Тип("ФиксированнаяСтруктура") Тогда
		Возврат ЭтотОбъект.ПоследнийПоиск.СтрокаЗапроса;
	КонецЕсли;
	
	НастройкиПоиска = ИнтеграцияConfluenceКлиентСервер.НастройкаПоиска();
	
	Если ЭтотОбъект.ТипыДанных.Количество() > 0 Тогда
		МассивТипов = ЭтотОбъект.ТипыДанных.ВыгрузитьЗначения();
		ИнтеграцияConfluenceКлиентСервер.ДобавитьЭлементПоиска(НастройкиПоиска, "ТипДанных", ВидСравненияКомпоновкиДанных.ВСписке, МассивТипов);
	КонецЕсли;
	
	Если ЭтотОбъект.ПериодСоздания <> 0 Тогда
		Если ЗначениеЗаполнено(Объект.ДатаСозданияОт) Тогда
			ИнтеграцияConfluenceКлиентСервер.ДобавитьЭлементПоиска(НастройкиПоиска, "ДатаСоздания", ВидСравненияКомпоновкиДанных.БольшеИлиРавно, Объект.ДатаСозданияОт);
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.ДатаСозданияДо) Тогда
			ИнтеграцияConfluenceКлиентСервер.ДобавитьЭлементПоиска(НастройкиПоиска, "ДатаСоздания", ВидСравненияКомпоновкиДанных.Меньше, Объект.ДатаСозданияДо);
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтотОбъект.ПериодИзменения <> 0 Тогда
		Если ЗначениеЗаполнено(Объект.ДатаИзмененияОт) Тогда
			ИнтеграцияConfluenceКлиентСервер.ДобавитьЭлементПоиска(НастройкиПоиска, "ДатаИзменения", ВидСравненияКомпоновкиДанных.БольшеИлиРавно, Объект.ДатаИзмененияОт);
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.ДатаИзмененияДо) Тогда
			ИнтеграцияConfluenceКлиентСервер.ДобавитьЭлементПоиска(НастройкиПоиска, "ДатаИзменения", ВидСравненияКомпоновкиДанных.Меньше, Объект.ДатаИзмененияДо);
		КонецЕсли;
	КонецЕсли;
	
	МассивПространств = Новый Массив;
	Для Каждого СтрокаПространство Из Объект.Пространства Цикл
		Если СтрокаПространство.Использовать = Истина И НЕ ПустаяСтрока(СтрокаПространство.Ключ) Тогда
			МассивПространств.Добавить(СтрокаПространство.Ключ);
		КонецЕсли;
	КонецЦикла;
	Если МассивПространств.Количество() <> 0 Тогда
		ИнтеграцияConfluenceКлиентСервер.ДобавитьЭлементПоиска(НастройкиПоиска, "Пространство", ВидСравненияКомпоновкиДанных.ВСписке, МассивПространств);
	КонецЕсли;
	
	ЭлементПоискПоЗаголовку = ИнтеграцияConfluenceКлиентСервер.ЭлементНастройкиПоиска("Заголовок", ВидСравненияКомпоновкиДанных.Содержит, Объект.СтрокаПоиска);
	ЭлементПоискПоТексту	= ИнтеграцияConfluenceКлиентСервер.ЭлементНастройкиПоиска("Текст", ВидСравненияКомпоновкиДанных.Содержит, Объект.СтрокаПоиска);
	
	Если Объект.ПоискТолькоПоЗаголовкам Тогда
		НастройкиПоиска.Элементы.Добавить(ЭлементПоискПоЗаголовку);
	Иначе 
		ГруппаИЛИ = ИнтеграцияConfluenceКлиентСервер.ГруппаНастройкиПоиска("ИЛИ");
		ГруппаИЛИ.Элементы.Добавить(ЭлементПоискПоЗаголовку);
		ГруппаИЛИ.Элементы.Добавить(ЭлементПоискПоТексту);
		
		НастройкиПоиска.Элементы.Добавить(ГруппаИЛИ);
	КонецЕсли;
	
	//НастройкиПоиска.Порядок.Добавить("Заголовок");
	//НастройкиПоиска.Порядок.Добавить("ДатаИзменения УБЫВ");
	//НастройкиПоиска.Порядок.Добавить("ТипДанных");
	
	Возврат НастройкиПоиска;
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Функция ПодготовитьОписание(знач СтрокаОписание)
	СтрокаОписание = СтрЗаменить(СтрокаОписание, Символы.НПП, " ");
	СтрокаОписание = СтрЗаменить(СтрокаОписание, Символы.ПС, " ");
	СтрокаОписание = СтрЗаменить(СтрокаОписание, Символы.Таб, " ");
	СтрокаОписание = СокрЛП(СтрокаОписание);
	
	Возврат Лев(СтрокаОписание, 300) + ?(СтрДлина(СтрокаОписание) > 300, "...", "");
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Функция ПолучитьПериодПоЗначению(знач Период)
	СтруктураПериод = Новый Структура("Начало, Конец");
	
	#Если Сервер Тогда
		ТекущаяДата = НачалоДня(ТекущаяДатаСеанса());
	#Иначе
		ТекущаяДата = НачалоДня(ОбщегоНазначенияКлиент.ДатаСеанса());
	#КонецЕсли
	
	// без отбора(0), Последние сутки(1), Последняя неделя(2), Последний месяц(3), Последний год(4), Произвольный период(5)
	Если Период = 1 Тогда
		СтруктураПериод.Начало	= НачалоДня(ТекущаяДата - 1);
		СтруктураПериод.Конец	= ТекущаяДата;
	ИначеЕсли Период = 2 Тогда
		СтруктураПериод.Начало	= ТекущаяДата - ОбщегоНазначенияПТБКлиентСервер.НеделяВСекундах();
		СтруктураПериод.Конец	= ТекущаяДата;
	ИначеЕсли Период = 3 Тогда
		СтруктураПериод.Начало	= ДобавитьМесяц(ТекущаяДата, -1);
		СтруктураПериод.Конец	= ТекущаяДата;
	ИначеЕсли Период = 4 Тогда
		СтруктураПериод.Начало	= ДобавитьМесяц(ТекущаяДата, -12);
		СтруктураПериод.Конец	= ТекущаяДата;
	КонецЕсли;
	
	Возврат СтруктураПериод;
КонецФункции

&НаСервереБезКонтекста 
Функция НастройкиПодключенияНаСервере(знач БазаЗнаний, знач Пользователь)
	Возврат ИнтеграцияConfluenceВызовСервераПовтИсп.НастройкиПодключения(БазаЗнаний, Пользователь);
КонецФункции

#КонецОбласти

 