
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЭтотОбъект.Параметры.Автотест Тогда
		ТестТехнический(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТестИнтерфейс(Команда)
	
	КолСтрок = 10;
	
	ПараметрыВремя = ДлительныеОперацииПТБКлиентСервер.ПолучитьПараметрыПодсчетаОстаткаВремени(КолСтрок);
	Для Индекс = 1 По КолСтрок Цикл
		ОбработкаПрерыванияПользователя();
		
		ДлительныеОперацииПТБКлиентСервер.ЗафиксироватьВремяНачалаВыполнения(ПараметрыВремя);
		
		Если Индекс < 6 Тогда
			ДлительныеОперацииПТБКлиентСервер.ВывестиСостояниеВыполнения(ПараметрыВремя,,, БиблиотекаКартинок.Информация32);
		Иначе 
			ТекстСостояния = СтрШаблон(НСтр("ru='Обработка строки № %1 из %2.'"),
				ПараметрыВремя.Счетчик, ПараметрыВремя.Количество);
			ОстатокВремени = ДлительныеОперацииПТБКлиентСервер.ОценитьОстатокВремениВыполнения(ПараметрыВремя);
			Состояние(ТекстСостояния + " " + ОстатокВремени, ПараметрыВремя.Процент,, БиблиотекаКартинок.Информация32);
		КонецЕсли;
		
		ВремяА = ТекущаяДата() + 1;
		Пока ВремяА > ТекущаяДата() Цикл
			// ожидание
		КонецЦикла;
		
		ДлительныеОперацииПТБКлиентСервер.ЗафиксироватьВремяОкончанияВыполнения(ПараметрыВремя);
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ТестТехнический(Команда)
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='не реализован'")); 
	
	//СписокТестов = Новый Структура;
	//СписокТестов.Вставить("ИнициализацияПараметров"	, Неопределено);
	//СписокТестов.Вставить("СчетчикУвеличивается"	, Неопределено);
	//СписокТестов.Вставить("ВремяУвеличивается"		, Неопределено);
	//СписокТестов.Вставить("ПодсчетОстаткаВыполнен"	, Неопределено);
	//
	//ТестСообщения = "";
	//КолСтрок = 10;
	//ПараметрыВремя = ДлительныеОперацииПТБКлиентСервер.ПолучитьПараметрыПодсчетаОстаткаВремени(КолСтрок);
	//
	//СписокТестов.ИнициализацияПараметров = 
	//	(ТипЗнч(ПараметрыВремя) = Тип("Структура")
	//	И ПараметрыВремя.Свойство("ЗатратыВремени")
	//	И ПараметрыВремя.Свойство("НачалоВыполнения")
	//	И ПараметрыВремя.Свойство("ОкончаниеВыполнения")
	//	И ПараметрыВремя.Свойство("Количество")
	//	И ПараметрыВремя.Свойство("Счетчик")
	//	И ПараметрыВремя.Свойство("Процент")
	//	И ПараметрыВремя.ЗатратыВремени = 0
	//	И ПараметрыВремя.НачалоВыполнения = 0
	//    И ПараметрыВремя.ОкончаниеВыполнения = 0
	//	И ПараметрыВремя.Количество = КолСтрок
	//	И ПараметрыВремя.Счетчик = 0
	//	И ПараметрыВремя.Процент = 0);
	//	
	//Если НЕ СписокТестов.ИнициализацияПараметров Тогда
	//	
	//
	//Для Индекс = 1 По КолСтрок Цикл
	//	ДлительныеОперацииПТБКлиентСервер.ЗафиксироватьВремяНачалаВыполнения(ПараметрыВремя);
	//	
	//	
	//	
	//	ДобавитьСтроку(ТестСообщения, "Счетчик работает: " + Строка(ПараметрыВремя.Счетчик = Индекс));
	//	
	//	Если Индекс < 51 Тогда
	//		ДлительныеОперацииПТБКлиентСервер.ВывестиСостояниеВыполнения(ПараметрыВремя,,, БиблиотекаКартинок.Информация32);
	//	Иначе 
	//		ТекстСостояния = СтрШаблон(НСтр("ru='Обработка строки № %1 из %2.'"),
	//			ПараметрыВремя.Счетчик, ПараметрыВремя.Количество);
	//		ОстатокВремени = ДлительныеОперацииПТБКлиентСервер.ОценитьОстатокВремениВыполнения(ПараметрыВремя);
	//		Состояние(ТекстСостояния + " " + ОстатокВремени, ПараметрыВремя.Процент,, БиблиотекаКартинок.Информация32);
	//	КонецЕсли;
	//	
	//	ВремяА = ТекущаяДата() + 1;
	//	Пока ВремяА > ТекущаяДата() Цикл
	//		// ожидание
	//	КонецЦикла;
	//	
	//	ЗначДО = ПараметрыВремя.ОкончаниеВыполнения;
	//	ДлительныеОперацииПТБКлиентСервер.ЗафиксироватьВремяОкончанияВыполнения(ПараметрыВремя);
	//	ДобавитьСтроку(ТестСообщения, "Время увеличивается: " + Строка(ЗначДО <> ПараметрыВремя.ОкончаниеВыполнения));
	//КонецЦикла;
	//
	//ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТестСообщения);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура ДобавитьСтроку(ТестСообщения, знач ДопСтрока)
	ТестСообщения = ТестСообщения + ?(ПустаяСтрока(ТестСообщения), "", Символы.ПС + Символы.Таб + "-") + ДопСтрока;
КонецПроцедуры
