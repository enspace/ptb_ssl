
#Область ОбработчикиСобытийЭлементовТаблицыФормы_ФормулыРасчета

&НаКлиенте
Процедура ФормулыРасчетаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.ФормулыРасчета.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСФормуламиКлиент.ТаблицаФормулВыбор(ЭтотОбъект, Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка);
	
	Если СтандартнаяОбработка = Ложь Тогда
		РедактироватьФормулу(ТекущиеДанные);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФормулыРасчетаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	РаботаСФормуламиКлиент.ТаблицаФормулПриНачалеРедактирования(ЭтотОбъект, Элемент, НоваяСтрока, Копирование);
	
КонецПроцедуры

&НаКлиенте
Процедура ФормулыРасчетаПередУдалением(Элемент, Отказ)
	ОписаниеОповещения = Новый ОписаниеОповещения("ФормулыРасчетаПослеУдаленияЗавершение", ЭтотОбъект);
	
	РаботаСФормуламиКлиент.ТаблицаФормулПередУдалением(ЭтотОбъект,
		Элемент,
		Отказ,
		"Объект.ФормулыРасчета",
		ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ФормулыРасчетаСуммаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ФормулыРасчета.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РучноеЗначениеДо = ТекущиеДанные.РучноеЗначение; 
	РаботаСФормуламиКлиент.ТаблицаФормулСуммаПриИзменении(ЭтотОбъект, Элемент);
	
	Если ТекущиеДанные.РучноеЗначение <> РучноеЗначениеДо Тогда
		ВыполнитьПересчетДанныхТаблицыФормул(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
    РаботаСФормуламиКлиентСервер.ТаблицаФормулУстановитьОформление(ЭтотОбъект, "Объект.ФормулыРасчета");

	Если Объект.Ссылка.Пустая() Тогда
		ДополнитьФормулыРасчетаПредопределеннымиЭлементамиНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьРасчет(Команда)
	ВыполнитьПересчетДанныхТаблицыФормул(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ЗавершениеНемодальныхВызовов
	 
&НаКлиенте
Процедура РедактироватьФормулуЗавершение(ДанныеИзменились, ДопПараметры) Экспорт	
	Если НЕ ДанныеИзменились = Истина Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.Модифицированность = Истина;
	
	ВыполнитьПересчетДанныхТаблицыФормул(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте 
Процедура ФормулыРасчетаПослеУдаленияЗавершение(Результат, ДопПараметры) Экспорт
	ВыполнитьПересчетДанныхТаблицыФормул(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте 
Процедура РедактироватьФормулу(знач СтрокаФормулы)
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("Идентификатор"	, СтрокаФормулы.Идентификатор);
	ДопПараметры.Вставить("Колонка"			, СтрокаФормулы.Колонка);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("РедактироватьФормулуЗавершение", ЭтотОбъект, ДопПараметры);
	
	ПараметрыРедактирования = РаботаСФормуламиКлиент.ПараметрыРедактирования(ЭтотОбъект);
	ПараметрыРедактирования.ФормулыРасчета			= Объект.ФормулыРасчета;
	ПараметрыРедактирования.СтрокаФормулы			= СтрокаФормулы;
	ПараметрыРедактирования.Показатели				= ПолучитьДополнительныеПоказателиДляРедактирования();
	ПараметрыРедактирования.Оповещение				= ОписаниеОповещения;
	ПараметрыРедактирования.ТолькоПросмотр			= ЭтотОбъект.ТолькоПросмотрФормулы;
	ПараметрыРедактирования.ЗапретитьПоказатель		= СтрокаФормулы.Предопределенный;
	ПараметрыРедактирования.РазрешитьПустоеЗначение	= НЕ СтрокаФормулы.Предопределенный;
	
	РаботаСФормуламиКлиент.РедактироватьФормулу(ПараметрыРедактирования);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура ВыполнитьПересчетДанныхТаблицыФормул(Форма)                                               
	Показатели = ПолучитьДополнительныеПоказателиДляРасчета(Форма.Объект);
	
	РезультатРасчета = РаботаСФормуламиКлиентСервер.ТаблицаФормулВыполнитьПересчет(Форма, "Объект.ФормулыРасчета", Показатели);
	Если НЕ РезультатРасчета Тогда
		Возврат;
	КонецЕсли;
	
	Форма.Модифицированность = Истина;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Функция ПолучитьДополнительныеПоказателиДляРедактирования()
	Показатели = Новый Структура;
	
	РаботаСФормуламиКлиентСервер.ДобавитьГруппуПоказателей(Показатели,
		"ПоказателиДокумента",
		НСтр("ru='Показатели документа'"));
		
	РаботаСФормуламиКлиентСервер.ДобавитьПоказательВГруппу(Показатели.ПоказателиДокумента,
		"ДатаДокумента",
		НСтр("ru='Дата документа'"));
		
	РаботаСФормуламиКлиентСервер.ДобавитьПоказательВГруппу(Показатели.ПоказателиДокумента,
		"СекундНачДня",
		НСтр("ru='Секунд с начала дня'"));
		
	Возврат Показатели;
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Функция ПолучитьДополнительныеПоказателиДляРасчета(знач ДокОбъект)              
	Показатели = Новый Соответствие;
	Показатели.Вставить("ДатаДокумента"	, ДокОбъект.Дата);
	Показатели.Вставить("СекундНачДня"	, ДокОбъект.Дата - НачалоДня(ДокОбъект.Дата));
		
	Возврат Показатели;
КонецФункции

&НаСервере 
Процедура ДополнитьФормулыРасчетаПредопределеннымиЭлементамиНаСервере()
	РучноеЗначение	= Перечисления.СпособыРасчетаПоказателяФормулы.РучнойВвод;
	РасчетПоФормуле	= Перечисления.СпособыРасчетаПоказателяФормулы.Формула;
	
	ТарифОписание = НСтр("ru='Заработная плата, надбавки и доплаты, премии и вознаграждения"
		+ ", оплата отпусков, компенсационные выплаты, связанные с режимом работы и условиями"
		+ " труда и другие выплаты, включаемые в фонд оплаты труда основных рабочих'");
		
	НалогиОписание = НСтр("ru='Социальное и медицинское страхование, взносы в пенсионные фонды"
		+ " и другие выплаты во внебюджетные фонды'");
		
	КосвенныеОписание = НСтр("ru='Косвенные затраты на 1 чел-час'"); 
		
	СтоимостьОписание = НСтр("ru='Полная стоимость прямых затрат на ч/ч'");
	
	РаботаСФормуламиКлиентСервер.ТаблицаФормулДобавитьСтроку(Объект.ФормулыРасчета, "",
		"Тариф_ЧЧ", НСтр("ru='Тариф'"),
		0,
		"Тариф_ЧЧ", ТарифОписание,
		Ложь, 2, Истина);
		
	РаботаСФормуламиКлиентСервер.ТаблицаФормулДобавитьСтроку(Объект.ФормулыРасчета, "",
		"СтавкаНалоги_ЧЧ", НСтр("ru='Ставка отчислений во внебюджетные фонды'"),
		30.05,
		"СтавкаНалоги_ЧЧ", НСтр("ru='Средняя ставка отчислений во внебюджетные фонды'") ,
		Ложь, 2, Истина);
		
	РаботаСФормуламиКлиентСервер.ТаблицаФормулДобавитьСтроку(Объект.ФормулыРасчета, "",
		"Налоги_ЧЧ", НСтр("ru='Отчисления во внебюджетные фонды'"),
		"Тариф_ЧЧ * СтавкаНалоги_ЧЧ / 100",
		"Налоги_ЧЧ", НалогиОписание,
		Ложь, 2, Истина);
		
	РаботаСФормуламиКлиентСервер.ТаблицаФормулДобавитьСтроку(Объект.ФормулыРасчета, "",
		"Косвенные_ЧЧ", НСтр("ru='Косвенные затраты на 1 чел-час'"),
		0,
		"Косвенные_ЧЧ", КосвенныеОписание,
		Ложь, 2, Истина);
		
	РаботаСФормуламиКлиентСервер.ТаблицаФормулДобавитьСтроку(Объект.ФормулыРасчета, "",
		"Стоимость_ЧЧ", НСтр("ru='Стоимость 1 чел-часа'"),
		"Тариф_ЧЧ + Налоги_ЧЧ + Косвенные_ЧЧ",
		"Стоимость_ЧЧ", СтоимостьОписание,
		Ложь, 2, Истина, Истина);
КонецПроцедуры

#КонецОбласти


