// Открывает форму "ОбщаяФорма.РедактированиеТабличныхЧастей" с передачей в нее параметров о текущей таблице формы, выделенных в ней строках и колонках в которых возможно групповое редактирование строк.
//
// Параметры:
//	Форма	- УправляемаяФорма - произвольная форма справочника, документа, обработки, содержащая таблицы формы.
//ВНИМАНИЕ! Для формы обязательна инициализация реквизита "_Служебный_ОписаниеТаблицДляГрупповогоРедактирования_". 
//Подробнее в описании процедуры ГрупповоеРедактированиеТабличныхЧастейСервер.СформироватьОписаниеТаблицДляГрупповогоРедактирования()
//
Процедура ОткрытьФормуЗаполненияВыделенныхСтрок(Форма) Экспорт

	ТекущаяТаблицаФормы = Форма.ТекущийЭлемент;
	
	Если ТипЗнч(ТекущаяТаблицаФормы) <> Тип("ТаблицаФормы") Тогда
		Возврат;
	КонецЕсли; 
	
	Если ТипЗнч(Форма._Служебный_ОписаниеТаблицДляГрупповогоРедактирования_) <> Тип("ФиксированноеСоответствие") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Ошибка инициализации реквизита формы ""_Служебный_ОписаниеТаблицДляГрупповогоРедактирования_""'"));
		Возврат;
	КонецЕсли; 
	
	ИмяТекущейТаблицы = ТекущаяТаблицаФормы.Имя;
	
	ОписаниеТекущейТаблицы = Форма._Служебный_ОписаниеТаблицДляГрупповогоРедактирования_.Получить(ИмяТекущейТаблицы);
	Если ТипЗнч(ОписаниеТекущейТаблицы) <> Тип("Структура") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для данной табличной части групповое редактирование строк запрещено'"));
		Возврат;
	КонецЕсли; 
	
	Если ТипЗнч(ОписаниеТекущейТаблицы) <> Тип("Структура") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Ошибка инициализации реквизита формы ""_Служебный_ОписаниеТаблицДляГрупповогоРедактирования_""'"));
		Возврат;
	КонецЕсли; 
	
	ТаблицаИмяЭлемента 			= ОписаниеТекущейТаблицы.ТаблицаИмяЭлемента;
	ТаблицаПутьКДанным 			= ОписаниеТекущейТаблицы.ТаблицаПутьКДанным;
	ДоступныеКолонкиСоответствие= ОписаниеТекущейТаблицы.ДоступныеКолонкиСоответствие;
	
	Если Не ЗначениеЗаполнено(ДоступныеКолонкиСоответствие) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Нет доступных колонок для группового редактирования строк'"));
		Возврат;
	КонецЕсли; 

	МассивВыделенныхСтрок = ТекущаяТаблицаФормы.ВыделенныеСтроки;

	Если МассивВыделенныхСтрок.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выделено ни одной строки таблицы для группового редактирования строк'"));
		Возврат;
	КонецЕсли;
	
	Если ТаблицаПутьКДанным = "" Тогда
		ТаблицаПутьКДанным = ТаблицаИмяЭлемента;
	КонецЕсли;
	
	КоллекцияДанныхФормы = ПолучитьКоллекциюДанныхФормыПоПутиКДанным(Форма, ТаблицаПутьКДанным);
	
	МассивДанныхТаблицы = Новый Массив;

	ДанныеТекущейСтроки = Новый Структура;
	ДанныеТекущейСтроки.Вставить("ПутьКДаннымТекущейТаблицы", ТаблицаПутьКДанным);

	// проверяем тип табличной части - ТаблицаЗначений
	// получаем Соответствие значений, где ключ Имя колонки, Значение - Массив значений по колонке

	Если ТипЗнч(КоллекцияДанныхФормы) = Тип("ДанныеФормыКоллекция") ИЛИ ТипЗнч(КоллекцияДанныхФормы) = Тип("ДанныеФормыДерево")Тогда
		
		НомерТекущейСтрокиТаблицы	= ТекущаяТаблицаФормы.ТекущаяСтрока;
		Если ТипЗнч(ТекущаяТаблицаФормы.ТекущийЭлемент) = Тип("Полеформы") Тогда
			ИмяТекущейКолонкиТаблицы = ТекущаяТаблицаФормы.ТекущийЭлемент.Имя;
		Иначе
			ИмяТекущейКолонкиТаблицы = Неопределено;
		КонецЕсли; 

		Для каждого КлючИЗНачение Из ДоступныеКолонкиСоответствие Цикл
			
			//Проверим доступность колонок
			СтруктураКолонки = КлючИЗНачение.Значение;
			ЭлементКолонка = Форма.Элементы[СтруктураКолонки.ИмяЭлемента];
			Если ТипЗнч(ЭлементКолонка) <> Тип("ПолеФормы") Тогда
				Продолжить;
			КонецЕсли; 
			
			Если НЕ(ЭлементКолонка.Видимость И ЭлементКолонка.Доступность) ИЛИ ЭлементКолонка.ТолькоПросмотр Тогда
				Продолжить;
			КонецЕсли; 
			
			// Определим данные в текущей ячейке
			Если Нрег(КлючИЗНачение.Ключ) = НРег(ИмяТекущейКолонкиТаблицы) Тогда
				ДанныеТекущейСтроки.Вставить("ТекущаяВыделеннаяКолонка",	СтруктураКолонки.Имя);
				ДанныеТекущейСтроки.Вставить("ТекущаяВыделеннаяСтрока", 	НомерТекущейСтрокиТаблицы);
				ДанныеТекущейСтроки.Вставить("ЗначениеВТекущейЯчейке", 		КоллекцияДанныхФормы.НайтиПоИдентификатору(НомерТекущейСтрокиТаблицы)[СтруктураКолонки.Имя]);
			КонецЕсли; 
			
			МассивЗначений = Новый Массив;
			Для Каждого ВыделеннаяСтрока Из МассивВыделенныхСтрок Цикл
				СтрокаТаблицы = КоллекцияДанныхФормы.НайтиПоИдентификатору(ВыделеннаяСтрока);

				СтруктураЗначений = Новый Структура;
				СтруктураЗначений.Вставить("ИндексВыделеннойСтроки",	ВыделеннаяСтрока);
				СтруктураЗначений.Вставить("Значение", 					СтрокаТаблицы[СтруктураКолонки.Имя]);
				МассивЗначений.Добавить(СтруктураЗначений);
			КонецЦикла;

			СтруктураКолонки.Вставить("Значения", МассивЗначений);

			МассивДанныхТаблицы.Добавить(СтруктураКолонки);
		КонецЦикла; 		
	Иначе
		Возврат;
	КонецЕсли; 
		
	Если МассивДанныхТаблицы.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Нет доступных колонок для группового редактирования строк'"));
		Возврат;
	КонецЕсли;

	ПараметрыФормы = Новый Структура("МассивДанныхТаблицы, ДанныеТекущейСтроки", МассивДанныхТаблицы, ДанныеТекущейСтроки);
	
	ТаблицаФормыДокумента = Форма.Элементы[ТаблицаИмяЭлемента];	
	ОткрытьФорму("ОбщаяФорма.РедактированиеТабличныхЧастей", ПараметрыФормы, ТаблицаФормыДокумента);

КонецПроцедуры

// Выполняет запись данных в таблицу формы из которой была вызвана групповая обработка строк.
//
// Параметры:
//	Форма	- УправляемаяФорма - произвольная форма справочника, документа, обработки, содержащая таблицы формы.
//ВНИМАНИЕ! Для формы обязательна инициализация реквизита "_Служебный_ОписаниеТаблицДляГрупповогоРедактирования_". 
//Подробнее в описании процедуры ГрупповоеРедактированиеТабличныхЧастейСервер.СформироватьОписаниеТаблицДляГрупповогоРедактирования()
//	ВыбранноеЗначение 	- Структура
//	СтандартнаяОбработка 	- Булево
//	ВызыватьОбработку		- Булево
//
Процедура ОбработкаВыбораТабличнойЧасти(Форма, ВыбранноеЗначение, СтандартнаяОбработка, ВызыватьОбратку = Истина) Экспорт

	Если ТипЗнч(ВыбранноеЗначение) <> Тип("Структура") Тогда 
		Возврат;
	КонецЕсли;
	
	Если НЕ ВыбранноеЗначение.Свойство("ИмяСтруктуры") Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение.ИмяСтруктуры <> "ГрупповоеРедактированиеСтрок" Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;

	КоллекцияДанныхФормы = ПолучитьКоллекциюДанныхФормыПоПутиКДанным(Форма, ВыбранноеЗначение.ПутьКДаннымТекущейТаблицы);
	СтруктураОповещений = Новый Структура;

	Попытка	
		Оповещение = Новый ОписаниеОповещения("Подключаемый_ОбработчикиПриГрупповомРедактированииСтрок", Форма, ВыбранноеЗначение);
		СтруктураОповещений.Вставить("Оповещение",Оповещение);
	Исключение
	КонецПопытки;

	Для Каждого ЭлементМассива Из ВыбранноеЗначение.МассивВыделенныхСтрок Цикл
	    СтрокаТаблицы = КоллекцияДанныхФормы.НайтиПоИдентификатору(ЭлементМассива);

		ЗначениеДо = СтрокаТаблицы[ВыбранноеЗначение.Колонка];
		ВызыватьОбратку = Истина;
		Если ВызыватьОбратку Тогда
			Отказ = Ложь;
			Попытка
				Форма.Подключаемый_ГрупповоеРедактированиеПередИзменением(СтрокаТаблицы, ВыбранноеЗначение.Колонка, ЗначениеДо, ВыбранноеЗначение.ЗначениеДляЗаполнения, Отказ);
			Исключение
			КонецПопытки;
			
			Если Отказ = Истина Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		СтрокаТаблицы[ВыбранноеЗначение.Колонка] = ВыбранноеЗначение.ЗначениеДляЗаполнения;
		
		СтруктураРезультат = Новый Структура("СтрокаТаблицы, Колонка, ЗначениеДляЗаполнения", СтрокаТаблицы, ВыбранноеЗначение.Колонка, ВыбранноеЗначение.ЗначениеДляЗаполнения);
		Если ЗначениеЗаполнено(СтруктураОповещений) Тогда
			ВыполнитьОбработкуОповещения(СтруктураОповещений.Оповещение, СтруктураРезультат);
		КонецЕсли;

	КонецЦикла;
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

Процедура РасчетСуммыВыделенныхСтрок(Форма) Экспорт
	Элемент = Форма.ТекущийЭлемент;
	Если ТипЗнч(Элемент) <> Тип("ТаблицаФормы") Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитХраненияСуммы = Элемент.Имя + "_РасчетСуммыСтрок_";
	
	Попытка
		Форма[РеквизитХраненияСуммы] = 0;	
	Исключение
		Возврат;
	КонецПопытки; 
	
	Попытка
		ОписаниеТаблиц = Форма["_Служебный_ОписаниеТаблицДляГрупповогоРедактирования_"];
	Исключение
		Возврат;
	КонецПопытки;
	
	Если ТипЗнч(ОписаниеТаблиц) <> Тип("ФиксированноеСоответствие") Тогда
		Возврат;
	КонецЕсли; 
	
	ОписаниеТаблицы = ОписаниеТаблиц.Получить(Элемент.Имя);
	Если ТипЗнч(ОписаниеТаблицы) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТекущейКолонки = Элемент.ТекущийЭлемент.Имя;
	
	ОписаниеКолонки = ОписаниеТаблицы.ДоступныеКолонкиСоответствие.Получить(ИмяТекущейКолонки);
	Если ОписаниеКолонки = Неопределено Тогда
		Возврат;	
	КонецЕсли; 

	Если НЕ ОписаниеКолонки.ТипЗначения.СодержитТип(Тип("Число")) Тогда
		Форма[РеквизитХраненияСуммы] = 0;
		Возврат;
	КонецЕсли; 
	
	ВыделенныеСтроки = Элемент.ВыделенныеСтроки;
	
	СуммаВыделенныхСтрок = 0;
	Для Каждого СтрокаСписка из ВыделенныеСтроки Цикл			
		СуммаВыделенныхСтрок = СуммаВыделенныхСтрок + Элемент.ДанныеСтроки(СтрокаСписка)[ОписаниеКолонки.Имя];
	КонецЦикла;
	
	Форма[РеквизитХраненияСуммы] = СуммаВыделенныхСтрок;
	
КонецПроцедуры

Функция ПолучитьКоллекциюДанныхФормыПоПутиКДанным(Форма, ТаблицаПутьКДанным) Экспорт
	
	Если СтрЧислоВхождений(ТаблицаПутьКДанным,".") = 0 Тогда
	 	КоллекцияДанныхФормы = Форма[ТаблицаПутьКДанным];
	Иначе  	// Если ПутьКДанным = "Объект.ТаблицаОбъекта"
		Массив = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТаблицаПутьКДанным, ".");
	 	КоллекцияДанныхФормы = Форма[Массив[0]][Массив[1]];
	КонецЕсли; 
	Возврат КоллекцияДанныхФормы;
	
КонецФункции
