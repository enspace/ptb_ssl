
#Область ПрограммныйИнтерфейс

// Устанавливает префикс для указанного реквизита
//
// Параметры:
//	Настройки	- Соответствие
//	ПолныйПуть	- Строка - допускается использование "." в качестве разделителя
//	Префикс		- Строка - значение для подстановки перед реквизитом. Должно содержать необходимые пробелы
//
Процедура УстановитьПрефикс(знач Настройки, знач ПолныйПуть, знач Префикс = "") Экспорт
	ИмяНастройки = "Префикс";
	Если НЕ ЗначениеЗаполнено(Префикс) Тогда
		УдалитьНастройку(Настройки, ПолныйПуть, ИмяНастройки);
	Иначе 
		УстановитьНастройку(Настройки, ПолныйПуть, ИмяНастройки, Префикс);
	КонецЕсли;
КонецПроцедуры

// Устанавливает формат для указанного реквизита
//
// Параметры:
//	Настройки	- Соответствие
//	ПолныйПуть	- Строка - допускается использование "." в качестве разделителя
//	Формат		- Строка - настройка форматирования значения
//
Процедура УстановитьФормат(знач Настройки, знач ПолныйПуть, знач Формат = "") Экспорт
	ИмяНастройки = "Формат";
	Если НЕ ЗначениеЗаполнено(Формат) Тогда
		УдалитьНастройку(Настройки, ПолныйПуть, ИмяНастройки);
	Иначе 
		УстановитьНастройку(Настройки, ПолныйПуть, ИмяНастройки, Формат);
	КонецЕсли;
КонецПроцедуры

// Устанавливает положение для указанного реквизита
// Положение имеет смысл использовать, если представление формируется из массива значений
//
// Параметры:
//	Настройки	- Соответствие
//	ПолныйПуть	- Строка - допускается использование "." в качестве разделителя
//	Положение	- Число - значение положения поля при компоновки представления
//		-1 - только в начале
//		0 - повторять
//		1 - только в конце
//
Процедура УстановитьПоложение(знач Настройки, знач ПолныйПуть, знач Положение = 0) Экспорт
	ИмяНастройки = "Положение";
	Если Положение = 0 Тогда
		УдалитьНастройку(Настройки, ПолныйПуть, ИмяНастройки);
	Иначе 
		УстановитьНастройку(Настройки, ПолныйПуть, ИмяНастройки, Положение);
	КонецЕсли;
КонецПроцедуры

// Возвращает значение настройки по указанному пути
//
// Параметры:
//	Настройки	- Соответствие
//	ПолныйПуть	- Строка - допускается использование "." в качестве разделителя
//
// Возвращаемое значение:
//   Строка
//
Функция ПолучитьПрефикс(знач Настройки, знач ПолныйПуть) Экспорт 
	Префикс = " ";
	Если НЕ ЭтоСоответствие(Настройки) Тогда
		Возврат Префикс;
	КонецЕсли;
	
	КлючПоиска	= КлючНастройки(ПолныйПуть);
	Настройка	= Настройки.Получить(КлючПоиска);
	Если НЕ ЭтоСтруктура(Настройка) Тогда
		Возврат Префикс;
	КонецЕсли;
	
	Возврат ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Настройка, "Префикс", Префикс);
КонецФункции

// Возвращает значение настройки по указанному пути
//
// Параметры:
//	Настройки	- Соответствие
//	ПолныйПуть	- Строка - допускается использование "." в качестве разделителя
//
// Возвращаемое значение:
//   Строка
//
Функция ПолучитьФормат(знач Настройки, знач ПолныйПуть) Экспорт 
	Формат = "";
	Если НЕ ЭтоСоответствие(Настройки) Тогда
		Возврат Формат;
	КонецЕсли;
	
	КлючПоиска	= КлючНастройки(ПолныйПуть);
	Настройка	= Настройки.Получить(КлючПоиска);
	Если НЕ ЭтоСтруктура(Настройка) Тогда
		Возврат Формат;
	КонецЕсли;
	
	Возврат ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Настройка, "Формат", Формат);
КонецФункции

// Возвращает значение настройки по указанному пути
//
// Параметры:
//	Настройки	- Соответствие
//	ПолныйПуть	- Строка - допускается использование "." в качестве разделителя
//
// Возвращаемое значение:
//   Число
//
Функция ПолучитьПоложение(знач Настройки, знач ПолныйПуть) Экспорт 
	Положение = 0;
	Если НЕ ЭтоСоответствие(Настройки) Тогда
		Возврат Положение;
	КонецЕсли;
	
	КлючПоиска	= КлючНастройки(ПолныйПуть);
	Настройка	= Настройки.Получить(КлючПоиска);
	Если НЕ ЭтоСтруктура(Настройка) Тогда
		Возврат Положение;
	КонецЕсли;
	
	Возврат ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Настройка, "Положение", Положение);
КонецФункции

// Возвращает ключ настройки по указанному пути
//
// Параметры:
//	ПолныйПуть - Строка - допускается использование "." в качестве разделителя
//
// Возвращаемое значение:
//   Строка
//
Функция КлючНастройки(знач ПолныйПуть) Экспорт
	Возврат НРег(СокрЛП(ПолныйПуть));
КонецФункции

// Возвращает результат соединения значений по перечню реквизитов, с учетом префиксов, форматирования и положения
//	Пример:
//		Процедура ВывестиПредставлениеОрганизации(знач КонтрагентСсылка)
//			Настройки = Новый Соответствие;
//			КонструкторПредставленияКлиентСервер.УстановитьПрефикс(Настройки, "ИНН", " ИНН/КПП ");
//			КонструкторПредставленияКлиентСервер.УстановитьПрефикс(Настройки, "КПП", "/");
//
//			Порядок = "Наименование,ИНН,КПП";
//			
//			Данные = Новый Структура("Наименование,ИНН,КПП",
//				КонтрагентСсылка.Наименование,
//				КонтрагентСсылка.ИНН,
//				КонтрагентСсылка.КПП);
//
//			СформироватьПредставление(Данные, Порядок, Настройки);
//		КонецПроцедуры
//
// Параметры:
//	Данные		- Массив, Структура, Соответствие - имя и значение поля для представления
//	Реквизиты	- Строка, Массив - порядок полей для формирования представления
//		Поле может быть не только в рамках текущей структуры, но и с учетом пути по вложенным значениям
//	Настройки	- Соответствие - настройки для вывода данных
//		Устанавливаются методами "Установить[ИмяНастройки]"
//
// Возвращаемое значение:
//   Строка
//
Функция ПодготовитьПредставление(знач Данные, знач Реквизиты, знач Настройки = Неопределено) Экспорт
	Представления = Новый Массив;
	
	Если ЭтоМассив(Реквизиты) Тогда
		Колонки = Реквизиты;
	Иначе 
		Колонки = СтрРазделить(Реквизиты, ",", Ложь);
	КонецЕсли;
	
	Параметры = ПодготовитьНастройки(Колонки, Настройки);
	
	Если ЭтоМассив(Данные) Тогда
		ПоследнийИндекс = Данные.ВГраница();
		Для Индекс = 0 По ПоследнийИндекс Цикл
			КолонкиСтроки = Новый Массив;
			
			Если Индекс = 0 Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КолонкиСтроки, Параметры.Положения.Начало);
			КонецЕсли;
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КолонкиСтроки, Параметры.Положения.Повторять);
			Если Индекс = ПоследнийИндекс Тогда
				ОбщегоНазначенияКлиентСервер.ДополнитьМассив(КолонкиСтроки, Параметры.Положения.Конец);
			КонецЕсли;
			
			НаборДанных = Данные[Индекс];
			
			СтрПредставление = СформироватьПредставлениеПоКоллекции(НаборДанных, КолонкиСтроки, Параметры);
			Если ЗначениеЗаполнено(СтрПредставление) Тогда
				Представления.Добавить(СтрПредставление);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ЭтоСтруктура(Данные) ИЛИ ЭтоСоответствие(Данные) Тогда
		
		СтрПредставление = СформироватьПредставлениеПоКоллекции(Данные, Колонки, Параметры);
		Если ЗначениеЗаполнено(СтрПредставление) Тогда
			Представления.Добавить(СтрПредставление);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтрСоединить(Представления, "; ");
КонецФункции

// Возвращает результат метода ПодготовитьПредставление, но только с учетом переданных префиксов
//
// Параметры:
//	Данные		- Массив, Структура - имя и значение поля для представления
//	Реквизиты	- Строка - порядок полей для формирования представления
//		Поле может быть не только в рамках текущей структуры, но и с учетом пути по вложенным значениям
//	Префиксы	- Структура - имя колонки, значение префикса
//
// Возвращаемое значение:
//   Строка
//
Функция ПодготовитьПредставлениеТолькоПрефиксы(знач Данные, знач Реквизиты, знач Префиксы = Неопределено) Экспорт
	Настройки = ПолучитьНастройкиИзПрефиксов(Префиксы);
	Возврат ПодготовитьПредставление(Данные, Реквизиты, Настройки);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьНастройку(знач Настройки, знач ПолныйПуть, знач ИмяНастройки, знач Значение)
	КлючПоиска = КлючНастройки(ПолныйПуть);
	
	Если НЕ ТипЗнч(Настройки) = Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	Настройка = Настройки.Получить(КлючПоиска);
	Если Настройка = Неопределено Тогда
		Результат = Новый Структура;
	Иначе 
		Результат = РедактируемаяСтруктура(Настройка);
	КонецЕсли;
	
    Результат.Вставить(ИмяНастройки, Значение);
	Настройки.Вставить(КлючПоиска, Новый ФиксированнаяСтруктура(Результат));
КонецПроцедуры

Процедура УдалитьНастройку(знач Настройки, знач ПолныйПуть, знач ИмяНастройки)
	КлючПоиска = КлючНастройки(ПолныйПуть);
	
	Если НЕ ТипЗнч(Настройки) = Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	Настройка = Настройки.Получить(КлючПоиска);
	Если Настройка = Неопределено Тогда
		Результат = Новый Структура;
	Иначе 
		Результат = РедактируемаяСтруктура(Настройка);
	КонецЕсли;

	Если Результат.Свойство(ИмяНастройки) Тогда
		Результат.Удалить(ИмяНастройки);
	КонецЕсли;
	
	Если Результат.Количество() = 0 Тогда
		Настройки.Удалить(КлючПоиска);
	Иначе 
		Настройки.Вставить(КлючПоиска, Новый ФиксированнаяСтруктура(Результат));
	КонецЕсли;
КонецПроцедуры

// Возвращает структуру по перечню указанных полей из структуры переданных данных
//	Пример:
//		Процедура ВывестиПредставлениеОрганизации(знач КонтрагентСсылка)
//			Порядок		= "Наименование,ИНН,КПП";
//			Префиксы	= Новый Структура("ИНН,КПП", " ИНН/КПП", "/");
//			Данные		= Новый Структура("Наименование,ИНН,КПП",
//				КонтрагентСсылка.Наименование,
//				КонтрагентСсылка.ИНН,
//				КонтрагентСсылка.КПП);
//
//			СформироватьПредставлениеПоСтруктуре(Данные, Порядок, Префиксы);
//		КонецПроцедуры;
//
// Параметры:
//	НаборДанных	- Структура, Соответствие - имя и значение поля для представления
//	МассивПолей	- Массив - порядок полей для формирования представления
//	Параметры	- Структура - настройки вывода данных
//		Форматы		- Соответствие
//		Префиксы	- Соответствие
//
// Возвращаемое значение:
//   Строка
//
Функция СформироватьПредставлениеПоКоллекции(знач НаборДанных, знач МассивПолей, знач Параметры) 
	Префиксы	= Параметры.Префиксы;
	Форматы		= Параметры.Форматы;
	
	НаборСтруктура = ЭтоСтруктура(НаборДанных);
	
	ДопустимыеТипы = Новый Массив;
	ДопустимыеТипы.Добавить(Тип("Соответствие"));
	ДопустимыеТипы.Добавить(Тип("ФиксированноеСоответствие"));
	
	НетПрефиксов	= (ДопустимыеТипы.Найти(ТипЗнч(Параметры.Префиксы)) = Неопределено);
	НетФорматов		= (ДопустимыеТипы.Найти(ТипЗнч(Параметры.Форматы)) = Неопределено);
	
	Результат = Новый Массив;
	Для Каждого ПолныйПуть Из МассивПолей Цикл
		ПолныйПуть	= СокрЛП(ПолныйПуть);
		КлючПоиска	= КлючНастройки(ПолныйПуть);
		
		Если НаборСтруктура Тогда
			ЗначениеПоля = ОбщегоНазначенияПТБКлиентСервер.СвойствоСтруктуры(НаборДанных, ПолныйПуть, "");
		Иначе 
			ЗначениеПоля = НаборДанных.Получить(ПолныйПуть);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ЗначениеПоля) Тогда
			Продолжить;
		КонецЕсли;
		
		Если НетФорматов Тогда
			СтрФормат = "";
		Иначе 
			СтрФормат = Параметры.Форматы.Получить(КлючПоиска);
			СтрФормат = ?(СтрФормат = Неопределено, "", СтрФормат);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрФормат) Тогда
			ЗначениеПоля = Формат(ЗначениеПоля, СтрФормат);
		КонецЕсли;
		
		Если НетПрефиксов Тогда
			СтрПрефикс = " ";
		Иначе 
			СтрПрефикс = Параметры.Префиксы.Получить(КлючПоиска);
			СтрПрефикс = ?(СтрПрефикс = Неопределено, " ", СтрПрефикс);
		КонецЕсли;
		
		Результат.Добавить(СтрПрефикс + ЗначениеПоля);
	КонецЦикла;
	
	Представление = СокрЛП(СтрСоединить(Результат, ""));
	Пока СтрНайти(Представление, "  ") > 0 Цикл
		Представление = СтрЗаменить(Представление, "  ", " ");
	КонецЦикла;
	
	Возврат Представление;
КонецФункции

// Подготавливает настройки для удобного использования при формировании представления
//
// Параметры:
//	Реквизиты	- Массив - список полных путей к данным, планируемых к выводу
//	Настройки	- Соответствие - данные настроек
//		Ключ		- Строка - полный путь к колонке (в нижнем регистре)
//		Значение	- Структура - настройка вывода
//			Префикс, Формат, Положение
//
// Возвращаемое значение:
//   Структура
//		Префиксы	- Соответствие - набор префиксов по каждой колонке
//		Форматы		- Соответствие - набор форматов по каждой колонке
//		Положения	- Структура - положение данных, актуально, если передан массив в набор данных
//			Начало		- Массив - список колонок в начале представления
//			Повторять	- Массив - список колонок повторяющихся в массиве
//			Конец		- Массив - список колонок в конце представления
//
Функция ПодготовитьНастройки(знач Реквизиты, знач Настройки)
	КолонкиНачало		= Новый Массив;
	КолонкиКонец		= Новый Массив;
	КолонкиПовторять	= Новый Массив;
	
	Положения = Новый Структура("Начало,Повторять,Конец",
		КолонкиНачало,
		КолонкиПовторять,
		КолонкиКонец);
	
	Результат = Новый Структура("Префиксы,Форматы,Положения",
		Новый Соответствие,
		Новый Соответствие,
		Положения);
	
	Если НЕ ЭтоСоответствие(Настройки) Тогда
		Настройки = Новый Соответствие;
	КонецЕсли;
	
	Для Каждого ПолныйПуть Из Реквизиты Цикл
		ПолныйПуть	= СокрЛП(ПолныйПуть);
		КлючПоиска	= КлючНастройки(ПолныйПуть);
		
		Настройка = Настройки.Получить(КлючПоиска);
		Если НЕ ЭтоСтруктура(Настройка) Тогда
			Настройка = Новый Структура;
		КонецЕсли;
		
		Префикс 	= ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Настройка, "Префикс"	, " ");
		Формат		= ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Настройка, "Формат"	, "");
		Положение	= ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Настройка, "Положение"	, 0);
		
		Результат.Префиксы.Вставить(КлючПоиска, Префикс);
		Результат.Форматы.Вставить(КлючПоиска, Формат);
		
		Если Положение = -1 Тогда
			КолонкиНачало.Добавить(ПолныйПуть);
		ИначеЕсли Положение = 1 Тогда
			КолонкиКонец.Добавить(ПолныйПуть);
		ИначеЕсли Положение = 0 Тогда
			КолонкиПовторять.Добавить(ПолныйПуть);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьНастройкиИзПрефиксов(знач Префиксы)
	Настройки = Новый Соответствие;
	Если НЕ ЭтоСтруктура(Префиксы) Тогда
		Возврат Настройки;
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из Префиксы Цикл
		УстановитьПрефикс(Настройки, КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	Возврат Настройки;
КонецФункции

Функция РедактируемоеСоответствие(знач Соответствие)
	Если ТипЗнч(Соответствие) = Тип("Соответствие") Тогда
		Возврат Соответствие;
	ИначеЕсли ТипЗнч(Соответствие) = Тип("ФиксированноеСоответствие") Тогда
		Возврат Новый Соответствие(Соответствие);
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция РедактируемаяСтруктура(знач Структура)
	Если ТипЗнч(Структура) = Тип("Структура") Тогда
		Возврат Структура;
	ИначеЕсли ТипЗнч(Структура) = Тип("ФиксированнаяСтруктура") Тогда
		Возврат Новый Структура(Структура);
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция ЭтоСоответствие(знач Значение)
	Возврат ОбщегоНазначенияПТБКлиентСервер.ЭтоСоответствие(Значение);
КонецФункции

Функция ЭтоСтруктура(знач Значение)
	Возврат ОбщегоНазначенияПТБКлиентСервер.ЭтоСтруктура(Значение);
КонецФункции

Функция ЭтоМассив(знач Значение)
	Возврат ОбщегоНазначенияПТБКлиентСервер.ЭтоМассив(Значение);
КонецФункции

#КонецОбласти
