
#Область ПрограммныйИнтерфейс

#Область ЗагрузкаФайлов

// Показывает диалог выбора файла и помещает выбранный файл во временное хранилище.
//
// Параметры:
//   ПараметрыЗагрузки         - см. ФайловаяСистемаКлиентАсинх.ПараметрыЗагрузкиФайла.
//   ИмяФайла                  - Строка - полный путь к файлу, который будет предложен пользователю в начале
//                             интерактивного выбора или помещен во временное хранилище в неинтерактивном. Если
//                             выбран неинтерактивный режим и параметр не заполнен, будет вызвано исключение.
//   АдресВоВременномХранилище - Строка - адрес, по которому будет сохранен файл.
//
// Возвращаемое значение:
//   Структура, Неопределено
//		Хранение  	- Строка - расположение данных во временном хранилище.
//		Имя       	- Строка - имя (без указания пути) файла, с которым связан объект
//		Расширение	- Строка - расширение имени файла, с которым связан объект
//		Размер		- Число - размер файла (в байтах)
//
Асинх Функция ЗагрузитьФайл(знач ПараметрыЗагрузки = Неопределено, ИмяФайла = "", АдресХранилища = "") Экспорт
	
	Если ПараметрыЗагрузки = Неопределено Тогда
		ПараметрыЗагрузки = ПараметрыЗагрузкиФайла();
	ИначеЕсли НЕ ПараметрыЗагрузки.Интерактивно И ПустаяСтрока(ИмяФайла) Тогда
		ВызватьИсключение НСтр("ru = 'Не указано имя файла для загрузки в неинтерактивном режиме.'");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыЗагрузки.ИдентификаторФормы) Тогда
		ПараметрыЗагрузки.ИдентификаторФормы = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	Если НЕ ПараметрыЗагрузки.Интерактивно Тогда
		РасширениеПодключено = Ждать ПодключитьРасширениеДляРаботыСФайлами();
		Если НЕ РасширениеПодключено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		ОписаниеФайла = Ждать ПоместитьФайлНаСерверАсинх(,
			ПараметрыЗагрузки.ДействиеПередНачаломПомещенияФайлов,
			АдресХранилища,
			ИмяФайла,
			ПараметрыЗагрузки.ИдентификаторФормы);
	Иначе
		ОписаниеФайла = Ждать ПоместитьФайлНаСерверАсинх(,
			ПараметрыЗагрузки.ДействиеПередНачаломПомещенияФайлов,
			АдресХранилища,
			ПараметрыЗагрузки.ПараметрыДиалога,
			ПараметрыЗагрузки.ИдентификаторФормы);
	КонецЕсли;
	
	Если НЕ ТипЗнч(ОписаниеФайла) = Тип("ОписаниеПомещенногоФайла") ИЛИ ОписаниеФайла.ПомещениеФайлаОтменено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Новый Структура("Хранение,Имя,Расширение,Размер",
		ОписаниеФайла.Адрес,
		ОписаниеФайла.СсылкаНаФайл.Имя,
		ОписаниеФайла.СсылкаНаФайл.Расширение,
		ОписаниеФайла.СсылкаНаФайл.Размер());
		
КонецФункции

// Показывает диалог выбора файлов и помещает выбранные файлы во временное хранилище.
//
// Параметры:
//   ПараметрыЗагрузки    - см. ФайловаяСистемаКлиентАсинх.ПараметрыЗагрузкиФайла.
//   ЗагружаемыеФайлы     - Массив - содержит объекты типа ОписаниеПередаваемогоФайла. Может быть заполнен полностью,
//                        в этом случае загружаемые файлы будут сохранены по указанным адресам. Может быть заполнен
//                        частично - у элементов массива заполнены только имена. В этом случае, загружаемые файлы будут
//                        размещены в новых временных хранилищах. Массив может быть не заполнен. В этом случае набор
//                        помещаемых файлов определяется по значениям, указанным в параметре ПараметрыЗагрузки. Если в
//                        параметрах загрузки выбран неинтерактивный режим и параметр ЗагружаемыеФайлы не заполнен, будет
//                        вызвано исключение.
//
// Возвращаемое значение:
//   Массив - элемент массива Структура
//		Хранение  	- Строка - расположение данных во временном хранилище.
//		Имя       	- Строка - имя (без указания пути) файла, с которым связан объект
//		Расширение	- Строка - расширение имени файла, с которым связан объект
//		Размер		- Число - размер файла (в байтах)
//
Асинх Функция ЗагрузитьФайлы(знач ПараметрыЗагрузки = Неопределено, ЗагружаемыеФайлы = Неопределено) Экспорт
	
	Если НЕ ТипЗнч(ЗагружаемыеФайлы) = Тип("Массив") Тогда
		ЗагружаемыеФайлы = Новый Массив;
	КонецЕсли;
	
	Если ПараметрыЗагрузки = Неопределено Тогда
		ПараметрыЗагрузки = ПараметрыЗагрузкиФайла();
	ИначеЕсли НЕ ПараметрыЗагрузки.Интерактивно И ЗагружаемыеФайлы.Количество() = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Не указаны файлы для загрузки в неинтерактивном режиме.'");
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыЗагрузки.ИдентификаторФормы) Тогда
		ПараметрыЗагрузки.ИдентификаторФормы = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	Если НЕ ПараметрыЗагрузки.Интерактивно Тогда
		РасширениеПодключено = Ждать ПодключитьРасширениеДляРаботыСФайлами();
		Если НЕ РасширениеПодключено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		МассивФайлов = Ждать ПоместитьФайлыНаСерверАсинх(,
			ПараметрыЗагрузки.ДействиеПередНачаломПомещенияФайлов,
			ЗагружаемыеФайлы,
			ПараметрыЗагрузки.ИдентификаторФормы);
	Иначе
		МассивФайлов = Ждать ПоместитьФайлыНаСерверАсинх(,
			ПараметрыЗагрузки.ДействиеПередНачаломПомещенияФайлов,
			ПараметрыЗагрузки.ПараметрыДиалога,
			ПараметрыЗагрузки.ИдентификаторФормы);
	КонецЕсли;
	
	МассивДанных = Новый Массив;
	Если НЕ ТипЗнч(МассивФайлов) = Тип("Массив") ИЛИ МассивФайлов.Количество() = 0 Тогда
		Возврат МассивДанных;
	КонецЕсли;
	
	Для Каждого ОписаниеФайла Из МассивДанных Цикл
		СтруктураФайла = ПолучитьСтруктуруПоОписаниюПомещенногоФайла(ОписаниеФайла);
		Если СтруктураФайла = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		МассивДанных.Добавить(СтруктураФайла);
	КонецЦикла;
	
	Возврат МассивДанных;
		
КонецФункции

#КонецОбласти

#Область СохранениеФайлов

Асинх Функция СохранитьФайл(АдресХранилища, ИмяФайла = "", ПараметрыСохранения = Неопределено) Экспорт
	
	Если ПараметрыСохранения = Неопределено Тогда
		ПараметрыСохранения = ПараметрыСохраненияФайла();
	ИначеЕсли НЕ ПараметрыСохранения.Интерактивно И ПустаяСтрока(ИмяФайла) Тогда
		ВызватьИсключение НСтр("ru = 'Не указано имя файла для сохранения в неинтерактивном режиме.'");
	КонецЕсли;
	
	ДанныеФайла = Новый ОписаниеПередаваемогоФайла(ИмяФайла, АдресХранилища);
	
	Если НЕ ПараметрыСохранения.Интерактивно Тогда
		РасширениеПодключено = Ждать ПодключитьРасширениеДляРаботыСФайлами();
		Если НЕ РасширениеПодключено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		КаталогФайлов = Ждать КаталогВременныхФайловАсинх();
		ПутьКФайлу = ОбщегоНазначенияКлиентСервер.ПолучитьПолноеИмяФайла(КаталогФайлов, ИмяФайла);
		
		ОписаниеФайла = Ждать ПолучитьФайлССервераАсинх(АдресХранилища, ПутьКФайлу);
	Иначе 
		ОписаниеФайла = Ждать ПолучитьФайлССервераАсинх(АдресХранилища,
			ИмяФайла,
			ПараметрыСохранения.ПараметрыДиалога);
	КонецЕсли;
	
	Если НЕ ТипЗнч(ОписаниеФайла) = Тип("ОписаниеПереданногоФайла") Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Новый Структура("Хранение,Имя,ПолноеИмя,Идентификатор",
		ОписаниеФайла.Хранение,
		ОписаниеФайла.Имя,
		ОписаниеФайла.ПолноеИмя,
		ОписаниеФайла.ИдентификаторФайла);
		
КонецФункции

#КонецОбласти

#Область Параметры

// Инициализирует структуру параметров для загрузки файла из файловой системы.
// Для использования в ФайловаяСистемаКлиентАсинх.ЗагрузитьФайл
//
// Возвращаемое значение:
//  Структура:
//    * ИдентификаторФормы                  - УникальныйИдентификатор - уникальный идентификатор формы, из
//                                          которой выполняется размещение файла. Если параметр не заполнен,
//                                          необходимо вызывать метод глобального контекста УдалитьИзВременногоХранилища
//                                          после завершения работы с полученными двоичными данными. Значение по
//                                          умолчанию - Неопределено.
//    * Интерактивно                        - Булево - указывает использование интерактивного режима, при котором
//                                          пользователю показывается диалог выбора файлов. Значение по
//                                          умолчанию - Истина.
//    * ПараметрыДиалога                    - ПараметрыДиалогаПомещенияФайлов - свойства см. в синтакс-помощнике.
//    * ТекстПредложения                    - Строка - текст предложения об установке расширения. Если параметр
//                                          принимает значение "", будет выведен стандартный текст предложения.
//                                          Значение по умолчанию - "".
//    * ДействиеПередНачаломПомещенияФайлов - ОписаниеОповещения
//                                          - Неопределено - содержит описание процедуры,
//                                          которая будет вызвана непосредственно перед началом помещения файла
//                                          во временное хранилище.Если параметр принимает значение Неопределено,
//                                          перед помещением файла никакая процедура вызываться не будет. Значение
//                                          по умолчанию - Неопределено. Параметры вызываемой процедуры:
//        ** ПомещаемыеФайлы         - СсылкаНаФайл
//                                   - Массив - ссылка на файл, готовый к помещению во временное хранилище.
//                                   Если загружалось несколько файлов, содержит массив ссылок.
//        ** ОтказОтПомещенияФайла   - Булево - признак отказа от дальнейшего помещения файла. Если в теле процедуры-обработчика
//                                   установить данному параметру значение Истина, то помещение файла будет отменено.
//        ** ДополнительныеПараметры - Произвольный - значение, которое было указано при создании объекта ОписаниеОповещения.
//
// Пример:
//  ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
//  ПараметрыЗагрузки.Диалог.Заголовок = НСтр("ru = 'Выберите документ'");
//  ПараметрыЗагрузки.Диалог.Фильтр = НСтр("ru = 'Файлы MS Word (*.doc;*.docx)|*.doc;*.docx|Все файлы (*.*)|*.*'");
//  ФайловаяСистемаКлиент.ЗагрузитьФайл(Оповещение, ПараметрыЗагрузки);
//
Функция ПараметрыЗагрузкиФайла() Экспорт
	
	ПараметрыЗагрузки = Новый Структура;
	ПараметрыЗагрузки.Вставить("ИдентификаторФормы"	, Неопределено);
	ПараметрыЗагрузки.Вставить("Интерактивно"		, Истина);
	ПараметрыЗагрузки.Вставить("ПараметрыДиалога"	, Новый ПараметрыДиалогаПомещенияФайлов);
	ПараметрыЗагрузки.Вставить("ДействиеПередНачаломПомещенияФайлов", Неопределено);
	Возврат ПараметрыЗагрузки;
	
КонецФункции

// Инициализирует структуру параметров для сохранения файла в файловую систему.
// Для использования в ФайловаяСистемаКлиент.СохранитьФайл.
//
// Возвращаемое значение:
//  Структура:
//    * Интерактивно     - Булево - указывает использование интерактивного режима, при котором
//                       пользователю показывается диалог выбора файлов. Значение по
//                       умолчанию - Истина.
//    * ПараметрыДиалога - ПараметрыДиалогаПолученияФайлов - свойства см. в синтакс-помощнике.
//                       Используется, если свойство Интерактивно принимает значение Истина и
//                       удалось подключить расширение для работы с 1С:Предприятием.
//
Функция ПараметрыСохраненияФайла() Экспорт
	
	ПараметрыЗагрузки = Новый Структура;
	ПараметрыЗагрузки.Вставить("Интерактивно"		, Истина);
	ПараметрыЗагрузки.Вставить("ПараметрыДиалога"	, Новый ПараметрыДиалогаПолученияФайлов);
	Возврат ПараметрыЗагрузки;
	
КонецФункции

#КонецОбласти

#Область Прочее

// Выполняет удаление файлов по переданному массиву или пути
//
// Параметры:
//	МассивПуть	- Строка, Массив
//	Маска		- Строка - используеться если передан путь к файлу (каталогу)
//
Асинх Процедура УдалениеФайлов(знач МассивПуть, знач Маска = "") Экспорт
	
	РасширениеПодключено = Ждать ПодключитьРасширениеДляРаботыСФайлами();
	Если НЕ РасширениеПодключено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(МассивПуть) = Тип("Массив") Тогда
		Для Каждого ПутьКФайлу Из МассивПуть Цикл
			Ждать УдалитьФайлыАсинх(ПутьКФайлу);
		КонецЦикла;
	ИначеЕсли ТипЗнч(МассивПуть) = Тип("Строка") Тогда 
		Ждать УдалитьФайлыАсинх(МассивПуть, Маска);
	КонецЕсли;
	
КонецПроцедуры

// Показывает диалог выбора каталога
//
// Параметры:
//	Заголовок - Строка - заголовок диалога выбора каталога.
//	Каталог   - Строка - начальное значение каталога, предлагаемое по умолчанию.
//
// Возвращаемое значение:
//	Строка - путь к выбранному каталогу или пустая строка
//
Асинх Функция ВыбратьКаталог(знач Заголовок = "", знач Каталог = "") Экспорт
	
	РасширениеПодключено = Ждать ПодключитьРасширениеДляРаботыСФайлами();
	Если НЕ РасширениеПодключено Тогда
		Возврат "";
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.МножественныйВыбор = Ложь;
	Если НЕ ПустаяСтрока(Заголовок) Тогда
		Диалог.Заголовок = Заголовок;
	КонецЕсли;
	Если НЕ ПустаяСтрока(Каталог) Тогда
		Диалог.Каталог = Каталог;
	КонецЕсли;

	РезультатВыбора = Ждать Диалог.ВыбратьАсинх();
	
	ПутьККаталогу = ?(РезультатВыбора = Неопределено ИЛИ РезультатВыбора.Количество() = 0,
		"", 
		РезультатВыбора[0]);
		
	Возврат ПутьККаталогу;
	
КонецФункции

// Показывает диалог выбора файла
//
// Параметры:
//	Режим		- РежимДиалогаВыбораФайла
//	Фильтр		- Строка - строка с набором файловых фильтров
//	Заголовок	- Строка - текст заголовка окна диалога выбора файла
//	ИмяФайла	- Строка - начальное полное имя файла
//	Каталог		- Строка - значение текущего каталога
//
// Возвращаемое значение:
//	Строка - путь к файлу или пустая строка
//	Неопределено - если не подключено расширение
//
Асинх Функция ВыбратьФайл(знач Режим, знач Фильтр, знач Заголовок = "", знач ИмяФайла = "", знач Каталог = "") Экспорт 
	
	Возврат Ждать ВыбратьФайлыСлужебный(Режим,
		Фильтр,
		Ложь,
		Заголовок,
		ИмяФайла,
		Каталог);
	
КонецФункции

// Показывает диалог выбора файла (множественный режим)
//
// Параметры:
//	Режим		- РежимДиалогаВыбораФайла
//	Фильтр		- Строка - строка с набором файловых фильтров
//	Заголовок	- Строка - текст заголовка окна диалога выбора файла
//	ИмяФайла	- Строка - начальное полное имя файла
//	Каталог		- Строка - значение текущего каталога
//
// Возвращаемое значение:
//	Массив - пути к файлам или пустой массив
//	Неопределено - если не подключено расширение
//
Асинх Функция ВыбратьФайлы(знач Режим, знач Фильтр, знач Заголовок = "", знач ИмяФайла = "", знач Каталог = "") Экспорт 
	
	Возврат Ждать ВыбратьФайлыСлужебный(Режим,
		Фильтр,
		Истина,
		Заголовок,
		ИмяФайла,
		Каталог);
	
КонецФункции

// Предлагает пользователю установить расширение для работы с 1С:Предприятием в веб-клиенте.
// Предназначена для использования в начале участков кода, в которых ведется работа с файлами.
//
// Возвращаемое значение:
//	Булево - результат подключения расширения для работы с файлами
//
Асинх Функция ПодключитьРасширениеДляРаботыСФайлами() Экспорт
	
	#Если НЕ ВебКлиент Тогда
		ОтключитьПредложениеУстановкиРасширения();
		Возврат Истина;
	#КонецЕсли
	
	РасширениеПодключено = Ждать ПодключитьРасширениеРаботыСФайламиАсинх();

	Если РасширениеПодключено Тогда
		ОтключитьПредложениеУстановкиРасширения();
		Возврат Истина;
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиент.ЭтоMacOSКлиент() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Расширение для работы с файлами недоступно на MacOS.'"));
		Возврат Ложь;
	КонецЕсли;
	
	ИмяПараметра = "СтандартныеПодсистемы.ПредлагатьУстановкуРасширенияРаботыСФайлами";
	ПервоеОбращениеЗаСеанс = ПараметрыПриложения[ИмяПараметра] = Неопределено;
	Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
		ПараметрыПриложения.Вставить(ИмяПараметра, ПредлагатьУстановкуРасширенияРаботыСФайлами());
	КонецЕсли;
	
	ПредлагатьУстановкуРасширенияРаботыСФайлами = ПараметрыПриложения[ИмяПараметра] Или ПервоеОбращениеЗаСеанс;
	Если НЕ ПредлагатьУстановкуРасширенияРаботыСФайлами Тогда
		
		Возврат Истина;
		
	Иначе 

		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru='Установить и продолжить'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Нет, НСтр("ru='Продолжить без установки'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Больше не напоминать'"));
		
		ТекстВопроса = НСтр("ru='Для удобной работы с программой предлагается установить расширение для работы с 1С:Предприятием. 
			|Установить?'");
		
		ОтветПользователя = Ждать ВопросАсинх(ТекстВопроса,
			СписокКнопок,
			30,
			КодВозвратаДиалога.Да,
			НСтр("ru='Установка расширения работы с файлами'"),
			КодВозвратаДиалога.Нет);
			
		Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
			
			Ждать УстановитьРасширениеРаботыСФайламиАсинх();
			
		ИначеЕсли ОтветПользователя = КодВозвратаДиалога.Отмена Тогда
			
			ОтключитьПредложениеУстановкиРасширения();
			
		КонецЕсли;
		
		РасширениеПодключено = Ждать ПодключитьРасширениеРаботыСФайламиАсинх();

		Если РасширениеПодключено Тогда
			ОтключитьПредложениеУстановкиРасширения();
			Возврат Истина;
		КонецЕсли;
		
	КонецЕсли;

	Возврат Ложь;
	
КонецФункции

// Выполняет вывод сообщения или предупреждения об отсутствии подключенного расширения 
//	Если не указано как сообщение или как исключение, вывод будет в режиме предупреждения
//
// Параметры:
//	КакСообщение	- Булево - вывод как сообщения пользователю
//	КакИсключение	- Булево - если не КакСообщение тогда возможно вывод как исключения
//
Процедура СообщитьОшибкуПодключенияРасширения(знач КакСообщение = Ложь, знач КакИсключение = Ложь) Экспорт
	Текст = НСтр("ru='Для работы с файлами требуется подключить расширение (недоступно на MacOS).'");
	Если КакСообщение = Истина Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(Текст);
	ИначеЕсли КакИсключение = Истина Тогда
		ВызватьИсключение Текст;
	Иначе 
		ПоказатьПредупреждение(, Текст, 30);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОтключитьПредложениеУстановкиРасширения()
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	ИдентификаторКлиента = СистемнаяИнформация.ИдентификаторКлиента;
	ПараметрыПриложения["СтандартныеПодсистемы.ПредлагатьУстановкуРасширенияРаботыСФайлами"] = Ложь;
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить(
		"НастройкиПрограммы/ПредлагатьУстановкуРасширенияРаботыСФайлами", ИдентификаторКлиента, Ложь);
	
КонецПроцедуры

Асинх Функция ВыбратьФайлыСлужебный(знач Режим, знач Фильтр, знач КакМассив,
	знач Заголовок = "",
	знач ИмяФайла = "",
	знач Каталог = "") 
	
	РасширениеПодключено = Ждать ПодключитьРасширениеДляРаботыСФайлами();
	Если НЕ РасширениеПодключено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Диалог = Новый ДиалогВыбораФайла(Режим);
	Диалог.МножественныйВыбор = КакМассив;
	Диалог.ПроверятьСуществованиеФайла = (КакМассив = РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр			= Фильтр;
	Диалог.Заголовок		= Заголовок;
	Диалог.ПолноеИмяФайла	= ИмяФайла;
	Диалог.Каталог			= Каталог;

	РезультатВыбора = Ждать Диалог.ВыбратьАсинх();
	
	Если КакМассив Тогда
		Результат = ?(НЕ ТипЗнч(РезультатВыбора) = Тип("Массив"),
			Новый Массив, 
			РезультатВыбора);
	Иначе
		Результат = ?(РезультатВыбора = Неопределено ИЛИ РезультатВыбора.Количество() = 0,
			"", 
			РезультатВыбора[0]); 
	КонецЕсли;
		
	Возврат Результат;	
КонецФункции

Функция ПредлагатьУстановкуРасширенияРаботыСФайлами()
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	ИдентификаторКлиента = СистемнаяИнформация.ИдентификаторКлиента;
	Возврат ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекЗагрузить(
		"НастройкиПрограммы/ПредлагатьУстановкуРасширенияРаботыСФайлами", ИдентификаторКлиента, Истина);
	
КонецФункции

Функция ПолучитьСтруктуруПоОписаниюПомещенногоФайла(знач ОписаниеФайла)
	Если НЕ ТипЗнч(ОписаниеФайла) = Тип("ОписаниеПомещенногоФайла") ИЛИ ОписаниеФайла.ПомещениеФайлаОтменено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат Новый Структура("Хранение,Имя,Расширение,Размер",
		ОписаниеФайла.Адрес,
		ОписаниеФайла.СсылкаНаФайл.Имя,
		ОписаниеФайла.СсылкаНаФайл.Расширение,
		ОписаниеФайла.СсылкаНаФайл.Размер())
КонецФункции

#КонецОбласти
