Функция НачальныйМассив()
	
	Массив = Новый Массив;
	
	Для Индекс = 1 По 127 Цикл
		Если Индекс < 32 ИЛИ Индекс = 127 Тогда
			Массив.Добавить("#" + Строка(Индекс));
		Иначе 
			Массив.Добавить(Символ(Индекс));
		КонецЕсли;
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

Функция ПолучитьМассивПоИмениКодировки(знач ИмяКодировки)
	Массив	= Неопределено;
	НрегИмя	= НРег(ИмяКодировки);
	
	Если НрегИмя = "koi8-r" Тогда
		Массив = Получить_koi8_r();
	ИначеЕсли НрегИмя = "koi8-u" Тогда
		Массив = Получить_koi8_u();
	ИначеЕсли НрегИмя = "windows-1251" ИЛИ НрегИмя = "cp1251" Тогда
		Массив = Получить_windows_1251();
	ИначеЕсли НрегИмя = "cp866" Тогда
		Массив = Получить_cp_866();
	ИначеЕсли НрегИмя = "iso-8859-5" Тогда
		Массив = Получить_iso_8859_5();
	КонецЕсли;
	
	Возврат Массив;
КонецФункции

// Возвращает массив имен кодировок соответствие по которым можно получить
Функция Кодировки() Экспорт
	
	Массив = Новый Массив;
	Массив.Добавить("koi8-r");
	Массив.Добавить("koi8-u");
	Массив.Добавить("windows-1251");
	Массив.Добавить("cp1251");
	Массив.Добавить("cp866");
	Массив.Добавить("iso-8859-5");
	
	Возврат Массив;
	
КонецФункции

// Возвращает массив символов koi8-r
Функция Получить_koi8_r() Экспорт
	
	Koi8_r_2_ansi	= "-¦-¬L-++T++---¦¦---?¦•v??? ?°?·?=¦-ёгг¬¬¬LLL---¦¦¦¦Ё¦¦TTT¦¦¦+++©юабцдефгх"
					+ "ийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ";
	
	Массив		= НачальныйМассив();
	КолСимволов	= СтрДлина(Koi8_r_2_ansi);
	Для Индекс = 1 По КолСимволов Цикл
		Массив.Добавить(Сред(Koi8_r_2_ansi, Индекс, 1));
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

// Возвращает массив символов koi8-u
Функция Получить_koi8_u() Экспорт
	
	Koi8_u_2_ansi	= "-¦-¬L-++T++---¦¦---?¦•v??? ?°?·?=¦-ёєгії¬LLL-ґў¦¦¦¦ЁЄ¦ІЇT¦¦¦+ҐЎ©юабцдефгх"
					+ "ийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ";
	
	Массив		= НачальныйМассив();
	КолСимволов	= СтрДлина(Koi8_u_2_ansi);
	Для Индекс = 1 По КолСимволов Цикл
		Массив.Добавить(Сред(Koi8_u_2_ansi, Индекс, 1));
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

// Возвращает массив символов windows-1251
Функция Получить_windows_1251() Экспорт
	
	win1251_2_ansi	= "ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—™љ›њќћџЎўЈ¤Ґ¦§Ё©Є«¬®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙ"
					+ "КЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя";
	
	Массив		= НачальныйМассив();
	КолСимволов	= СтрДлина(win1251_2_ansi);
	Для Индекс = 1 По КолСимволов Цикл
		Массив.Добавить(Сред(win1251_2_ansi, Индекс, 1));
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

// Возвращает массив символов cp866 (oem dos)
Функция Получить_cp_866() Экспорт
	
	cp866_2_ansi	= "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп---¦+¦¦¬¬¦¦¬---¬L+T+-+¦¦L"
					+ "г¦T¦=+¦¦TTLL-г++----¦¦-рстуфхцчшщъыьэюяЁёЄєЇїЎў°•·v№¤¦ ";
	
	Массив		= НачальныйМассив();
	КолСимволов	= СтрДлина(cp866_2_ansi);
	Для Индекс = 1 По КолСимволов Цикл
		Массив.Добавить(Сред(cp866_2_ansi, Индекс, 1));
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

// Возвращает массив символов iso-8859-5 (cyr)
Функция Получить_iso_8859_5() Экспорт
	
	iso88595_2_ansi	= "??????????????????????????????? ЁЂЃЄЅІЇЈЉЊЋЌЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШ"
					+ "ЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ";
	
	Массив		= НачальныйМассив();
	КолСимволов	= СтрДлина(iso88595_2_ansi);
	Для Индекс = 1 По КолСимволов Цикл
		Массив.Добавить(Сред(iso88595_2_ansi, Индекс, 1));
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

// Возвращает соответствие кодов символов значениям по различным кодировкам
//	Перечень кодировок см. в функции Кодировки
//
// Параметры
//	ИмяКодировки - Строка.
//
// Возвращаемое значение
//	Соответствие
//
Функция ПолучитьМассивСимволов(знач Кодировка) Экспорт
	
	Соответствие = Новый Соответствие;
	Массив = ПолучитьМассивПоИмениКодировки(Кодировка);
	Если Массив = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Счетчик	= 0;
	Для Каждого Символ Из Массив Цикл
		Счетчик = Счетчик + 1;
		Соответствие.Вставить(Счетчик, Символ);
	КонецЦикла;
	
	Возврат Соответствие;
	
КонецФункции

// Возвращает соответствие символов значениям кодам по различным кодировкам
//	Перечень кодировок см. в функции Кодировки
//
// Параметры
//	ИмяКодировки - Строка.
//
// Возвращаемое значение
//	Соответствие
//
Функция ПолучитьМассивКодов(знач Кодировка) Экспорт
	
	Соответствие = Новый Соответствие;
	Массив = ПолучитьМассивПоИмениКодировки(Кодировка);
	Если Массив = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Счетчик	= 0;
	Для Каждого Символ Из Массив Цикл
		Счетчик = Счетчик + 1;
		Соответствие.Вставить(Символ, Счетчик);
	КонецЦикла;
	
	Возврат Соответствие;
	
КонецФункции

Функция _Символ(знач КодСимвола, знач Кодировка = "unicode") Экспорт
	
	НРегКодировка = НРег(Кодировка);
	Если НРегКодировка = "unicode" Тогда
		Возврат Символ(КодСимвола);
	Иначе
		Массив = ПолучитьМассивПоИмениКодировки(Кодировка);
		Если Массив = Неопределено ИЛИ КодСимвола > Массив.Количество() Тогда
			Возврат "";
		Иначе 
			Возврат Массив[КодСимвола - 1];
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

Функция _КодСимвола(знач Символ, знач Кодировка = "unicode") Экспорт
	
	НРегКодировка = НРег(Кодировка);
	Если НРегКодировка = "unicode" Тогда
		Возврат КодСимвола(Символ);
	Иначе
		Массив = ПолучитьМассивПоИмениКодировки(Кодировка);
		Если Массив = Неопределено Тогда
			Возврат 0;
		Иначе 
			Индекс = Массив.Найти(Символ);
			Если Индекс = Неопределено Тогда
				Возврат 0;
			Иначе 
				Возврат Индекс + 1;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

// Возвращает массив знаков препинания
//
// Параметры:
//	УчитыватьДопЗнаки	- Булево - дополнительно удаляются выделительные знаки
//		К выделительными знаками препинания являются запятая (две запятые);
//		тире (два тире); двоеточие и тире, употребляемые вместе.
//
// Возвращаемое значение:
//   ТипВид - описание возвращаемого значения
// 
Функция ПолучитьМассивЗнаковПрепинания(знач УчитыватьДопЗнаки = Ложь) Экспорт 
	ЗнакиПрепинания = ". ? ! ... , ; : -";
	
	Если УчитыватьДопЗнаки Тогда
		ЗнакиПрепинания = ЗнакиПрепинания + " ,, -- :-";
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЗнакиПрепинания, " ", Истина, Истина);
КонецФункции

Функция ПолучитьПредлоги(знач Локализация = "ru") Экспорт 
	Если Локализация = "ru" Тогда
		Подстрока = "в, без, до, из, к, на, по, о, от, при, с, у, и, нет, за, над, для, об, под, про, между, среди, перед, около, вдоль, через, сквозь";
	ИначеЕсли Локализация = "en" Тогда
		Подстрока = "оn, in, at, near, over, under, between, among, behind, асrоss, through";
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Подстрока, ",", Истина, Истина);
КонецФункции

Функция ПолучитьСоюзы(знач Локализация = "ru") Экспорт 
	Если Локализация = "ru" Тогда
		Подстрока = "а, но, да, или, что, как, так, если, хотя";
	ИначеЕсли Локализация = "en" Тогда
		Подстрока = "";
	КонецЕсли;
	
	Возврат СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Подстрока, ",", Истина, Истина);
КонецФункции

Функция ПроверитьЗначимостьСимвола(знач ЗначСимвол) Экспорт
	Если НЕ ТипЗнч(ЗначСимвол) = Тип("Строка") Тогда
		ЗначСимвол = "";
	КонецЕсли;
	
	СтруктураЗначимость = Новый Структура("ЭтоПробел, ЭтоКириллица, ЭтоЛатиница, ЭтоЧисло, ЭтоЗначимый, ЭтоСпецСимвол",
		Ложь, Ложь, Ложь, Ложь, Ложь, Ложь);
	
	Если СтрДлина(ЗначСимвол) = 0 Тогда
		Возврат СтруктураЗначимость;
	КонецЕсли;
	
	СтруктураЗначимость.ЭтоСпецСимвол = (ЗначСимвол = Символы.ВК
		ИЛИ ЗначСимвол = Символы.ВТаб
		ИЛИ ЗначСимвол = Символы.ПС
		ИЛИ ЗначСимвол = Символы.ПФ
		ИЛИ ЗначСимвол = Символы.Таб);
		
	Если НЕ СтруктураЗначимость.ЭтоСпецСимвол Тогда
		СтруктураЗначимость.ЭтоПробел = (СтрНайти(" " + Символы.НПП, ЗначСимвол) > 0);
		Если НЕ СтруктураЗначимость.ЭтоПробел Тогда
			СтруктураЗначимость.ЭтоКириллица = СтроковыеФункцииКлиентСерверРФ.ТолькоКириллицаВСтроке(ЗначСимвол);
			Если НЕ СтруктураЗначимость.ЭтоКириллица Тогда
				СтруктураЗначимость.ЭтоЛатиница = СтроковыеФункцииКлиентСервер.ТолькоЛатиницаВСтроке(ЗначСимвол);
				Если НЕ СтруктураЗначимость.ЭтоЛатиница Тогда
					СтруктураЗначимость.ЭтоЧисло = СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ЗначСимвол);
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураЗначимость.ЭтоЗначимый = (СтруктураЗначимость.ЭтоПробел
		ИЛИ СтруктураЗначимость.ЭтоКириллица
		ИЛИ СтруктураЗначимость.ЭтоЛатиница
		ИЛИ СтруктураЗначимость.ЭтоЧисло);
	
	Возврат СтруктураЗначимость;
КонецФункции

