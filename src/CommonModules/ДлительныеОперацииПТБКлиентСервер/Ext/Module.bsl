// Copyright (c) 2023, ООО ПрогТехБизнес
// Лицензия Attribution 4.0 International (CC BY 4.0)

// Модуль предназначен для оценки времени выполнения длительного задания
//
// Пример использование модуля
//
//	НА КЛИЕНТЕ
//
//	Количество		= ТаблицаСтрок.Количество(); // количество будущих строк для обработки
//	ПараметрыВремя	= ОМ.ПолучитьПараметрыПодсчетаОстаткаВремени(Количество);
//	Для Каждого СтрокаТаблицы Из ТаблицаСтрок Цикл
//		ОМ.ЗафиксироватьВремяНачалаВыполнения(ПараметрыВремя);
//		// ВАРИАНТ 1
//		ОМ.ВывестиСостояниеВыполнения(ПараметрыВремя);
//		// ВАРИАНТ 2
//		ОстатокВремени = ОМ.ОценитьОстатокВремениВыполнения(ПараметрыВремя);
//		Состояние("Обработка строки № ххх из zzz. Остаток времени: " + ОстатокВремени, ПараметрыВремя.Процент);
//
//		// здесь какая то обработка
//
//		ОМ.ЗафиксироватьВремяОкончанияВыполнения(ПараметрыВремя);
//	КонецЦикла;
// 

#Область ПрограммныйИнтерфейс
 
// Выполняет фиксацию времени начала выполнения итерации для будущей оценки
//
// Параметры:
//	Параметры - Структура - см. ПолучитьПараметрыПодсчетаОстаткаВремени
// 
Процедура ЗафиксироватьВремяНачалаВыполнения(Параметры) Экспорт
	Параметры.Счетчик			= Параметры.Счетчик + 1;
	Параметры.Процент			= ?(Параметры.Количество = 0, 0, Цел(Параметры.Счетчик / Параметры.Количество * 100));
	Параметры.НачалоВыполнения	= ТекущаяУниверсальнаяДатаВМиллисекундах();
КонецПроцедуры

// Выполняет фиксацию времени окончания выполнения итерации для будущей оценки
//
// Параметры:
//	Параметры - Структура - см. ПолучитьПараметрыПодсчетаОстаткаВремени
// 
Процедура ЗафиксироватьВремяОкончанияВыполнения(Параметры) Экспорт
	Параметры.ОкончаниеВыполнения	= ТекущаяУниверсальнаяДатаВМиллисекундах();
	Параметры.ЗатратыВремени		= Параметры.ЗатратыВремени + (Параметры.ОкончаниеВыполнения - Параметры.НачалоВыполнения);
КонецПроцедуры

// Выводит или текст состояния (на клиенте) или сообщение (на сервере) дополняя остатком времени
// Например: переданная строка "Обработана строка № 1 из 10. Осталось:", будет дополнена: "менее мин."
//
// Параметры:
//	Параметры		- Структура - см. ПолучитьПараметрыПодсчетаОстаткаВремени
//	ТекстСообщения	- Строка - не обязательный параметр. По умолчанию: "До окончания операции:"
//	Пояснение		- Строка - используется при выводе состояния на клиенте
//	Картинка		- Картинка - используется при выводе состояния на клиенте
// 
Процедура ВывестиСостояниеВыполнения(знач Параметры, знач ТекстСообщения = "", знач Пояснение = "", знач Картинка = Неопределено) Экспорт
	ОстатокВремени = ОценитьОстатокВремениВыполнения(Параметры);
	Если ПустаяСтрока(ТекстСообщения) ТОгда
		ТекстСообщения = НСтр("ru='До окончания операции: '");
	КонецЕсли;
	Если НЕ ТипЗнч(Картинка) = Тип("Картинка") Тогда
		Картинка = Новый Картинка;
	КонецЕсли;
	
	ТекстСообщения = СокрЛП(ТекстСообщения) + " " + ОстатокВремени;
	
	#Если Клиент ИЛИ ВебКлиент Тогда
		Состояние(ТекстСообщения, Параметры.Процент, Пояснение, Картинка);     	
	#Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	#КонецЕсли 
КонецПроцедуры

// Формирует параметры для дальнейшего подсчета времени выполнения операции
//
// Параметры:
//	Количество - Число - количество будущих итераций
//
// Возвращаемое значение:
//   Структура
//		ЗатратыВремени		- Число - затраты времени на выполнение в миллисекундах
//		НачалоВыполнения	- Число - начало времени выполнения итерации см. ТекущаяУниверсальнаяДатаВМиллисекундах
//		ОкончаниеВыполнения - Число - окончание времени выполнения итерации см. ТекущаяУниверсальнаяДатаВМиллисекундах
//		Количество			- Число - количество будущих итераций
//		Счетчик				- Число - текущий номер итерации
//		Процент				- Число - процент выполненных итераций
// 
Функция ПолучитьПараметрыПодсчетаОстаткаВремени(знач Количество = 0) Экспорт
	Возврат Новый Структура("ЗатратыВремени, НачалоВыполнения, ОкончаниеВыполнения, Количество, Счетчик, Процент",
		0, 0, 0, Количество, 0, 0);	
КонецФункции

// Формирует параметры для дальнейшего подсчета времени выполнения операции
//
// Параметры:
//	Параметры		- Структура - см. ПолучитьПараметрыПодсчетаОстаткаВремени
//	НомерСтроки		- Число - номер текущей строки итерации, по умолчанию = Параметры.Счетчик
//	КоличествоСтрок	- Число - количество строк итераций, по умолчанию = Параметры.Количество
//
// Возвращаемое значение:
//   Строка - представление остатка времени в минутах
//		Например: менее 1 минуты, 20 мин. и т.д.
// 
Функция ОценитьОстатокВремениВыполнения(знач Параметры, знач НомерСтроки = 0, знач КоличествоСтрок = 0) Экспорт
	Если НомерСтроки = 0 Тогда
		НомерСтроки = Параметры.Счетчик;
	КонецЕсли;
	Если КоличествоСтрок = 0 Тогда
		КоличествоСтрок = Параметры.Количество;
	КонецЕсли;
	
	ДоляВыполнено	= ?(КоличествоСтрок = 0, 0, НомерСтроки / КоличествоСтрок);
	ОстатокВремени	= ?(Параметры.ЗатратыВремени = 0, 0, Цел(Параметры.ЗатратыВремени / ДоляВыполнено * (1-ДоляВыполнено) / 60000));
	ВремяОкончания	= ?(Параметры.ЗатратыВремени = 0,
		НСтр("ru='идет оценка...'"),
		?(ОстатокВремени < 1, НСтр("ru='менее'"), Формат(ОстатокВремени, "ЧГ=")) + НСтр("ru=' мин.'"));
	
	Возврат ВремяОкончания;
КонецФункции
	
#КонецОбласти
	