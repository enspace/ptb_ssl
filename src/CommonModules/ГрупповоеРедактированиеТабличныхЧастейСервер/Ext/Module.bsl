// Создает служебный реквизит для хранения описания таблиц формы
//
// Параметры:
//	Форма - УправляемаяФорма - форма по данным которой надо получить значения реквизитов
//
//Заполнение реквизита "_Служебный_ОписаниеТаблицДляГрупповогоРедактирования_" - ФиксированноеСоответствие - Ключ: ТаблицаИмяЭлемента формы, Значение: Структура
//СтруктураТаблиц.ТаблицаИмяЭлемента 			- Строка
//СтруктураТаблиц.ПутьКДанным					- Строка
//СтруктураТаблиц.ДоступныеКолонкиСоответствие	- Соответствие - Описание доступных колонок таблицы (Имя, Заголовок, Путь, ТипЗначения)
//
Процедура СоздатьРеквизитХраненияОписанияТаблицФормы(Форма)
	
	РеквизитОписаниеТаблиц = "_Служебный_ОписаниеТаблицДляГрупповогоРедактирования_";
	
	Попытка
		ЗначениеРеквизита = Форма._Служебный_ОписаниеТаблицДляГрупповогоРедактирования_;
		РеквизитСуществует = Истина;
	Исключение
		РеквизитСуществует = Ложь;
	КонецПопытки;
	
	Если РеквизитСуществует Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитОписаниеТаблицДляГрупповогоРедактирования = Новый РеквизитФормы(РеквизитОписаниеТаблиц, Новый ОписаниеТипов("Неопределено"));
	
	МассивДобавить = Новый Массив;
	МассивДобавить.Добавить(РеквизитОписаниеТаблицДляГрупповогоРедактирования);
	
	Форма.ИзменитьРеквизиты(МассивДобавить);
	
КонецПроцедуры

Процедура ДобавитьКнопкуВКоманднуюПанельТаблицы(Форма, ЭлементТаблица)
	
	ТаблицаИмяЭлемента = ЭлементТаблица.Имя;
	ИмяКоманды = ТаблицаИмяЭлемента + "_ГрупповоеРедактированиеСтрок_";
	
	КомандаТаблицы = Форма.Команды.Найти(ИмяКоманды);
	Если ТипЗнч(КомандаТаблицы) <> Тип("КомандаФормы") Тогда
		КомандаТаблицы = Форма.Команды.Добавить(ИмяКоманды);
		
		КомандаТаблицы.Заголовок  	= "Групповое редактирование строк"; 	
		КомандаТаблицы.Подсказка  	= "Групповое редактирование выделенных строк таблицы";
		КомандаТаблицы.Действие   	= "Подключаемый_ГрупповоеРедактированиеСтрок"; 
		КомандаТаблицы.Картинка		= БиблиотекаКартинок.ТабличныйДокументТолькоПросмотр;
		КомандаТаблицы.Отображение	= ОтображениеКнопки.Картинка;
	КонецЕсли; 
	
	ИмяКнопки = ТаблицаИмяЭлемента + "_ГрупповоеРедактированиеСтрок_";
	
	КнопкаТаблицы = Форма.Элементы.Найти(ИмяКнопки);
	Если ТипЗнч(КнопкаТаблицы) <> Тип("КнопкаФормы") Тогда
		КнопкаТаблицы = Форма.Элементы.Добавить(ИмяКнопки, Тип("КнопкаФормы"), ЭлементТаблица.КоманднаяПанель);
		
		КнопкаТаблицы.Вид    		= ВидКнопкиФормы.КнопкаКоманднойПанели;
		КнопкаТаблицы.Заголовок  	= "Групповое редактирование строк";
		КнопкаТаблицы.ИмяКоманды 	= ИмяКоманды;
	КонецЕсли; 

	КнопкаТаблицы.Видимость 	= ЭлементТаблица.Видимость;
	КнопкаТаблицы.Доступность	= ЭлементТаблица.Доступность И НЕ ЭлементТаблица.ТолькоПросмотр;
	
КонецПроцедуры

Процедура ДобавитьРеквизитыРасчетаСуммыСтрок(Форма, ЭлементТаблица, РодительГруппыРасчета)
	
	ТаблицаИмяЭлемента = ЭлементТаблица.Имя;
	
	РеквизитыФормы = Форма.ПолучитьРеквизиты();
	ИмяРеквизитаСуммаСтрок = ТаблицаИмяЭлемента + "_РасчетСуммыСтрок_";
	
	Попытка
		ЗначениеРеквизита = Форма[ИмяРеквизитаСуммаСтрок];
		РеквизитСуществует = Истина;
	Исключение
		РеквизитСуществует = Ложь;
	КонецПопытки;
	
	Если РеквизитСуществует Тогда
		Возврат;
	КонецЕсли;

	РеквизитСуммаСтрок = Новый РеквизитФормы(ИмяРеквизитаСуммаСтрок, ОбщегоНазначения.ОписаниеТипаЧисло(20,4));
	
	МассивДобавить = Новый Массив;
	МассивДобавить.Добавить(РеквизитСуммаСтрок);
	
	Форма.ИзменитьРеквизиты(МассивДобавить);
	
	ИмяГруппы = ТаблицаИмяЭлемента + "_ГруппаВыделенныхСтрок";
	ГруппаСуммы = Форма.Элементы.Найти(ИмяГруппы);
	
	Если ТипЗнч(ГруппаСуммы) <> Тип("ГруппаФормы") Тогда
		ГруппаСуммы = Форма.Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), РодительГруппыРасчета);//, ЭлементТаблица);
		ГруппаСуммы.Заголовок  				= "Сумма выделенных строк"; 	
		ГруппаСуммы.Вид						= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаСуммы.Группировка 			= ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная;
		ГруппаСуммы.ОтображатьЗаголовок 	= Ложь;
		ГруппаСуммы.РастягиватьПоВертикали 	= Ложь;
		ГруппаСуммы.ЦветФона				= ЦветаСтиля.ФонУправляющегоПоля;
	КонецЕсли;
	
	ИмяДекорации = ТаблицаИмяЭлемента + "_ДекорацияРасчетСуммыСтрок_";
	ДекорацияСумма = Форма.Элементы.Найти(ИмяДекорации);
	
	Если ТипЗнч(ДекорацияСумма) <> Тип("ДекорацияФормы") Тогда
		ДекорацияСумма = Форма.Элементы.Добавить(ИмяДекорации, Тип("ДекорацияФормы"), ГруппаСуммы);
		ДекорацияСумма.Заголовок  	= "Сумма выделенных строк"; 
		ДекорацияСумма.Вид			= ВидДекорацииФормы.Картинка;
		ДекорацияСумма.Картинка		= БиблиотекаКартинок.Сумма;
		ДекорацияСумма.Высота		= 1;
		ДекорацияСумма.Ширина		= 2;
	КонецЕсли;
	
	ПолеСуммы = Форма.Элементы.Найти(ИмяРеквизитаСуммаСтрок);
	
	Если ТипЗнч(ПолеСуммы) <> Тип("ПолеФормы") Тогда
		ПолеСуммы = Форма.Элементы.Добавить(ИмяРеквизитаСуммаСтрок, Тип("ПолеФормы"), ГруппаСуммы);//, ЭлементТаблица);
		ПолеСуммы.ОтображениеПодсказки  	= ОтображениеПодсказки.Кнопка;
		ПолеСуммы.ПоложениеЗаголовка		= ПоложениеЗаголовкаЭлементаФормы.Нет;
		ПолеСуммы.Подсказка  				= "Сумма выделенных строк текущей колонки таблицы. Не работает при выделении всех строк комбинацией клавиш Ctrl+A";
		ПолеСуммы.ПутьКДанным  				= ИмяРеквизитаСуммаСтрок;
		ПолеСуммы.Вид						= ВидПоляФормы.ПолеВвода;
		ПолеСуммы.ТолькоПросмотр 			= Истина;
		ПолеСуммы.Ширина					= 20;
	КонецЕсли;
	
КонецПроцедуры

// Процедура собирает сведения о ВСЕХ реквизитах формы с типом = "ТаблицаФормы" и сохраняет в реквизит формы "_Служебный_ОписаниеТаблицДляГрупповогоРедактирования_".
// Источником таблицы формы могут быть реквизиты формы ("ТаблицаЗначений", "ДеревоЗначений), так и табличные части объекта.
// 
// Параметры:
//	Форма				- УправляемаяФорма - произвольная форма справочника, документа, обработки, содержащая таблицы формы.
// 	ИсключаемыеТаблицы 	- Строка - Имена элементов формы с типом "ТаблицаФормы" для которых запрещается использование групповой обработки. Например "ТаблицаНоменклатуры, ДеревоМатериалов". 
// 	ИсключаемыеКолонки 	- Строка - Имена элементов формы с типом "ПолеФормы" или "ГруппаФормы" (колонки или группы колонок таблицыФормы) для которых запрещается использование групповой обработки. Например "Цена, НомерСтроки".
//ВНИМАНИЕ! Колонки таблицы невидимые или недоступные пользователю указывать не нужно, они групповой обработкой не редактируются. 	
//	ОтображениеСуммыВыделенныхСтрок - Соответствие - Ключ - Имя ТаблицыФормы (для которой вычисляем суммы), Значение - Имя ГруппаФормы(в которой создаем реквизиты расчета)
//
Процедура СформироватьОписаниеТабличныхЧастейФормы(Форма, ИсключаемыеТаблицы = "", ИсключаемыеКолонки = "", ДобавлятьКнопкиВКоманднуюПанельТаблицыФормы = Истина, ОтображениеСуммыВыделенныхСтрок = Неопределено)  Экспорт

 	СоздатьРеквизитХраненияОписанияТаблицФормы(Форма);
	
	МассивИсключаемыхТаблиц		= СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИсключаемыеТаблицы,,,Истина);
	МассивИсключаемыхКолонок 	= СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИсключаемыеКолонки,,,Истина);

	СоответствиеТаблиц 	= Новый Соответствие;
	Для Каждого ЭлементТаблица Из Форма.Элементы Цикл
		Если ТипЗнч(ЭлементТаблица) <> Тип("ТаблицаФормы") Тогда
			Продолжить;
		КонецЕсли;
	
		ТаблицаИмяЭлемента = ЭлементТаблица.Имя;
		ТаблицаПутьКДанным = ЭлементТаблица.ПутьКДанным;
	
		Если МассивИсключаемыхТаблиц.Найти(ТаблицаИмяЭлемента) <> Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		// Получаем только те колонки таблиц, которые добавлены на форму в качестве элементов и не являются исключенными
		СоответствиеКолонокНаФорме 	= Новый Соответствие;
		ЕстьДоступныеКолонки 		= Ложь;
		
		КолонкиЭлементТаблица = Форма.Элементы[ТаблицаИмяЭлемента].ПодчиненныеЭлементы;
		Для Каждого ЭлементКолонка Из КолонкиЭлементТаблица Цикл
			ПроверитьКолонкуТаблицы(Форма, ТаблицаПутьКДанным, ЭлементКолонка, СоответствиеКолонокНаФорме, МассивИсключаемыхКолонок, ЕстьДоступныеКолонки) 	
		КонецЦикла;
		
		// Формируем описание колонок таблицы
		МассивКолонокТаблицы = Форма.ПолучитьРеквизиты(ТаблицаПутьКДанным);

		СоответствиеКолонокТаблицы = Новый Соответствие;
		Для каждого ЭлементМассива Из МассивКолонокТаблицы Цикл
		    НайденныйЭлемент = СоответствиеКолонокНаФорме.Получить(ЭлементМассива.Имя);
			
			Если НайденныйЭлемент = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			СтруктураКолонки = Новый Структура;
			СтруктураКолонки.Вставить("Имя" 		, ЭлементМассива.Имя);	
			СтруктураКолонки.Вставить("Путь"		, ЭлементМассива.Путь);
			СтруктураКолонки.Вставить("Заголовок"   , ЭлементМассива.Заголовок);
			СтруктураКолонки.Вставить("ТипЗначения" , ЭлементМассива.ТипЗначения);
			СтруктураКолонки.Вставить("ИмяЭлемента" , НайденныйЭлемент);
		
			СоответствиеКолонокТаблицы.Вставить(НайденныйЭлемент, СтруктураКолонки)
		КонецЦикла;
		
		СтруктураТаблицы	= Новый Структура;
		СтруктураТаблицы.Вставить("ТаблицаИмяЭлемента"			, ТаблицаИмяЭлемента);
		СтруктураТаблицы.Вставить("ТаблицаПутьКДанным"			, ТаблицаПутьКДанным);
		СтруктураТаблицы.Вставить("ДоступныеКолонкиСоответствие", СоответствиеКолонокТаблицы);
		
		СоответствиеТаблиц.Вставить(ЭлементТаблица.Имя, СтруктураТаблицы);
 	   		
		//ЕстьДоступныеКолонки - Если у таблицы есть хотя бы одна доступная колонка, то добавляем команду
		Если ЕстьДоступныеКолонки И ДобавлятьКнопкиВКоманднуюПанельТаблицыФормы Тогда
			ДобавитьКнопкуВКоманднуюПанельТаблицы(Форма, ЭлементТаблица);			
		КонецЕсли; 

		Если ТипЗнч(ОтображениеСуммыВыделенныхСтрок) <> Тип("Соответствие") Тогда
			Продолжить;
		КонецЕсли;
		
		//Добавим элементы формы для отображения суммы выделенных строк
		ИмяРодителяГруппыРасчета = ОтображениеСуммыВыделенныхСтрок.Получить(ЭлементТаблица.Имя);
		Если ИмяРодителяГруппыРасчета = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		РодительГруппыРасчета = Форма.Элементы[ИмяРодителяГруппыРасчета];
		Если ТипЗнч(РодительГруппыРасчета) <> Тип("ГруппаФормы") Тогда
			Продолжить;
		КонецЕсли; 
		
		ТаблицаДоступна = ЭлементТаблица.Видимость И ЭлементТаблица.Доступность;
		Если ТаблицаДоступна Тогда
			ДобавитьРеквизитыРасчетаСуммыСтрок(Форма, ЭлементТаблица, РодительГруппыРасчета);
		КонецЕсли;
		
	КонецЦикла;
		
	Форма._Служебный_ОписаниеТаблицДляГрупповогоРедактирования_ = Новый ФиксированноеСоответствие(СоответствиеТаблиц);
	
КонецПроцедуры

// Получаем колонки таблиц формы, исключаем нередактируемые колонки, формируем соответствие доступных колонок с их описанием.
// В соответствие попадают в том числе невидимые и недоступные колонки, так как эти свойства могут измениться.
// МассивИсключаемыхКолонок - Имена колонок реквизита Таблицы
//Исключаем колонки указанные в параметре МассивИсключаемыхКолонок, это может быть колонка или группа колонок
Процедура ПроверитьКолонкуТаблицы(Форма, ТаблицаПутьКДанным, ЭлементКолонка, СоответствиеКолонокНаФорме, МассивИсключаемыхКолонок, ЕстьДоступныеКолонки)
	
	Если ТипЗнч(ЭлементКолонка) = Тип("ПолеФормы") Тогда
		// Отсекаем колонки, которые полученые через точку: пример Дерево.Колонка.Значение, исключение составляют таблицы находящиеся в Объекте
		ИмяКолонки = СтрЗаменить(ЭлементКолонка.ПутьКДанным, ТаблицаПутьКДанным + ".","");
		Если СтрЧислоВхождений(ИмяКолонки,".") = 0 И МассивИсключаемыхКолонок.Найти(ЭлементКолонка.Имя) = Неопределено Тогда
			СоответствиеКолонокНаФорме.Вставить(ИмяКолонки, ЭлементКолонка.Имя);
			Если ЭлементКолонка.Видимость И ЭлементКолонка.Доступность И НЕ ЭлементКолонка.ТолькоПросмотр Тогда
				ЕстьДоступныеКолонки = Истина;
			КонецЕсли; 
		КонецЕсли;
	ИначеЕсли ТипЗнч(ЭлементКолонка) = Тип("ГруппаФормы") Тогда
		Если МассивИсключаемыхКолонок.Найти(ЭлементКолонка.Имя) = Неопределено Тогда
			Для Каждого ПодчиненныйЭлемент Из ЭлементКолонка.ПодчиненныеЭлементы Цикл
				ПроверитьКолонкуТаблицы(Форма, ТаблицаПутьКДанным, ПодчиненныйЭлемент, СоответствиеКолонокНаФорме, МассивИсключаемыхКолонок, ЕстьДоступныеКолонки);
			КонецЦикла;
		КонецЕсли; 
	КонецЕсли;

КонецПроцедуры // ПроверитьКолонкуТаблицыНаСервере()
