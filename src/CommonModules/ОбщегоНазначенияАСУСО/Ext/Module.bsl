//Прямая запись в регистр данных, измененных с последней загрузки
Процедура ЗагрузкаИзмененныхДанныхАСУСО() Экспорт
	
	ЗагрузкаДанныхАСУСО(Истина);
	
КонецПроцедуры

Процедура ЗагрузкаВсехДанныхАСУСО() Экспорт
	
	ЗагрузкаДанныхАСУСО(Ложь);
	
КонецПроцедуры

Процедура ЗагрузкаДанныхАСУСО(ТолькоИзмененные)
	
	РегистрыСведений.СообщенияВТехническуюПоддержку.ОтправитьНедоставленныеСообщения();
	
	ТекстЖурналаПриПодключении = ?(ТолькоИзмененные, "Подключение к веб-сервису AsusoExchange для получения изменившихся данных", 
														"Подключение к веб-сервису AsusoExchange для получения данных");
														
	ЗаписьЖурналаРегистрации(НСтр("ru = 'АСУСО. Обмен данными с веб-сервисом AsusoExchange'"),
	УровеньЖурналаРегистрации.Информация, , , ТекстЖурналаПриПодключении);

	РегистрационныйНомер = РегистрыСведений.СообщенияВТехническуюПоддержку.ПолучениеРегНомераКлиента();
	
    Сервис = РегистрыСведений.СообщенияВТехническуюПоддержку.ПолучитьСервисAsusoExchange();

	Попытка
		Если ТолькоИзмененные Тогда
			ДанныеАСУСО = Сервис.ПолучитьИзмененные(РегистрационныйНомер, СтрокаСоединенияИнформационнойБазы());
			Если ДанныеАСУСО = "false" Тогда
				ЗаписьЖурналаРегистрации(НСтр("ru = 'АСУСО. Обмен данными с веб-сервисом AsusoExchange'"),
				УровеньЖурналаРегистрации.Предупреждение, , ,
				НСтр("ru = 'Текущая база данных не зарегистрирована для обмена измененениями. Необходимо сообщить разработчику'"));
				Возврат;
			КонецЕсли;
		Иначе
			ДанныеАСУСО = Сервис.ПолучитьОтчет(РегистрационныйНомер);
		КонецЕсли; 
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'АСУСО. Обмен данными с веб-сервисом AsusoExchange'"),
		УровеньЖурналаРегистрации.Ошибка,,,ОписаниеОшибки());
		Возврат;
	КонецПопытки;

	ЗаписьЖурналаРегистрации(НСтр("ru = 'АСУСО. Обмен данными с веб-сервисом AsusoExchange'"),
		УровеньЖурналаРегистрации.Информация, , ,
		СтрШаблон(НСтр("ru = 'Данные получены. Количество: %1. Идет запись в регистры'"), ДанныеАСУСО.Сообщение.Количество()));

	КэшПользователей = Новый Соответствие;
	
	Для Каждого ДанныеСообщения Из ДанныеАСУСО.Сообщение Цикл
		
		НаборЗаписей = РегистрыСведений.СообщенияВТехническуюПоддержку.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Идентификатор.Установить(ДанныеСообщения.Идентификатор);
		НаборЗаписей.Прочитать();
		
		//определяем ВидСообщения
		ВидСообщения = ДанныеСообщения.ДанныеКлиента.Вид;
		Если ВидСообщения = "Ошибка" Тогда
			ВидСообщения = Перечисления.ВидыСообщенийВТехническуюПоддержку.Ошибка;
		ИначеЕсли ВидСообщения = "Доработка" Тогда
			ВидСообщения = Перечисления.ВидыСообщенийВТехническуюПоддержку.Доработка;
		ИначеЕсли ВидСообщения = "Консультация" Тогда
			ВидСообщения = Перечисления.ВидыСообщенийВТехническуюПоддержку.Консультация;
		ИначеЕсли ВидСообщения = "Прочее" Тогда
			ВидСообщения = Перечисления.ВидыСообщенийВТехническуюПоддержку.Прочее;
		Иначе 
			ВидРазработчика = ДанныеСообщения.ВидРазработчика;
			Если ВидРазработчика = "Ошибка" Тогда
				ВидСообщения = Перечисления.ВидыСообщенийВТехническуюПоддержку.Ошибка;
			ИначеЕсли ВидРазработчика = "Доработка" Тогда
				ВидСообщения = Перечисления.ВидыСообщенийВТехническуюПоддержку.Доработка;
			ИначеЕсли ВидРазработчика = "Консультация" Тогда
				ВидСообщения = Перечисления.ВидыСообщенийВТехническуюПоддержку.Консультация;
			Иначе
				ВидСообщения = Перечисления.ВидыСообщенийВТехническуюПоддержку.Прочее;
			КонецЕсли;
		КонецЕсли;
		
		//Заполняем ответственного			
		Отправитель = ПолучитьОтправителя(КэшПользователей, ДанныеСообщения.ДанныеКлиента.Пользователь);
		
		// разобраться со статусом который просто "Статус"
		// остальное пишем как есть без проблем особых
		Если НаборЗаписей.Количество() > 0 Тогда
			ТекущаяЗапись = НаборЗаписей[0];
			ТекущаяЗапись.Отправитель		= Отправитель;
		Иначе
			ТекущаяЗапись = НаборЗаписей.Добавить();
			ТекущаяЗапись.Идентификатор		= ДанныеСообщения.Идентификатор;
			ТекущаяЗапись.Важность			= ДанныеСообщения.ДанныеКлиента.Важность;
			ТекущаяЗапись.Вид				= ВидСообщения;
			ТекущаяЗапись.ДатаОтправки		= ДанныеСообщения.ДанныеКлиента.ДатаОтправки;
			ТекущаяЗапись.ДатаСогласования	= ТекущаяЗапись.ДатаОтправки;
			ТекущаяЗапись.ДатаСоздания		= ТекущаяЗапись.ДатаОтправки;
			ТекущаяЗапись.Согласовано		= Истина;
			ТекущаяЗапись.Текст				= ДанныеСообщения.ДанныеКлиента.Текст;
			ТекущаяЗапись.Файлы				= Новый ХранилищеЗначения(Новый Массив);
			ТекущаяЗапись.Отправитель		= Отправитель;
		КонецЕсли;
		
		ТекущаяЗапись.Раздел				= ДанныеСообщения.Раздел;
		ТекущаяЗапись.КодРазработчика		= ДанныеСообщения.КодРазработчика;
		ТекущаяЗапись.ЗаданиеНаРазработку	= ДанныеСообщения.ЗаданиеНаРазработку;
		ТекущаяЗапись.ВидРазработчика		= ДанныеСообщения.ВидРазработчика;
		ТекущаяЗапись.СтатусРазработчика	= ДанныеСообщения.СтатусРазработчика;
		ТекущаяЗапись.НомерРелиза			= ДанныеСообщения.НомерРелиза;
		ТекущаяЗапись.ДатаВыполнения		= ДанныеСообщения.ДатаВыполнения;
		ТекущаяЗапись.СвязанноеСообщение	= ДанныеСообщения.РодительИдентификатор;
		ТекущаяЗапись.Важность				= ДанныеСообщения.ДанныеКлиента.Важность;
		// 03.09.2012, Ишкаев В.М., п.2052, НАЧАЛО
		ТекущаяЗапись.ВидИсполнителя		= ДанныеСообщения.ДанныеКлиента.Вид;
		ТекущаяЗапись.Тема					= ДанныеСообщения.ДанныеКлиента.Тема;
		// 03.09.2012, Ишкаев В.М., п.2052, КОНЕЦ
		
		// заменим комментарии
		ТаблицаКомментариев = РегистрыСведений.СообщенияВТехническуюПоддержку.ПолучитьШаблонТаблицыКомментариев();
		
		Для Каждого ДанныеКомментария Из ДанныеСообщения.Комментарии.Комментарий Цикл
			СтрокаКомментария = ТаблицаКомментариев.Добавить();
			СтрокаКомментария.АвторТип				= ДанныеКомментария.Пользователь.Тип;
			СтрокаКомментария.АвторИдентификатор	= ДанныеКомментария.Пользователь.Идентификатор;
			СтрокаКомментария.АвторИмя				= ДанныеКомментария.Пользователь.Имя;
			СтрокаКомментария.АвторПолноеИмя		= ДанныеКомментария.Пользователь.ПолноеИмя;
			СтрокаКомментария.Код					= ДанныеКомментария.Код;
			СтрокаКомментария.Идентификатор			= ДанныеКомментария.Идентификатор;
			СтрокаКомментария.Период				= ДанныеКомментария.Период;
			СтрокаКомментария.Текст					= ДанныеКомментария.Текст;
			СтрокаКомментария.РодительИдентификатор	= ДанныеКомментария.РодительИдентификатор;
			СтрокаКомментария.РодительКод			= ДанныеКомментария.РодительКод;
			
			СтрокаКомментария.Рейтинг = ?(ЗначениеЗаполнено(СтрокаКомментария.РодительИдентификатор), 2, 1);
		КонецЦикла;
	
		ТекущаяЗапись.Комментарии = Новый ХранилищеЗначения(ТаблицаКомментариев, Новый СжатиеДанных(9));
		
		Для Каждого ДанныеОписания Из ДанныеСообщения.ОписанияИзменений.Описание Цикл
			
			ТекущаяЗапись.ОписаниеИзменений		= ДанныеОписания.Текст;
			
		КонецЦикла;
		//Запись сообщения в регистр Сообщения в тех.поддержку
		НаборЗаписей.Записать();
		
		//Чтение пакета объектов и запись в регистр История изменения объектов
		НаборЗаписейОбъекты = РегистрыСведений.ИсторияИзмененияОбъектов.СоздатьНаборЗаписей();
		
		Для Каждого СтрокаОбъека Из ДанныеСообщения.Объекты.Объект Цикл
			НаборЗаписейОбъекты.Отбор.ИдентификаторСообщения.Установить(СтрокаОбъека.РодительИдентификатор);
			НаборЗаписейОбъекты.Отбор.ПолноеИмяОбъекта.Установить(СтрокаОбъека.ПолноеИмя);
			НаборЗаписейОбъекты.Прочитать();
			
			Если НаборЗаписейОбъекты.Количество() > 0 Тогда
				ТекущаяЗапись = НаборЗаписей[0];
			Иначе
				ТекущаяЗапись = НаборЗаписейОбъекты.Добавить();
				ТекущаяЗапись.ИдентификаторСообщения  = СтрокаОбъека.РодительИдентификатор;
				ТекущаяЗапись.ПолноеИмяОбъекта  = СтрокаОбъека.ПолноеИмя;
				ТекущаяЗапись.НомерКартинки  = СтрокаОбъека.НомерКартинки;
				ТекущаяЗапись.РелизКонфигурации  = ДанныеСообщения.НомерРелиза;
				НаборЗаписейОбъекты.Записать();
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	ЗаписьЖурналаРегистрации(НСтр("ru = 'АСУСО. Обмен данными с веб-сервисом AsusoExchange'"),
	УровеньЖурналаРегистрации.Информация, , ,
	НСтр("ru = 'Запись данных в регистр завершена'"));

	Если ТолькоИзмененные Тогда
		Если ДанныеАСУСО.Сообщение.Количество() > 0 Тогда
			РегистрыСведений.СообщенияВТехническуюПоддержку.ОтправитьОтветНаВебСервер(РегистрационныйНомер);
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

Функция ПолучитьОтправителя(КэшПользователей, ДанныеПользователя)

	// Поиск по в кэше	
    НайденноеЗначение = КэшПользователей.Получить(ДанныеПользователя.Идентификатор);
	
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(НайденноеЗначение) И ОбщегоНазначения.СсылкаСуществует(НайденноеЗначение) Тогда
		Возврат НайденноеЗначение;
	КонецЕсли;

	МенеджерОбъекта = Справочники.Пользователи;
	
	// Поиск по идентификатору                 	
	Если СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(ДанныеПользователя.Идентификатор) Тогда
		УИДЭлемента = Новый УникальныйИдентификатор(ДанныеПользователя.Идентификатор);
		НайденноеЗначение = МенеджерОбъекта.ПолучитьСсылку(УИДЭлемента);
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(НайденноеЗначение) И ОбщегоНазначения.СсылкаСуществует(НайденноеЗначение) Тогда
		КэшПользователей.Вставить(ДанныеПользователя.Идентификатор, НайденноеЗначение);
		Возврат НайденноеЗначение;
	КонецЕсли;
	
	// Поиск по полному имени
	Если ЗначениеЗаполнено(ДанныеПользователя.ПолноеИмя) Тогда
		НайденноеЗначение = МенеджерОбъекта.НайтиПоНаименованию(ДанныеПользователя.ПолноеИмя);
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(НайденноеЗначение) И ОбщегоНазначения.СсылкаСуществует(НайденноеЗначение) Тогда
		Возврат НайденноеЗначение;
	КонецЕсли;
	
	// Поиск по имени
	Если ЗначениеЗаполнено(ДанныеПользователя.Имя) Тогда
		НайденноеЗначение = МенеджерОбъекта.НайтиПоНаименованию(ДанныеПользователя.Имя);
	КонецЕсли;
	
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(НайденноеЗначение) И ОбщегоНазначения.СсылкаСуществует(НайденноеЗначение) Тогда
		Возврат НайденноеЗначение;
	КонецЕсли;
	
	Возврат Справочники.Пользователи.НайтиПоНаименованию("ПТБ");
		
КонецФункции
