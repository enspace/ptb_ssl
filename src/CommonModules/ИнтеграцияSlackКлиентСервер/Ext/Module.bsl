
// Возвращает токен приложения для проверки источника запроса
//
// Возвращаемое значение:
//   Строка
// 
Функция ТокенПриложения(знач ИмяПриложения) Экспорт
	Если ИмяПриложения = "asup" Тогда
		Возврат "tSy4lfVLeYhsQtkERCQZEoPR";
	КонецЕсли;
	
	Возврат ""; 
КонецФункции

// Возвращает текст ошибки с картинкой и формулировкой
// "Извините, [текст ошибки]. [Текст подсказки]"
//
// Параметры:
//	ТекстОшибки		- Строка
//	ТекстПодсказки	- Строка - не обязательный
//
// Возвращаемое значение:
//   Строка
// 
Функция ПолучитьТекстОшибки(знач ТекстОшибки, знач ТекстПодсказки = "") Экспорт 
	Возврат СтрШаблон(НСтр("ru=':information_desk_person: Извините, %1.%2'"),
		ТекстОшибки,
		?(НЕ ЗначениеЗаполнено(ТекстПодсказки), "", " ") + ТекстПодсказки);
КонецФункции

#Область Контент

// Возвращает элемент text с установленными свойствами
//
// Параметры:
//	Текст				- Строка
//	Маркированный		- Булево - текст имеет разметку
//	ИспользоватьЭмоджи	- Булево - текст содержит эмоджи
//		Используется только для не маркированного текста
//
// Возвращаемое значение:
//   Структура
//		type	- Строка - "mrkdwn", "plain_text"
//		emoji	- Строка - только для не маркированного текста
//		text	- Строка
// 
Функция ЭлементТекст(знач Текст, знач Маркированный = Истина, знач ИспользоватьЭмоджи = Ложь) Экспорт
	Если Маркированный = Истина Тогда
		Результат = Новый Структура("type, text", "mrkdwn", Текст);
	Иначе 
		Результат = Новый Структура("type, text", "plain_text", Текст);
			
		Если ИспользоватьЭмоджи Тогда
			Результат.Вставить("emoji", Истина);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

// Возвращает элемент button с установленными свойствами
//
// Параметры:
//	Текст			- Структура, Строка - строка или не маркированный элемент текст
//	Идентификатор	- Строка (255) - уникальный идентификатор действия
//	Значение		- Строка (3000) - любое значение для передачи при вызове действия
//	Стиль			- Число
//		0 - по умолчанию
//		1 - зеленая
//		2 - красная
//
// Возвращаемое значение:
//   Структура
//		type		- Строка - "button"
//		text		- Структура - см. ЭлементТекст
//		action_id	- Строка
//		value		- Строка
//		style		- Строка
// 
Функция ЭлементКнопка(знач Текст, знач Идентификатор, знач Значение, знач Стиль = 0) Экспорт
	Если ТипЗнч(Текст) = Тип("Строка") Тогда
		Текст = ЭлементТекст(СокрЛП(Текст), Ложь, Ложь);
	ИначеЕсли НЕ ТипЗнч(Текст) = Тип("Структура") Тогда
		ВызватьИсключение НСтр("ru='Неверно передан параметр 1'");
	КонецЕсли;
	
	#Область ЭлементТекст
	Текст.type = "plain_text";
	Если СтрДлина(Текст.text) > 75 Тогда
		Текст.text = Лев(Текст.text, 75);
	КонецЕсли;
	#КонецОбласти
	
	МассивСтиль = Новый Массив;
	МассивСтиль.Вставить(0, "");
	МассивСтиль.Вставить(1, "primary");
	МассивСтиль.Вставить(2, "danger");
	
	Результат = Новый Структура;
	Результат.Вставить("type"		, "button");
	Результат.Вставить("text"		, Текст);
	Результат.Вставить("action_id"	, Идентификатор);
	Результат.Вставить("value"		, Значение);
	
	Если Стиль > 0 Тогда
		Результат.Вставить("style", МассивСтиль[Стиль]);
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

// Возвращает элемент section с установленными свойствами
//
// Параметры:
//	Текст		- Структура, Строка - строка или не маркированный элемент текст
//	Поля		- Массив
//	ДопЭлемент	- Структура - например ЭлементКнопка
//
// Возвращаемое значение:
//   Структура
//		type	- Строка - "section"
//		text	- Структура - см. ЭлементТекст
//		fields	- Массив
// 
Функция ЭлементСекция(знач Текст, знач Поля = Неопределено, знач ДопЭлемент = Неопределено) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("type", "section");
	Если ТипЗнч(Текст) = Тип("Структура") ИЛИ ЗначениеЗаполнено(Текст) Тогда
		Результат.Вставить("text", Текст);
	КонецЕсли;
	Если ТипЗнч(Поля) = Тип("Массив") Тогда
		Результат.Вставить("fields", Поля);
	КонецЕсли;
	Если ТипЗнч(ДопЭлемент) = Тип("Структура") Тогда
		Результат.Вставить("accessory", ДопЭлемент);
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

// Возвращает элемент divider
//
// Возвращаемое значение:
//   Структура
//		type	- Строка - "divider"
// 
Функция ЭлементРазделитель() Экспорт
	Результат = Новый Структура;
	Результат.Вставить("type", "divider");
	
	Возврат Результат;
КонецФункции

#КонецОбласти 
