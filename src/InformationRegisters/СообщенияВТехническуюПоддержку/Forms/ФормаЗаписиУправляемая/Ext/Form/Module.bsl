
#Область УправлениеФормой

&НаСервере 
Процедура ИнициализацияФормы()
	
	МодераторСообщений		= Константы.МодераторСообщенийТехПоддержке.Получить();
	МодераторИспользуется 	= ЗначениеЗаполнено(МодераторСообщений);
	
	СтатусыСообщений		= Перечисления.СтатусыСообщенийВТехническуюПоддержку;
	
	ЭтаФорма.ТекущийПользователь = Пользователи.ТекущийПользователь();
	ЭтаФорма.ЭтоМодератор		= ЗначениеЗаполнено(МодераторСообщений) И МодераторСообщений = ЭтаФорма.ТекущийПользователь;
	
	ЭтаФорма.СообщениеОтправлено= (Запись.Статус = СтатусыСообщений.Отправлено);
	
	ЭтаФорма.СообщениеВыполнено	= (Запись.Статус = СтатусыСообщений.Выполнено);
	ЭтаФорма.СообщениеПринято	= (Запись.Статус = СтатусыСообщений.ОтклоненоМодератором 
		ИЛИ Запись.Статус = СтатусыСообщений.ОтклоненоРазработчиком
		ИЛИ Запись.Статус = СтатусыСообщений.ПринятоКИсполнению ИЛИ Запись.СтатусРазработчика = "Принято"
		ИЛИ ЭтаФорма.СообщениеВыполнено);
	
	ЗаполнитьВложенныеФайлыНаСервере();
	УстановитьПредставлениеСвязанногоСообщенияНаСервере();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, ИмяРеквизита)

	Если НЕ Обработано.Найти(ИмяРеквизита) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Обработано.Добавить(ИмяРеквизита);

	Элементы	= Форма.Элементы;
	Объект		= Форма.Запись;

	// Наборы элементов
	Если ИмяРеквизита = "РеквизитыСогласования" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, "Согласовано");
		УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, "Отклонено");
		УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, "ДатаСогласования");
		УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, "");
	КонецЕсли;

	// Элементы
	Если ИмяРеквизита = "Отправитель" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"Отправитель", "ТолькоПросмотр", ЗначениеЗаполнено(Объект.Отправитель) И НЕ Форма.ЭтоМодератор);
	КонецЕсли;

	//Если ИмяРеквизита = "ГруппаИнформация" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
	//		"ГруппаИнформация", "Видимость", НЕ Форма.УпрощенныйВид ИЛИ Форма.ЭтоМодератор);
	//КонецЕсли;
	
	Если ИмяРеквизита = "ГруппаСогласование" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ГруппаСогласование", "Видимость", Форма.МодераторИспользуется);
	КонецЕсли;

	//Если ИмяРеквизита = "ГруппаДанныеРазработчика" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
	//		"ГруппаДанныеРазработчика", "Видимость", НЕ Форма.УпрощенныйВид ИЛИ Форма.ЭтоМодератор);
	//КонецЕсли;
	
	Если ИмяРеквизита = "ГруппаОписаниеИзменений" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ГруппаОписаниеИзменений", "Видимость", 
				Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыСообщенийВТехническуюПоддержку.Выполнено") 
					ИЛИ Объект.ОписаниеИзменений <> "");
					
		ТекстЗаголовка = ?(Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыСообщенийВТехническуюПоддержку.ОтклоненоРазработчиком"), "Причина отклонения", "Описание изменений");
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ГруппаОписаниеИзменений", "Заголовок", ТекстЗаголовка);
	КонецЕсли;

	Если ИмяРеквизита = "Согласовано" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"Согласовано", "ТолькоПросмотр", Форма.СообщениеПринято ИЛИ НЕ Форма.ЭтоМодератор);
	КонецЕсли;
	

	Если ИмяРеквизита = "Отклонено"  ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"Отклонено", "ТолькоПросмотр", Форма.СообщениеПринято ИЛИ НЕ Форма.ЭтоМодератор);
	КонецЕсли;

	Если ИмяРеквизита = "ДатаСогласования"  ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ДатаСогласования", "ТолькоПросмотр", Форма.СообщениеПринято ИЛИ НЕ Форма.ЭтоМодератор);
	КонецЕсли;

	// Команды
	Если ИмяРеквизита = "КомандаЗаписатьИЗакрыть" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		ТекстЗаголовка	= ?(Форма.ЭтоМодератор ИЛИ НЕ Форма.МодераторИспользуется, НСтр("ru='Отправить и закрыть'"), НСтр("ru='Записать и закрыть'"));
		КартинкаКоманды	= ?(Форма.ЭтоМодератор ИЛИ НЕ Форма.МодераторИспользуется, БиблиотекаКартинок.ОтправитьЭлектронноеПисьмо, БиблиотекаКартинок.ЗаписатьИЗакрыть);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ФормаЗаписатьИЗакрыть", "Доступность", НЕ Форма.ТолькоПросмотр);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ФормаЗаписатьИЗакрыть", "Заголовок", ТекстЗаголовка);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ФормаЗаписатьИЗакрыть", "Картинка", КартинкаКоманды);
	КонецЕсли;
	
	Если ИмяРеквизита = "ФормаПодтвердитьВыполнение" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		//ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		//	"ФормаПодтвердитьВыполнение", "Видимость", Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыСообщенийВТехническуюПоддержку.Выполнено"));

		//ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
		//	"ФормаПодтвердитьВыполнение", "Доступность", НЕ Объект.Подтверждено);
	КонецЕсли;
	
	Если ИмяРеквизита = "ФормаСоздатьПунктНаОсновании" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ФормаСоздатьПунктНаОсновании", "Видимость", Объект.Статус = ПредопределенноеЗначение("Перечисление.СтатусыСообщенийВТехническуюПоддержку.Выполнено"));

		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ФормаСоздатьПунктНаОсновании", "Доступность", НЕ Объект.Подтверждено);
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьУсловноеОформление(Форма, ИменаРеквизитов = "")

	Если ТипЗнч(ИменаРеквизитов) = Тип("Строка") Тогда
		Если ПустаяСтрока(ИменаРеквизитов) Тогда
			МассивИмен = Новый Массив;
			МассивИмен.Добавить("");
		Иначе
			МассивИмен = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаРеквизитов, ",");
		КонецЕсли;
	ИначеЕсли ТипЗнч(ИменаРеквизитов) = Тип("Массив") Тогда
		МассивИмен = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ИменаРеквизитов);
	Иначе
		Возврат;
	КонецЕсли;
 
	Форма.ТолькоПросмотр = (Форма.СообщениеПринято) 
		ИЛИ (Форма.Запись.Согласовано И НЕ Форма.ЭтоМодератор) 
		ИЛИ (НЕ Форма.Запись.Отправитель = Форма.ТекущийПользователь И НЕ Форма.ЭтоМодератор) 
		ИЛИ (Форма.СообщениеОтправлено И НЕ Форма.МодераторИспользуется);

	Обработано = Новый Массив;
	Для Каждого ИмяРеквизита Из МассивИмен Цикл
		УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, СокрЛП(ИмяРеквизита));
	КонецЦикла;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста 
Процедура ОбновитьЗаголовокГруппаПрисоединенныеФайлы(Форма)
	КолСтрок = Форма.ПрикрепленныеФайлы.Количество();
	
	Форма.Элементы.ГруппаПрисоединенныеФайлы.Заголовок = НСтр("ru='Вложения'")
		+ ?(КолСтрок = 0, "", " (" + Формат(КолСтрок, "ЧГ=") + ")");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияОбъектыМетаданныхНажатие(Элемент)
	
	ЗначениеОтбора 	= Новый Структура("ИдентификаторСообщения", Запись.Идентификатор);
	ПараметрыВыбора = Новый Структура("Отбор", ЗначениеОтбора);
	
	ОткрытьФорму("РегистрСведений.ИсторияИзмененияОбъектов.ФормаСписка", ПараметрыВыбора, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СогласованоПриИзменении(Элемент)
	Запись.ДатаСогласования = ?(Запись.Согласовано, ОбщегоНазначенияКлиент.ДатаСеанса(), Дата(1,1,1));
	Запись.Отклонено = ?(Запись.Согласовано, Ложь, Запись.Отклонено);
	УстановитьУсловноеОформление(ЭтаФорма, "Отклонено");
КонецПроцедуры

&НаКлиенте
Процедура ОтклоненоПриИзменении(Элемент)
	Запись.Согласовано = ?(Запись.Отклонено, Ложь, Запись.Согласовано);
	Запись.ДатаСогласования = ?(Запись.Согласовано, ОбщегоНазначенияКлиент.ДатаСеанса(), Дата(1,1,1));
	
	УстановитьУсловноеОформление(ЭтаФорма, "Согласовано");

КонецПроцедуры

&НаКлиенте
Процедура СвязанноеСообщениеПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	Запись.СвязанноеСообщение = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура СвязанноеСообщениеПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора"		, Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор", Ложь);
	ПараметрыФормы.Вставить("ВыборОснования"	, Истина);

	ОткрытьФорму("РегистрСведений.СообщенияВТехническуюПоддержку.Форма.ФормаСпискаУправляемая", ПараметрыФормы, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура СвязанноеСообщениеПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ТипЗнч(ВыбранноеЗначение) = Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	Запись.СвязанноеСообщение = ВыбранноеЗначение;
	
	ЭтаФорма.Модифицированность = Истина;
	
	УстановитьПредставлениеСвязанногоСообщенияНаСервере();
		
КонецПроцедуры

&НаКлиенте
Процедура СвязанноеСообщениеПредставлениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	Если Ожидание = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ЗаполнитьДанныеВыбора(ДанныеВыбора, Текст);
КонецПроцедуры

&НаКлиенте
Процедура СвязанноеСообщениеПредставлениеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ЗаполнитьДанныеВыбора(ДанныеВыбора, Текст);
КонецПроцедуры

&НаКлиенте
Процедура СвязанноеСообщениеПредставлениеОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Запись.СвязанноеСообщение) Тогда
		Возврат;
	КонецЕсли;

	Структура = Новый Структура("Ключ", ПолучитьКлючЗаписиНаСервере());
  	ОткрытьФорму("РегистрСведений.СообщенияВТехническуюПоддержку.Форма.ФормаЗаписиУправляемая", Структура);	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепленныеФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	
	ВыборФайлов = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ВыборФайлов.МножественныйВыбор	= Истина;
	ВыборФайлов.Заголовок			= НСтр("ru='Выберите прикрепленные файлы...'");
	Если ВыборФайлов.Выбрать() Тогда
		ВыбранныеФайлы = ВыборФайлов.ВыбранныеФайлы;
		
		Если ТипЗнч(ВыбранныеФайлы) = Тип("Строка") Тогда
			МассивФайлов = Новый Массив;
			МассивФайлов.Добавить(ВыбранныеФайлы);
			ВыбранныеФайлы = МассивФайлов;
		КонецЕсли;
		
		Для Каждого ПутьКФайлу Из ВыбранныеФайлы Цикл
			ДобавитьПрисоединенныйФайл(ПутьКФайлу);
		КонецЦикла;
	КонецЕсли;
	
	ОбновитьЗаголовокГруппаПрисоединенныеФайлы(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепленныеФайлыПередУдалением(Элемент, Отказ)
	ТекущиеДанные = Элементы.ПрикрепленныеФайлы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(ТекущиеДанные.АдресХранилища) Тогда
		УдалитьИзВременногоХранилища(ТекущиеДанные.АдресХранилища);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепленныеФайлыПослеУдаления(Элемент)
	ОбновитьЗаголовокГруппаПрисоединенныеФайлы(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыИмя
#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Ключ.Пустой() Тогда
		
		ЭтаФорма.ЭтоНовоеСообщение = Истина;
		
		// При копировании необходимо очистить некоторые старые данные
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			Запись.Статус				= Перечисления.СтатусыСообщенийВТехническуюПоддержку.Новое;
			Запись.ДатаСогласования 	= Дата(1, 1, 1);
			Запись.ДатаОтправки			= Дата(1, 1, 1);
			Запись.ДатаСоздания			= ТекущаяДатаСеанса();
			Запись.ВидИсполнителя		= "";
			Запись.Раздел				= "";
			Запись.КодРазработчика		= 0;
			Запись.ВидРазработчика		= "";
			Запись.СтатусРазработчика	= "";
			Запись.НомерРелиза			= "";
			Запись.Согласовано			= Ложь;
			Запись.Отклонено			= Ложь;
			Запись.ДатаВыполнения		= Дата(1, 1, 1);
			Запись.ЗаданиеНаРазработку	= "";
			Запись.Идентификатор		= Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
		ИнициализацияФормы();
	КонецЕсли;
	
	Если Параметры.ЗначенияЗаполнения.Свойство("ПараметрСсылка") Тогда
		Параметры.ОбъектВладелец = Параметры.ЗначенияЗаполнения.ПараметрСсылка;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если ЭтаФорма.ЭтоНовоеСообщение Тогда
		ДобавитьСкриншотВПрисоединенныеФайлы();
		ДобавитьВыгрузкуЖурналаРегистрации();
		ДобавитьДанныеОбъектаВПрисоединенныеФайлы(Параметры.ОбъектВладелец);
	КонецЕсли;
	
	УстановитьУсловноеОформление(ЭтаФорма);
	ОбновитьЗаголовокГруппаПрисоединенныеФайлы(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ИнициализацияФормы();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СтарыйМассивФайлов = ТекущийОбъект.Файлы.Получить();
	Если НЕ ТипЗнч(СтарыйМассивФайлов) = Тип("Массив") Тогда
		СтарыйМассивФайлов = Новый Массив;
	КонецЕсли;
	
	СоответствиеФайлов = Новый Соответствие;
	Для Каждого СтрокаМассива Из СтарыйМассивФайлов Цикл
		Если СтрокаМассива.Свойство("ИдентификаторФайла") Тогда
			СоответствиеФайлов.Вставить(СтрокаМассива.ИдентификаторФайла,СтрокаМассива);
		КонецЕсли;
	КонецЦикла;
	
	МассивФайлов = Новый Массив;
	
	Для Каждого СтрокаТаблицы Из ЭтаФорма.ПрикрепленныеФайлы Цикл
		Если НЕ ЭтоАдресВременногоХранилища(СтрокаТаблицы.АдресХранилища) Тогда
			СтруктураФайла = СоответствиеФайлов.Получить(СтрокаТаблицы.ИдентификаторФайла);
			Если СтруктураФайла <> Неопределено Тогда
				МассивФайлов.Добавить(СтруктураФайла);
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		СтруктураФайла = Новый Структура;
		СтруктураФайла.Вставить("ПолноеИмя"			, СтрокаТаблицы.ИмяФайла + СтрокаТаблицы.Расширение);
		СтруктураФайла.Вставить("Имя"				, СтрокаТаблицы.ИмяФайла);
		СтруктураФайла.Вставить("Расширение"		, СтрокаТаблицы.Расширение);
		СтруктураФайла.Вставить("Размер"			, СтрокаТаблицы.РазмерЧисло);
		СтруктураФайла.Вставить("ИдентификаторФайла", СтрокаТаблицы.ИдентификаторФайла);
		СтруктураФайла.Вставить("ДвоичныеДанные"	, ПолучитьИзВременногоХранилища(СтрокаТаблицы.АдресХранилища));
		
		МассивФайлов.Добавить(СтруктураФайла);
	КонецЦикла;
	
	Если МассивФайлов.Количество() <> 0 Тогда
		ТекущийОбъект.Файлы = Неопределено;

		ТекущийОбъект.Файлы = Новый ХранилищеЗначения(МассивФайлов, Новый СжатиеДанных(9));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Записан = ЭтаФорма.Записать();
	
	Если НЕ Записан Тогда
		Возврат;
	КонецЕсли; 
	
	ЭтаФорма.Модифицированность = Ложь;
	
	Если Запись.Отклонено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтаФорма.ЭтоМодератор И ЭтаФорма.МодераторИспользуется Тогда
		ЭтаФорма.Закрыть();
		Возврат;	
	КонецЕсли;
		
	Если (ЭтаФорма.ЭтоМодератор И НЕ Запись.Согласовано) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Сообщение не может быть отправлено без согласования.'"),, "Запись.Согласовано");
		Возврат;
	КонецЕсли;

	Если НЕ ПроверитьПараметрыОтправкиСообщений() Тогда
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = НСтр("ru='Сообщение будет отправлено в фоновом режиме.'");

	ДопПараметры = Новый Структура;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаписатьИЗакрытьЗавершение", ЭтаФорма, ДопПараметры);
	ПоказатьПредупреждение(ОписаниеОповещения, ТекстСообщения, 30);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	ТекущиеДанные = Элементы.ПрикрепленныеФайлы.ТекущиеДанные;

	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.свойство("ИмяФайла") = Ложь Тогда
		Возврат;
	КонецЕсли;
		
	Если ТекущиеДанные.ПутьКФайлу <> "" Тогда
		Если ТекущиеДанные.ИмяФайла = "Журнал регистрации" Тогда
			ПоказатьПредупреждение(,НСтр("ru='Просмотр журнала регистрации невозможен'"));
		Иначе
			ЗапуститьПриложение(ТекущиеДанные.ПутьКФайлу);	
		КонецЕсли; 
	Иначе
		ИдентификаторСообщения = Запись.Идентификатор;
		ИдентификаторФайла = ТекущиеДанные.ИдентификаторФайла;
		Если ИдентификаторФайла = "" Тогда
			ПоказатьПредупреждение(,"Файл удален из базы данных.",30);
			Возврат;	
		КонецЕсли;
		
		Файл = ПолучитьФайлСервере(ИдентификаторСообщения,ИдентификаторФайла);
		Если Файл = Неопределено Тогда
			ПоказатьПредупреждение(,"Файл удален из базы данных.",30);
		Иначе
			Если ТипЗнч(Файл) = Тип("Структура") Тогда
				Если Файл.ДвоичныеДанные = Неопределено ТОгда
					ПоказатьПредупреждение(,"Файл удален из базы данных.",30);
				Иначе
					ИмяФайла = ПолучитьИмяВременногоФайла(Файл.Расширение);
					Файл.ДвоичныеДанные.Записать(ИмяФайла);
					ЗапуститьПриложение(ИмяФайла);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСкриншот(Команда)
	ДобавитьСкриншотВПрисоединенныеФайлы();
	ОбновитьЗаголовокГруппаПрисоединенныеФайлы(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьВыполнение(Команда)
	Запись.Подтверждено 		= Истина;
	Запись.ПодтвержденоКогда	= ТекущаяДата();
	Запись.ПодтвержденоКем		= ПользователиКлиентСервер.АвторизованныйПользователь();
	Записан = ЭтаФорма.Записать();
	
	Если НЕ Записан Тогда
		Запись.Подтверждено 		= Ложь;
		Запись.ПодтвержденоКогда	= Неопределено;
		Запись.ПодтвержденоКем		= Неопределено;

		Возврат;
	КонецЕсли; 

	УстановитьУсловноеОформление(ЭтаФорма, "ФормаПодтвердитьВыполнение");
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПунктНаОсновании(Команда)
	ПараметрыЗаполнения = Новый Структура();
	ПараметрыЗаполнения.Вставить("СвязанноеСообщение", Запись.Идентификатор);
	
	ТемаСвязанногоСообщения = СтрШаблон(НСтр("ru='Замечания по п. %1 [%2]'"), Запись.КодРазработчика, Запись.Тема); 
	
	ПараметрыЗаполнения.Вставить("Тема"	, ТемаСвязанногоСообщения);
		
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ПараметрыЗаполнения);

	ОткрытьФорму("РегистрСведений.СообщенияВТехническуюПоддержку.ФормаЗаписи", ПараметрыФормы);
КонецПроцедуры

#КонецОбласти

#Область ЗавершениеНемодальныхВызовов

&НаКлиенте
Процедура ЗаписатьИЗакрытьЗавершение(Результат) Экспорт	
	
	ЭтаФорма.Закрыть();
	
	Соответствие = Новый Соответствие(); 
	Соответствие.Вставить(Запись.Идентификатор, Запись.Отправитель);

	РезультатВыполнения = ВыполнитьОтправкуСообщенияНаСервере(Соответствие);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте 
Процедура ДобавитьПрисоединенныйФайл(ПутьКФайлу, ИмяФайла = "", Расширение = "")
	Файл = Новый Файл(ПутьКФайлу);
	Если НЕ Файл.Существует() Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяФайла) Тогда
		ИмяФайла = Файл.ИмяБезРасширения;
	КонецЕсли;
	Если ПустаяСтрока(Расширение) Тогда
		Расширение = Файл.Расширение;
	КонецЕсли;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКФайлу);
	
	НоваяСтрока = ЭтаФорма.ПрикрепленныеФайлы.Добавить();
	НоваяСтрока.ПутьКФайлу			= ПутьКФайлу;
	НоваяСтрока.ИмяФайла			= ИмяФайла;
	НоваяСтрока.Расширение			= Расширение;
	НоваяСтрока.РазмерЧисло			= Файл.Размер();
	НоваяСтрока.Размер				= ПолучитьСтрокуРазмерФайла(НоваяСтрока.РазмерЧисло);
	НоваяСтрока.ИдентификаторФайла 	= Строка(Новый УникальныйИдентификатор);
	НоваяСтрока.АдресХранилища		= ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте 
Процедура ДобавитьСкриншотВПрисоединенныеФайлы()
	ПутьКПрограмме = ПолучитьПутьКФайлуCaptureScreen();
	Если ПустаяСтрока(ПутьКПрограмме) Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоСкриншотов = 0;
	Для Каждого СтрокаТаблицы Из ПрикрепленныеФайлы Цикл
		Если Лев(СтрокаТаблицы.ИмяФайла, 26) = "ScreenShot (снимок экрана)" Тогда
			КоличествоСкриншотов = КоличествоСкриншотов + 1;
		КонецЕсли;
	КонецЦикла;
	
	ИмяФайла = "ScreenShot (снимок экрана)" + ?(КоличествоСкриншотов > 0, " (" + Формат(КоличествоСкриншотов, "ЧЦ=10; ЧГ=") + ")", "") + ".jpg";
	
	ВременныйФайл = ПолучитьИмяВременногоФайла("jpg");
	Команда = ПутьКПрограмме + " """ + ВременныйФайл + """";
	
	ЗапуститьПриложение(Команда,, Истина);
	ДобавитьПрисоединенныйФайл(ВременныйФайл, ИмяФайла);
	
	//СкриптShell = Новый COMОбъект("WScript.Shell");
	//СкриптShell.Run(Команда,0,Истина);
	//
	//Возврат ВременныйФайл;
	
	// CaptureScreen.exe
	// параметр - путь к файлу jpg
	//
	// также можно использовать
	// CmdCapture.exe более подробно тут
	// /f - путь к файлу (png, jpg, tif, bmp, xmp)
	// http://www.ducklink.com/free-command-line-screen-capture.php
	
	//ФайлПрограммы = """" + КаталогПрограммы() + ?(Прав(КаталогПрограммы(),1) = "\","","\") + "CmdCapture.exe""";
	//Команда = ФайлПрограммы + " /f """+ВременныйФайл+"""";
КонецПроцедуры

&НаКлиенте 
Процедура ДобавитьВыгрузкуЖурналаРегистрации()
	
	ДобавитьВыгрузкуЖурналаРегистрацииНаСервере();
	
КонецПроцедуры

&НаКлиенте 
Процедура ДобавитьДанныеОбъектаВПрисоединенныеФайлы(ОбъектСсылка = Неопределено)
	Если ОбъектСсылка = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ДанныеОбъекта = ПолучитьДанныеОбъектаНаСервере(ОбъектСсылка);
	Если ТипЗнч(ДанныеОбъекта) = Тип("ТабличныйДокумент") Тогда
		ДанныеОбъекта = ПолучитьДвиженияДокументаНаСервере(ОбъектСсылка);
		
		Если ДанныеОбъекта <> Неопределено Тогда
			ВременныйФайл = ПолучитьИмяВременногоФайла("xls");
			ИмяОбъекта = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(Строка(ОбъектСсылка), "");

			ДанныеОбъекта.Записать(ВременныйФайл, ТипФайлаТабличногоДокумента.XLS);
			ДобавитьПрисоединенныйФайл(ВременныйФайл, "Движения документа" + " (" + ИмяОбъекта + ")", ".xls");
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Функция ПолучитьДанныеОбъектаНаСервере(ОбъектСсылка = Неопределено)

	//Для документа сформируем отчет по движениям
	ОбъектМетаданных = ОбъектСсылка.Метаданные();
	
	Если ОбщегоНазначения.ЭтоДокумент(ОбъектМетаданных) Тогда
		Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОбъектСсылка, "Проведен") = Истина Тогда
			Возврат ПолучитьДвиженияДокументаНаСервере(ОбъектСсылка);
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаСервере 
Функция ПолучитьДвиженияДокументаНаСервере(ОбъектСсылка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДвиженияДокумета = Отчеты.ДвиженияДокументаПТБ.ПолучитьДанныеОтчета(ОбъектСсылка);
	
	Возврат ДвиженияДокумета;
	
	УстановитьПривилегированныйРежим(Ложь);

КонецФункции

&НаСервере 
Функция ПолучитьXMLДанныеОбъекта(ОбъектСсылка)
	
    ЗаписьXML = Новый ЗаписьXML;
    ЗаписьXML.УстановитьСтроку();
    ЗаписатьXML(ЗаписьXML, ОбъектСсылка.ПолучитьОбъект());
    Возврат ЗаписьXML.Закрыть();
	
КонецФункции

&НаКлиенте 
Процедура ЗаполнитьДанныеВыбора(СписокВыбора, Текст)
	
	СписокВыбора = ПолучитьДанныеВыбораНаСервере(Текст);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПутьКФайлуCaptureScreen()
	ПутьКФайлу = КаталогВременныхФайлов() + ?(Прав(КаталогВременныхФайлов(),1) = "\","","\") + "CaptureScreen.exe";
	
	Файл = Новый Файл(ПутьКФайлу);
	Если Файл.Существует() Тогда
		Возврат ПутьКФайлу;
	КонецЕсли;
	
	АдресХранилища = ПолучитьАдресХранилищаCaptureScreenНаСервере();
	Если НЕ ЭтоАдресВременногоХранилища(АдресХранилища) Тогда
		Возврат "";
	КонецЕсли;
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресХранилища);
	ДвоичныеДанные.Записать(ПутьКФайлу);
	
	Возврат ПутьКФайлу;
КонецФункции

&НаСервереБезКонтекста 
Функция ПолучитьСтрокуРазмерФайла(РазмерФайла)
	Если РазмерФайла > 1000000 Тогда
		Делитель	= 1000000;
		Измерение	= "Мб";
	ИначеЕсли РазмерФайла > 1000 Тогда
		Делитель	= 1000;
		Измерение	= "Кб";
	Иначе
		Делитель	= 1;
		Измерение	= "б";
	КонецЕсли;
	
	Возврат Формат(РазмерФайла / Делитель, "ЧЦ=15; ЧДЦ=2; ЧГ=") + " " + Измерение;
КонецФункции

&НаСервереБезКонтекста 
Функция ПолучитьДанныеВыбораНаСервере(Текст)
	
	ДлинаТекста = СтрДлина(Текст);
	Если ДлинаТекста < 3 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СписокВыбора = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подстрока", "%" + Текст + "%");
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 25
	|	СообщенияВТехническуюПоддержку.Идентификатор,
	|	СообщенияВТехническуюПоддержку.КодРазработчика КАК КодРазработчика,
	|	СообщенияВТехническуюПоддержку.Тема
	|ИЗ
	|	РегистрСведений.СообщенияВТехническуюПоддержку КАК СообщенияВТехническуюПоддержку
	|ГДЕ
	|	СообщенияВТехническуюПоддержку.Тема ПОДОБНО &Подстрока
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодРазработчика УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокВыбора.Добавить(Выборка.Идентификатор, "(" + Формат(Выборка.КодРазработчика, "ЧН=б/н; ЧГ=") + ") " + Выборка.Тема);
	КонецЦикла;
	
	Возврат СписокВыбора;
	
КонецФункции

&НаСервереБезКонтекста 
Функция ПолучитьАдресХранилищаCaptureScreenНаСервере()
	Возврат РегистрыСведений.СообщенияВТехническуюПоддержку.ПолучитьАдресХранилищаCaptureScreen();
КонецФункции
	
&НаСервереБезКонтекста 
Функция ВыполнитьОтправкуСообщенияНаСервере(Соответствие)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("СоответствиеСообщений", Соответствие);
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		РегистрыСведений.СообщенияВТехническуюПоддержку.ОтправитьСообщенияАСУСО(СтруктураПараметров);		
	Иначе
		КлючЗадания = Новый УникальныйИдентификатор;
		СтруктураВозврат = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
			КлючЗадания, 
			"РегистрыСведений.СообщенияВТехническуюПоддержку.ОтправитьСообщенияАСУСО",
			СтруктураПараметров, 
			"Отправка сообщения в техподдержку"); 

	КонецЕсли; 
	
	Возврат СтруктураВозврат;

КонецФункции
&НаСервере 
Процедура ЗаполнитьВложенныеФайлыНаСервере()
	Если ЭтаФорма.ЭтоНовоеСообщение Тогда
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.ПрикрепленныеФайлы.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Идентификатор", Запись.Идентификатор);
	Запрос.УстановитьПараметр("Отправитель", Запись.Отправитель);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СообщенияВТехническуюПоддержку.Файлы
	|ИЗ
	|	РегистрСведений.СообщенияВТехническуюПоддержку КАК СообщенияВТехническуюПоддержку
	|ГДЕ
	|	СообщенияВТехническуюПоддержку.Идентификатор = &Идентификатор
	|	И СообщенияВТехническуюПоддержку.Отправитель = &Отправитель";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Файлы = Выборка.Файлы.Получить();
	Если НЕ ТипЗнч(Файлы) = Тип("Массив") Тогда
		Файлы = Новый Массив;
	КонецЕсли;
	
	Для Каждого СтруктураДанных Из Файлы Цикл
		ПолноеИмя = СтруктураДанных.Имя;
		Если НЕ СтруктураДанных.Свойство("Расширение") Тогда
			Позиция = СтрНайти(ПолноеИмя, ".", НаправлениеПоиска.СКонца);
			
			СтруктураДанных.Вставить("Имя", Лев(ПолноеИмя, Позиция-1));
			СтруктураДанных.Вставить("Расширение", Сред(ПолноеИмя, Позиция));
		ИначеЕсли Найти(ПолноеИмя, СтруктураДанных.Расширение) > 0 Тогда  
			СтруктураДанных.Вставить("Имя", СтрЗаменить(ПолноеИмя, СтруктураДанных.Расширение, ""));
		КонецЕсли;
		
		НоваяСтрока = ЭтаФорма.ПрикрепленныеФайлы.Добавить();
		НоваяСтрока.ИмяФайла			= СтруктураДанных.Имя;
		НоваяСтрока.Расширение			= СтруктураДанных.Расширение;
		НоваяСтрока.РазмерЧисло			= СтруктураДанных.Размер;
		НоваяСтрока.Размер				= ПолучитьСтрокуРазмерФайла(НоваяСтрока.РазмерЧисло);
		НоваяСтрока.ИдентификаторФайла 	= ?(СтруктураДанных.Свойство("ИдентификаторФайла"),СтруктураДанных.ИдентификаторФайла,"");;

	КонецЦикла;
КонецПроцедуры

&НаСервере 
Процедура УстановитьПредставлениеСвязанногоСообщенияНаСервере()
	Если НЕ ЗначениеЗаполнено(Запись.СвязанноеСообщение) Тогда
		ЭтаФорма.СвязанноеСообщениеПредставление = "";
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Идентификатор", Запись.СвязанноеСообщение);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СообщенияВТехническуюПоддержку.Тема,
	|	СообщенияВТехническуюПоддержку.КодРазработчика
	|ИЗ
	|	РегистрСведений.СообщенияВТехническуюПоддержку КАК СообщенияВТехническуюПоддержку
	|ГДЕ
	|	СообщенияВТехническуюПоддержку.Идентификатор = &Идентификатор";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Представление = "(" + Формат(Выборка.КодРазработчика, "ЧН=б/н; ЧГ=") + ") " + Выборка.Тема;
	Иначе 
		Представление = "";
	КонецЕсли;   
	
	ЭтаФорма.СвязанноеСообщениеПредставление = Представление;
КонецПроцедуры

&НаСервере 
Процедура ДобавитьВыгрузкуЖурналаРегистрацииНаСервере()
	ПутьКФайлу = ПолучитьИмяВременногоФайла("xml");
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ДатаНачала"	, ?(Запись.ДатаСоздания = Дата(1, 1, 1), ТекущаяДатаСеанса(), Запись.ДатаСоздания) - 20*60);
	СтруктураОтбора.Вставить("ДатаОкончания", ?(Запись.ДатаСоздания = Дата(1, 1, 1), ТекущаяДатаСеанса(), Запись.ДатаСоздания));
	СтруктураОтбора.Вставить("Пользователь"	, ПользователиИнформационнойБазы.ТекущийПользователь());
	
	ВыгрузитьЖурналРегистрации(ПутьКФайлу, СтруктураОтбора,,,200);
	
	ИмяФайла	= "Журнал регистрации";
	Расширение	= ".xml";
	
	Файл = Новый Файл(ПутьКФайлу);
	Если НЕ Файл.Существует() Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяФайла) Тогда
		ИмяФайла = Файл.ИмяБезРасширения;
	КонецЕсли;
	Если ПустаяСтрока(Расширение) Тогда
		Расширение = Файл.Расширение;
	КонецЕсли;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКФайлу);
	
	НоваяСтрока = ЭтаФорма.ПрикрепленныеФайлы.Добавить();
	НоваяСтрока.ПутьКФайлу			= ПутьКФайлу;
	НоваяСтрока.ИмяФайла			= ИмяФайла;
	НоваяСтрока.Расширение			= Расширение;
	НоваяСтрока.РазмерЧисло			= Файл.Размер();
	НоваяСтрока.Размер				= ПолучитьСтрокуРазмерФайла(НоваяСтрока.РазмерЧисло);
	НоваяСтрока.ИдентификаторФайла 	= Строка(Новый УникальныйИдентификатор);
	НоваяСтрока.АдресХранилища		= ПоместитьВоВременноеХранилище(ДвоичныеДанные, ЭтаФорма.УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере 
Функция ПолучитьКлючЗаписиНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Идентификатор", Запись.СвязанноеСообщение);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СообщенияВТехническуюПоддержку.Отправитель
	|ИЗ
	|	РегистрСведений.СообщенияВТехническуюПоддержку КАК СообщенияВТехническуюПоддержку
	|ГДЕ
	|	СообщенияВТехническуюПоддержку.Идентификатор = &Идентификатор";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ОтправительСообщения = Выборка.Отправитель;
	Иначе 
		ОтправительСообщения = Неопределено;
	КонецЕсли;   
	
	Возврат РегистрыСведений.СообщенияВТехническуюПоддержку.СоздатьКлючЗаписи(Новый Структура("Идентификатор, Отправитель", Запись.СвязанноеСообщение, ОтправительСообщения));
	
КонецФункции

&НаСервереБезКонтекста
Функция ПоказатьИзмененныеОбъектыНаСервере(ИдентификаторСообщения = "", ПолноеИмяОбъекта = "", РелизКонфигурации = "") Экспорт
	
	МассивОбъектов = РегистрыСведений.ИсторияИзмененияОбъектов.ПоказатьИзмененныеОбъекты(ИдентификаторСообщения, ПолноеИмяОбъекта, РелизКонфигурации);
	
	Возврат МассивОбъектов;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьФайлСервере(ИдентификаторСообщения,ИдентификаторФайла = "")
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ Первые 1
	|	СообщенияВТехническуюПоддержку.Файлы
	|ИЗ
	|	РегистрСведений.СообщенияВТехническуюПоддержку КАК СообщенияВТехническуюПоддержку
	|ГДЕ
	|	СообщенияВТехническуюПоддержку.Идентификатор = &ИдентификаторСообщения";
	Запрос.УстановитьПараметр("ИдентификаторСообщения"	,ИдентификаторСообщения);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено
	Иначе
		Выборка = Результат.Выбрать();
		НайденныйФайл = Неопределено;

		Если Выборка.Следующий() Тогда
			МассивФайлов = Выборка.Файлы.Получить();
			Для Каждого Файл Из МассивФайлов Цикл
				Если Файл.ИдентификаторФайла = ИдентификаторФайла Тогда
					НайденныйФайл = Файл;
					Прервать;
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
		
		Возврат НайденныйФайл;

	КонецЕсли;
КонецФункции

&НаСервере 
Функция ПроверитьПараметрыОтправкиСообщений()

	Возврат РегистрыСведений.СообщенияВТехническуюПоддержку.ПроверитьСтруктуруЗаполненияПараметровДляОтправкиСообщенияВОтделТехническойПоддержки(Истина);
	
КонецФункции

#КонецОбласти
 
