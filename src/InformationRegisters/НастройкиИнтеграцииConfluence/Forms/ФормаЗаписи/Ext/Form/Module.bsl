
#Область УправлениеФормой

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, ИмяРеквизита)

	Если НЕ Обработано.Найти(ИмяРеквизита) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Обработано.Добавить(ИмяРеквизита);

	Элементы	= Форма.Элементы;
	Объект		= Форма.Запись;

	#Область Наборы
	
	Если ИмяРеквизита = "РеквизитыДоступПроверен" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
		УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, "ГруппаДоступПроверен");
	КонецЕсли;

	#КонецОбласти
	
	#Область Элементы
	
	Если ИмяРеквизита = "ГруппаДоступПроверен" Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ГруппаДоступПроверен", "Видимость", Объект.ДоступПроверен);
	КонецЕсли;

	#КонецОбласти 
	
	#Область ТабЧасть_Имя
	
	//Если ИмяРеквизита = "ИмяТабличнойЧастиОтветственный" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
	//		"ИмяТабличнойЧастиОтветственный", "ТолькоПросмотр", ЗначениеЗаполнено(Объект.Ответственный));
	//КонецЕсли;

	#КонецОбласти
	
	#Область Команды
	
	//Если ИмяРеквизита = "КомандаЗаполнить" ИЛИ ПустаяСтрока(ИмяРеквизита) Тогда
	//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
	//		"ТаблицаФормыЗаполнить", "Видимость", НЕ Объект.Проведен);
	//КонецЕсли;

	#КонецОбласти 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьУсловноеОформление(Форма, ИменаРеквизитов = "")

	Если ТипЗнч(ИменаРеквизитов) = Тип("Строка") Тогда
		Если ПустаяСтрока(ИменаРеквизитов) Тогда
			МассивИмен = Новый Массив;
			МассивИмен.Добавить("");
		Иначе
			МассивИмен = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаРеквизитов, ",");
		КонецЕсли;
	ИначеЕсли ТипЗнч(ИменаРеквизитов) = Тип("Массив") Тогда
		МассивИмен = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ИменаРеквизитов);
	Иначе
		Возврат;
	КонецЕсли;
 
	//Форма.ТолькоПросмотр = (Форма.СостоянияЗаблокировано.Найти(Форма.СведенияОЗаявкеСостояние) <> Неопределено);

	Обработано = Новый Массив;
	Для Каждого ИмяРеквизита Из МассивИмен Цикл
		УстановитьУсловноеОформлениеРеквизита(Форма, Обработано, СокрЛП(ИмяРеквизита));
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ИмяТаблицы
#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Запись.Пользователь) Тогда
		Запись.Пользователь = Пользователи.ТекущийПользователь();
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Запись.БазаЗнаний) Тогда
		Запись.БазаЗнаний = Справочники.БазыЗнанийConfluence.ОсновнаяБазаЗнаний();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьУсловноеОформление(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// Вставить содержимое обработчика.
КонецПроцедуры
 
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	НеПроверятьДоступ = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыЗаписи, "НеПроверятьДоступ", Ложь);
	
	Если НеПроверятьДоступ = Ложь И НЕ Запись.ДоступПроверен Тогда
		РеквизитыЗаполнены = (ЗначениеЗаполнено(Запись.БазаЗнаний)
			И ЗначениеЗаполнено(Запись.Логин)
			И ЗначениеЗаполнено(Запись.ТокенID));
			
		Если РеквизитыЗаполнены Тогда
			Отказ = Истина;
			ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗаписьюВопросПроверкиЗавершение", ЭтотОбъект);
			ПоказатьВопрос(ОписаниеОповещения, НСтр("ru='Для интеграции с Confluence необходимо проверить логин и токен.
			|Без выполненной проверки обмен невозможен. Выполнить проверку сейчас?'"), РежимДиалогаВопрос.ДаНетОтмена, 60,,, КодВозвратаДиалога.Отмена);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Пользователь"	, Запись.Пользователь);
	ПараметрыОповещения.Вставить("БазаЗнаний"	, Запись.БазаЗнаний);
	
	Оповестить("НастройкиИнтеграцииConfluenceИзменение", ПараметрыОповещения, ЭтотОбъект.ИмяФормы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьДоступ(Команда)
	НастройкиПодключения = ПолучитьНастройкиПодключенияНаСервере(Запись.БазаЗнаний, Запись.Логин, Запись.ТокенID);
	Запись.ДоступПроверен = ВыполнитьПроверкуПодключенияConfluence(НастройкиПодключения);
	
	УстановитьУсловноеОформление(ЭтотОбъект, "РеквизитыДоступПроверен");
КонецПроцедуры

#КонецОбласти

#Область ЗавершениеНемодальныхВызовов

&НаКлиенте
Процедура ПередЗаписьюВопросПроверкиЗавершение(РезультатВопроса, ПараметрыВыполнения) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда 
		Возврат;
	КонецЕсли;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		НастройкиПодключения = ПолучитьНастройкиПодключенияНаСервере(Запись.БазаЗнаний, Запись.Логин, Запись.ТокенID);
		Запись.ДоступПроверен = ВыполнитьПроверкуПодключенияConfluence(НастройкиПодключения);
	КонецЕсли;
	
	УстановитьУсловноеОформление(ЭтотОбъект, "РеквизитыДоступПроверен");
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("НеПроверятьДоступ", Истина);
	
	ЭтотОбъект.Записать(ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВыполнитьПроверкуПодключенияConfluence(знач Настройки)
	ДанныеПользователя	= ИнтеграцияConfluenceКлиентСервер.ПолучитьТекущегоПользователя(Настройки);
	ПроизошлаОшибка		= ИнтеграцияConfluenceКлиентСервер.ПроверитьОшибки(ДанныеПользователя, Истина);
	
	Возврат НЕ ПроизошлаОшибка;
КонецФункции

&НаСервереБезКонтекста 
Функция ПолучитьНастройкиПодключенияНаСервере(знач БазаЗнанийСсылка, знач Логин, знач ТокенID)
	Возврат ИнтеграцияConfluenceВызовСервераПовтИсп.НастройкиПодключенияПоЛогину(БазаЗнанийСсылка, Логин, ТокенID);
КонецФункции

#КонецОбласти

